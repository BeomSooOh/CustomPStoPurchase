<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="CompManage">
	
	<typeAlias  alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>

		<select id="CompManage.getCompList" parameterClass="hashmap" resultClass="egovMap">
			SELECT *
			FROM t_co_comp A, t_co_comp_multi B 
			WHERE
				A.comp_seq = B.comp_seq
				
				AND A.group_seq = #groupSeq#
				AND	B.lang_code = #langCode#
				AND	A.use_yn = 'Y'
				
				<isNotEmpty property="compSeq">  
				AND	A.comp_seq = #compSeq#
				</isNotEmpty>
				
			order by A.order_num
		</select>

		<select id="CompManage.getComp" parameterClass="hashmap" resultClass="egovMap">
			select *
			from t_co_comp
			where
				comp_seq = #compSeq#
				and	use_yn = 'Y'
			limit 1
		</select>
		
		<select id="CompManage.getCompMulti" parameterClass="hashmap" resultClass="egovMap">
			select *
			from t_co_comp_multi
			where
				comp_seq = #compSeq#
				and lang_code = #langCode#
				and	use_yn = 'Y'
			limit 1
		</select>
		
		<select id="CompManage.getCompListAuth" parameterClass="hashmap" resultClass="egovMap">
			SELECT A.comp_seq, B.comp_name
			FROM t_co_comp A, t_co_comp_multi B 
				<isNotEqual property="userSe" compareValue="MASTER">  	
				<isNotEqual property="loginId" compareValue="master"> 
					, t_co_auth_adm_user_relate C
				</isNotEqual>	 
				</isNotEqual>	 
			WHERE
				A.comp_seq = B.comp_seq
				<isNotEqual property="userSe" compareValue="MASTER">  				
				<isNotEqual property="loginId" compareValue="master">  				
				AND	A.comp_seq = C.comp_seq	
				AND	C.emp_seq = #empSeq#
				</isNotEqual>
				</isNotEqual>
				AND A.group_seq = #groupSeq#
				AND	B.lang_code = #langCode#
				AND	A.use_yn = 'Y'
				
				<isEqual property="userSe" compareValue="USER">
						<isNotEmpty property="compSeq">  
				AND	A.comp_seq = #compSeq#
						</isNotEmpty>
				</isEqual>
				
			GROUP BY A.comp_seq	
			ORDER BY A.order_num
		</select>

	    <update id="CompManage.updateComp" parameterClass="hashmap">
			UPDATE `t_co_comp` 
				SET
				<isNotEmpty property="compRegistNum">
				`comp_regist_num` = #compRegistNum# ,
				</isNotEmpty>
				<isNotEmpty property="compNum"> 
				`comp_num` = #compNum# , 
				</isNotEmpty>
				<isNotEmpty property="standardCode">
				`standard_code` = #standardCode# ,
				</isNotEmpty>
				<isNotEmpty property="telNum"> 
				`tel_num` = #telNum# , 
				</isNotEmpty>
				<isNotEmpty property="faxNum">
				`fax_num` = #faxNum# , 
				</isNotEmpty>
				<isNotEmpty property="homepgAddr">
				`homepg_addr` = #homepgAddr# , 
				</isNotEmpty>
				<isNotEmpty property="emailAddr">
				`email_addr` = #emailAddr# , 
				</isNotEmpty>
				<isNotEmpty property="emailDomain">
				`email_domain` = #emailDomain# ,
				</isNotEmpty>
				<isNotEmpty property="zipCode"> 
				`zip_code` = #zipCode# , 
				</isNotEmpty>
				<isNotEmpty property="smsId">
				`sms_id` = #smsId# , 
				</isNotEmpty>
				<isNotEmpty property="smsPasswd">
				`sms_passwd` = #smsPasswd# , 
				</isNotEmpty>
				<isNotEmpty property="useYn">
				`use_yn` = #useYn# , 
				</isNotEmpty>
				`modify_seq` = #modifySeq# , 
				`modify_date` = now()
				WHERE
				`comp_seq` = #compSeq#
	    </update>
	    
	     <update id="CompManage.updateCompMulti" parameterClass="hashmap">
	     	UPDATE `t_co_comp_multi` 
			SET
				<isNotEmpty property="compName">
				`comp_name` = #compName# , 
				</isNotEmpty>
				<isNotEmpty property="compDisplayName">
				`comp_display_name` = #compDisplayName# ,
				</isNotEmpty>
				<isNotEmpty property="ownerName"> 
				`owner_name` = #ownerName# , 
				</isNotEmpty>
				<isNotEmpty property="senderName">
				`sender_name` = #senderName# , 
				</isNotEmpty>
				<isNotEmpty property="bizCondition">
				`biz_condition` = #bizCondition# ,
				</isNotEmpty>
				<isNotEmpty property="item"> 
				`item` = #item# , 
				</isNotEmpty>
				<isNotEmpty property="addr">
				`addr` = #addr# , 
				</isNotEmpty>
				<isNotEmpty property="detailAddr">
				`detail_addr` = #detailAddr# , 
				</isNotEmpty>
				<isNotEmpty property="useYn">
				`use_yn` = #useYn# , 
				</isNotEmpty>
				`modify_seq` = #modifySeq# , 
				`modify_date` = now()
			WHERE
				`comp_seq` = #compSeq# AND `lang_code` = #langCode#
	     </update>
	     
	     
	     
	    
	     
	     <insert id="CompManage.insertCompLang" parameterClass="hashmap">
	     	INSERT INTO `t_co_comp_lang`
			SET 
				lang_code 				= 			#langCode#,
				comp_seq 				= 			#compSeq#,
				main_yn					= 			#mainYn#,
				<isNotEmpty property="subYn">
				sub_yn 					= 			#subYn#,
				</isNotEmpty>
				create_seq 				= 			#createSeq#,
				create_date 			= 			now(), 
				modify_seq 				= 			#modifySeq#, 
				modify_date				 = 			now()
			ON DUPLICATE KEY UPDATE
				main_yn					= 			#mainYn#,
				<isNotEmpty property="subYn">
				sub_yn 					= 			#subYn#,
				</isNotEmpty>
				modify_seq 				= 			#modifySeq#, 
				modify_date				 = 			now()
	     </insert>
	     
	     <update id="CompManage.updateCompLang" parameterClass="hashmap">
	     	UPDATE `t_co_comp_lang`
	     	SET
	     		main_yn					= 			#mainYn#,
				sub_yn 					= 			#subYn#,
				modify_seq 				= 			#modifySeq#, 
				modify_date				= 			now()
			WHERE
				comp_seq = #compSeq#
				<isNotEmpty property="langCode">
				AND	lang_code = #langCode#
				</isNotEmpty>
	     </update>
	     
	     <select id="CompManage.selectCompDutyPositionList" parameterClass="hashmap" resultClass="egovMap">
	     	SELECT * 
	     	FROM `t_co_comp_duty_position` a, `t_co_comp_duty_position_multi` b
			WHERE a.dp_seq = b.dp_seq
				<isNotEmpty property="dpSeq">
				AND	a.dp_seq = #dpSeq#
				</isNotEmpty>
				<isEmpty property="dpSeq">
				AND a.comp_seq = #compSeq#
				AND a.dp_type = #dpType#
				</isEmpty>
				AND b.lang_code = #langCode#
				AND a.use_yn = 'Y'
				AND b.use_yn = 'Y'
	     	ORDER BY a.order_num
	     </select> 
	    
	    <insert id="CompManage.insertCompDutyPosition" parameterClass="neos.cmm.systemx.comp.vo.CompDutyPositionVO">
	    	INSERT INTO `t_co_comp_duty_position` 
			SET
				`dp_seq` = #dpSeq# , 
				`comp_seq` = #compSeq# , 
				`dp_type` = #dpType# , 
				`use_yn` = #useYn# , 
				`order_num` = #orderNum# , 
				`create_seq` = #createSeq# , 
				`create_date` = NOW(), 
				`modify_seq` = #modifySeq# , 
				`modify_date` = NOW()
			ON DUPLICATE KEY UPDATE
				`comp_seq` = #compSeq# , 
				`dp_type` = #dpType# , 
				`use_yn` = #useYn# , 
				`order_num` = #orderNum# , 
				`modify_seq` = #modifySeq# , 
				`modify_date` = NOW()
	    </insert>
	     
	    <insert id="CompManage.insertCompDutyPositionMulti" parameterClass="neos.cmm.systemx.comp.vo.CompDutyPositionMultiVO">
		    INSERT INTO `t_co_comp_duty_position_multi` 
			SET
				`dp_seq` = #dpSeq# , 
				`lang_code` = #langCode# , 
				`comp_seq` = #compSeq# , 
				`dp_type` = #dpType# , 
				`dp_name` = #dpName# , 
				`desc_text` = #descText# , 
				`comment_text` = #commentText# , 
				`use_yn` = #useYn# , 
				`create_seq` = #createSeq# , 
				`create_date` = NOW(), 
				`modify_seq` = #modifySeq# , 
				`modify_date` = NOW()
			ON DUPLICATE KEY UPDATE
				`comp_seq` = #compSeq# , 
				`dp_type` = #dpType# , 
				`dp_name` = #dpName# , 
				`desc_text` = #descText# , 
				`comment_text` = #commentText# , 
				`use_yn` = #useYn# , 
				`modify_seq` = #modifySeq# , 
				`modify_date` = NOW()
	    </insert>
	    
	    
	    <select id="CompManage.selectCompDutyPositionMaxSeq" resultClass="string">
	    	SELECT MAX(dp_seq) FROM `t_co_comp_duty_position`
	    </select>
	    
	     <delete id="CompManage.deleteCompDutyPosition" parameterClass="hashmap">
	    	DELETE 
	    	FROM `t_co_comp_duty_position` 
			WHERE
			`dp_seq` = #dpSeq#
	    	
	    
	    </delete>
	    
	    <delete id="CompManage.deleteCompDutyMultiPosition" parameterClass="hashmap">
	    	DELETE 
	    	FROM `t_co_comp_duty_position_multi` 
			WHERE
			`dp_seq` = #dpSeq#	    	
	    
	    </delete>
	    
	    <update id="CompManage.updateCompDutyPositionSort" parameterClass="hashmap">
	    	UPDATE `t_co_comp_duty_position`
	    	SET
	    		order_num = #orderNum#
	    	WHERE
	    		dp_seq = #dpSeq#
	    </update>
 
 		<select id="CompManage.getGroupCompList_TOTALCOUNT" parameterClass="hashmap" resultClass="string">
	    	SELECT 
				COUNT(a.comp_seq) TOTAL_COUNT
			FROM 
				t_co_comp a, 
				t_co_comp_multi b
			WHERE a.group_seq = b.group_seq
				AND a.comp_seq = b.comp_seq
				AND b.lang_code = #langCode#
				AND a.group_seq = #groupSeq#
				
				<isNotEmpty property="searchType">
					<isEqual property="searchType" compareValue="0">
						AND b.comp_name like '%$searchKeyword$%'
					</isEqual>
					
					<isEqual property="searchType" compareValue="1">
						AND b.comp_seq like '%$searchKeyword$%'
					</isEqual>
				
				</isNotEmpty>
	    </select>
		
		<select id="CompManage.getGroupCompList" parameterClass="hashmap" resultClass="egovMap">
	    	SELECT 
				a.comp_seq, 
				b.comp_name, 
				a.use_yn, 
				IF ((SELECT COUNT(*) FROM `t_co_erp_comp` WHERE comp_seq = a.comp_seq) > 0, 'Y', 'N') AS erp_yn,
				a.sms_id,
				a.login_type,
				c.lang,
				a.create_date
			FROM 
				t_co_comp a, 
				t_co_comp_multi b, 
				(
					SELECT 
						comp_seq, 
						GROUP_CONCAT($DB_NEOS$get_code_detail_info('0','LNG000',lang_code,#langCode#),'|', IFNULL(main_yn,'N')) AS lang 
					FROM 
						t_co_comp_lang 
					GROUP BY 
						comp_seq
				) c
			WHERE a.group_seq = b.group_seq
				AND a.comp_seq = b.comp_seq
				AND a.comp_seq = c.comp_seq
				AND b.lang_code = #langCode#
				AND a.group_seq = #groupSeq#
				
				<isNotEmpty property="searchType">
					<isEqual property="searchType" compareValue="0">
						AND b.comp_name like '%$searchKeyword$%'
					</isEqual>
					
					<isEqual property="searchType" compareValue="1">
						AND b.comp_seq like '%$searchKeyword$%'
					</isEqual>
				
				</isNotEmpty>
				
			ORDER BY a.create_date
			
			LIMIT $startNum$, $endNum$
	    </select>
   
</sqlMap>