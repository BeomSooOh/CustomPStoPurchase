<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<!-- BizboxA mariaDB -->
<sqlMap namespace="NpAdminReportA">


	<select id="NpAdminReportA.selectConsConfferResListEA" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* expend/np/user/NpUserReportSQL.xml - NpAdminReportA.selectConsConfferResListEA */
		/* 관리자 품의서 참조 결의서 리스트 조회 */
		SELECT	
			d.res_doc_seq	AS 'consDocSeq'
			, d.doc_seq	AS 'docSeq'
            , d.form_seq	AS 'formSeq'
			, r.c_ridocfullnum	AS 'docNo'
			, d.doc_status		AS 'docStatus'
			, i.c_diwriteday	AS 'docDate'
			, d.resdoc_note	AS 'consdocNote'			
			, d.resdoc_note	AS 'resdocNote'
			, d.expend_date	AS 'expendDate'
			, d.comp_name	AS 'compName'
			, d.dept_name	AS 'deptName'	
			, d.emp_name	AS 'empName'
			, d.erp_div_name	AS 'erpDivName'	
			, d.send_emp_seq	AS 'sendEmpSeq'
			, d.send_date		AS 'sendDate'
			, d.send_emp_name	AS 'sendName'			
			, r.c_riaftertitle	AS 'docTitle'
			, amt.resDocAmt		AS 'resDocAmt'
			, amt.resDocTaxAmt	AS 'resDocTaxAmt'
			, amt.resDocStdAmt	AS 'resDocStdAmt'
			, d.erp_send_yn	AS 'erpSendYN'
		FROM	$DB_NEOS$t_exnp_resdoc	d
		INNER JOIN	$DB_NEOS$a_recordinfo	r
		 ON	d.doc_seq = r.c_dikeycode
		INNER JOIN	(
			SELECT	c_dikeycode,  MIN(c_diwriteday) AS c_diwriteday
			FROM	$DB_NEOS$a_draftinfo 
			GROUP BY c_dikeycode 
		)	i
		 ON	r.c_dikeycode = i.c_dikeycode
		INNER JOIN	(
			SELECT	
				res_doc_seq
				, SUM( (CASE IFNULL(ctl_fg_code, '1') 
							WHEN '0'	THEN 	( CASE IFNULL(budget_std_amt, 0) WHEN '0' THEN budget_amt ELSE budget_std_amt END )
							ELSE		IFNULL(budget_amt, 0)	/* emptyStr or '1' */
						END)
				)	AS resDocAmt				
				, SUM(IFNULL(budget_tax_amt, 0)) AS resDocTaxAmt
				, SUM(IFNULL(budget_std_amt, 0)) AS resDocStdAmt
			FROM	$DB_NEOS$t_exnp_resbudget 
			GROUP BY res_doc_seq		
		)	amt		
		ON	d.res_doc_seq = amt.res_doc_seq	
		WHERE	d.doc_seq IS NOT NULL
		 AND 	IFNULL(d.doc_status, '008') IN ( '001', '002', '003', '004', '008', '009','20', '30', '90' )
		 AND	d.conffer_doc_seq = #consDocSeq#
		<isNotEmpty property="docStatus">
		 AND	doc_status = #docStatus#
		</isNotEmpty>

		<isNotEmpty property="frDt">
		 <isNotEmpty property="toDt">
		 AND	CONVERT(REPLACE(d.expend_date, '-', ''), CHAR(8)) BETWEEN #frDt# AND #toDt#
		 </isNotEmpty>  
		</isNotEmpty> 

		<isNotEmpty property="confferReturnYN">
		 AND	conffer_return_yn = #confferReturnYN#
		</isNotEmpty>

		<isNotEmpty property="docTitle">
		 AND	c_riaftertitle LIKE CONCAT('%', #docTitle#, '%')
		</isNotEmpty>

		<isNotEmpty property="docNo">
		 AND	c_ridocfullnum LIKE CONCAT('%', #docNo#, '%')
		</isNotEmpty>

		<isNotEmpty property="empName">
		 AND	d.emp_name LIKE CONCAT('%', #empName#, '%')
		</isNotEmpty>	
		
		<isNotEmpty property="deptName">
		 AND	d.dept_name LIKE CONCAT('%', #deptName#, '%')
		</isNotEmpty>
		
		<isNotEmpty property="sendEmpName">
		 AND	d.send_emp_name LIKE CONCAT('%', #sendEmpName#, '%')
		</isNotEmpty>
		
		<isNotEmpty property="erpSendYN">
		 AND	d.erp_send_yn = #erpSendYN#
		</isNotEmpty>		
	</select>
	
	
	<select id="NpAdminReportA.selectConsConfferResListEAP" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* expend/np/user/NpUserReportSQL.xml - NpAdminReportA.selectConsConfferResListEAP */
		/* 관리자 품의서 참조 결의서 리스트 조회 */
		SELECT	
			d.res_doc_seq	AS 'consDocSeq'
			, d.doc_seq	AS 'docSeq'
			, d.doc_seq		AS 'docSeq'
			, r.doc_no	AS 'docNo'
			, d.doc_status		AS 'docStatus'
			, replace(left(r.rep_dt,10),'-','')	AS 'docDate'
			, d.resdoc_note	AS 'consdocNote'			
			, d.resdoc_note	AS 'resdocNote'
			, d.expend_date	AS 'expendDate'
			, d.comp_name	AS 'compName'
			, d.dept_name	AS 'deptName'	
			, d.emp_name	AS 'empName'
			, d.erp_div_name	AS 'erpDivName'	
			, d.send_emp_seq	AS 'sendEmpSeq'
			, d.send_date		AS 'sendDate'
			, d.send_emp_name	AS 'sendName'			
			, r.doc_title	AS 'docTitle'
			, amt.resDocAmt		AS 'resDocAmt'
			, amt.resDocTaxAmt	AS 'resDocTaxAmt'
			, amt.resDocStdAmt	AS 'resDocStdAmt'
			, d.erp_send_yn	AS 'erpSendYN'
		FROM	$DB_NEOS$t_exnp_resdoc	d
		INNER JOIN	$DB_NEOS$teag_appdoc	r
		 ON	d.doc_seq = r.doc_id
		INNER JOIN	(
			SELECT	
				res_doc_seq
				, SUM( (CASE IFNULL(ctl_fg_code, '1') 
							WHEN '0'	THEN 	( CASE IFNULL(budget_std_amt, 0) WHEN '0' THEN budget_amt ELSE budget_std_amt END )
							ELSE		IFNULL(budget_amt, 0)	/* emptyStr or '1' */
						END)
				)	AS resDocAmt				
				, SUM(IFNULL(budget_tax_amt, 0)) AS resDocTaxAmt
				, SUM(IFNULL(budget_std_amt, 0)) AS resDocStdAmt
			FROM	$DB_NEOS$t_exnp_resbudget 
			GROUP BY res_doc_seq		
		)	amt		
		ON	d.res_doc_seq = amt.res_doc_seq	
		WHERE	d.doc_seq IS NOT NULL
		 AND    d.doc_status IN ('10', '20', '30',  '40', '50', '60', '80', '90', '110' )
		 AND	d.conffer_doc_seq = #consDocSeq#
		<isNotEmpty property="docStatus">
		 AND	doc_status = #docStatus#
		</isNotEmpty>

		<isNotEmpty property="frDt">
		 <isNotEmpty property="toDt">
		 AND	CONVERT(REPLACE(d.expend_date, '-', ''), CHAR(8)) BETWEEN #frDt# AND #toDt#
		 </isNotEmpty>  
		</isNotEmpty> 

		<isNotEmpty property="confferReturnYN">
		 AND	conffer_return_yn = #confferReturnYN#
		</isNotEmpty>

		<isNotEmpty property="docTitle">
		 AND	c_riaftertitle LIKE CONCAT('%', #docTitle#, '%')
		</isNotEmpty>

		<isNotEmpty property="docNo">
		 AND	c_ridocfullnum LIKE CONCAT('%', #docNo#, '%')
		</isNotEmpty>

		<isNotEmpty property="empName">
		 AND	d.emp_name LIKE CONCAT('%', #empName#, '%')
		</isNotEmpty>	
		
		<isNotEmpty property="deptName">
		 AND	d.dept_name LIKE CONCAT('%', #deptName#, '%')
		</isNotEmpty>
		
		<isNotEmpty property="sendEmpName">
		 AND	d.send_emp_name LIKE CONCAT('%', #sendEmpName#, '%')
		</isNotEmpty>
		
		<isNotEmpty property="erpSendYN">
		 AND	d.erp_send_yn = #erpSendYN#
		</isNotEmpty>		
	</select>

	<!-- 비영리 회계 - 환원처리 및 취소 -->
	<update id="NpAdminReportA.updateConfferReturnYN" parameterClass="java.util.HashMap">
		/* mariadb/bizboxAlpha/expend/np/admin/NpAdminReportSql - NpAdminReportA.updateConfferReturnYN */
		/* 품의서 환원정보 갱신 */
		UPDATE	$DB_NEOS$t_exnp_consdoc
		SET		conffer_return_yn = #confferReturnYN#
		WHERE	doc_seq = #docSeq#;
	</update>
	
	<select id="NpAdminReportA.selectConsReportEA" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* expend/np/user/NpUserReportSQL.xml - NpAdminReportA.selectConsReportEA */
		/* [비영리] 관리자 품의 현황 정보 조회 */
		SELECT  *
				,  ( CASE WHEN confferReturnYN = 'Y' THEN '반환' ELSE ( CASE WHEN confferBudgetReturnYN = 'Y' THEN ( CASE WHEN confferBudgetAllReturnYN = 'Y' THEN '반환' ELSE '부분반환' END ) ELSE '-' END ) END) AS confferReturnStatus 
		FROM    (
			SELECT	*
		   			, ( CASE WHEN confferBudgetReturnYN = 'Y' AND IFNULL(balanceAmt,0) = 0 THEN 'Y' ELSE 'N' END ) AS confferBudgetAllReturnYN
			FROM (
				SELECT	
						d.cons_doc_seq						AS 'consDocSeq'
						, tripBudget.trip_cons_doc_seq				AS 'tripConsDocSeq'
						, d.doc_seq							AS 'docSeq'
						, IFNULL(r.c_ridocfullnum, ' ')		AS 'docNo'
						, d.doc_status						AS 'docStatus'
						, d.consdoc_note					AS 'consdocNote'
						, d.comp_name						AS 'compName'
						, d.dept_name						AS 'deptName'	
						, d.emp_name						AS 'empName'
						, r.c_riaftertitle					AS 'docTitle'
						, i.c_diwriteday					AS 'docDate'
						, case when IFNULL(d.conffer_return_name, '') = '' 		
                         then amt2.confferBudgetReturnEmpSeq
                         else IFNULL(d.conffer_return_name, '') end	 AS 'confferReturnName'
						, CONVERT(d.expend_date, CHAR(10)) 	AS 'expendDate'
						, amt2.consDocStdAmt					AS 'consDocStdAmt'				
						, amt2.consDocTaxAmt					AS 'consDocTaxAmt'			
						, amt2.consDocAmt					AS 'consDocAmt'
						, IFNULL(res.resDocStdAmt, 0)		AS 'resDocStdAmt'		
						, IFNULL(res.resDocTaxAmt, 0)		AS 'resDocTaxAmt'		
						, IFNULL(res.resDocAmt,    0)		AS 'resDocAmt'
						, i.c_tikeycode 					AS 'formSeq'
						, ( CASE	d.conffer_return_yn 
							WHEN	'Y'	THEN	'0'
							ELSE		amt.consDocStdAmt - IFNULL(res2.resDocStdAmt, 0)
							END
						)	AS 'balanceStdAmt'	
						, ( CASE	d.conffer_return_yn 
							WHEN	'Y'	THEN	'0'
							ELSE		amt.consDocTaxAmt - IFNULL(res2.resDocTaxAmt, 0)
							END
						)	AS 'balanceTaxAmt'
						, ( CASE	d.conffer_return_yn 
							WHEN	'Y'	THEN	'0'
							ELSE		amt.consDocAmt - IFNULL(res2.resDocAmt, 0)	
							END
						)	AS 'balanceAmt'
						, d.conffer_return_yn                                     AS 'confferReturnYN'
						, ( CASE amt.consDocAmt = amt2.consDocAmt WHEN 1 THEN 'N' ELSE 'Y' END)  AS 'confferBudgetReturnYN'	
					FROM	$DB_NEOS$t_exnp_consdoc	d
					INNER JOIN	$DB_NEOS$a_recordinfo	r
					 ON	d.doc_seq = r.c_dikeycode
					INNER JOIN	(
						SELECT	doc.c_dikeycode
							, doc.c_tikeycode
							, doc.c_dititle
							, drf.c_diwriteday
							, drf.c_distatus
							, rec.c_ridocfullnum
						FROM	$DB_NEOS$a_docinfo doc
						INNER JOIN $DB_NEOS$a_draftinfo drf 
						 ON	doc.c_dikeycode	= drf.c_dikeycode
						INNER JOIN $DB_NEOS$a_recordinfo rec 
						 ON	doc.c_dikeycode	= rec.c_dikeycode
						WHERE	IFNULL(drf.c_distatus, '009') IN ( '001', '002', '003', '004', '007', '008', '009','20', '30', '90' )
					)	i
					 ON	r.c_dikeycode = i.c_dikeycode
					LEFT JOIN	(
						SELECT	
							cons_doc_seq
							, SUM(IFNULL(budget_amt, 0)) AS consDocAmt
							, SUM(IFNULL(budget_tax_amt, 0)) AS consDocTaxAmt
							, SUM(IFNULL(budget_std_amt, 0)) AS consDocStdAmt
						FROM	$DB_NEOS$t_exnp_consbudget 
						WHERE	conffer_budget_return_yn != 'Y'
						GROUP BY cons_doc_seq		
					)	amt
					ON	d.cons_doc_seq = amt.cons_doc_seq
					INNER JOIN	(
						SELECT
							cons_doc_seq
							, SUM(IFNULL(budget_amt, 0)) AS consDocAmt
							, SUM(IFNULL(budget_tax_amt, 0)) AS consDocTaxAmt
							, SUM(IFNULL(budget_std_amt, 0)) AS consDocStdAmt
							, group_concat(ifnull(conffer_budget_return_emp_name,'') separator '') as confferBudgetReturnEmpSeq
						FROM    $DB_NEOS$t_exnp_consbudget
						GROUP BY cons_doc_seq
					)       amt2
					 ON     d.cons_doc_seq = amt2.cons_doc_seq		
					LEFT JOIN	(
						SELECT	
							SUM(b2.budget_std_amt)	AS 'resDocStdAmt'
							, SUM(b2.budget_tax_amt)	AS 'resDocTaxAmt'
							, SUM( (CASE IFNULL(b2.ctl_fg_code, '1') 
										WHEN '0'	THEN 	( CASE IFNULL(b2.budget_std_amt, 0) WHEN '0' THEN b2.budget_amt ELSE b2.budget_std_amt END )
										ELSE		IFNULL(b2.budget_amt, 0)	/* emptyStr or '1' */
									END)
							)	AS 'resDocAmt'
							, b2.conffer_doc_seq	AS confferDocSeq
						FROM	$DB_NEOS$t_exnp_resbudget b2
						 INNER JOIN $DB_NEOS$t_exnp_resdoc d2
						 ON	b2.res_doc_seq = d2.res_doc_seq
						WHERE	IFNULL(d2.doc_status, '008') IN ( '001', '002', '003', '004', '008', '009','20', '30', '90' )
						 AND	d2.doc_seq IS NOT NULL
						GROUP BY b2.conffer_doc_seq	
					)	res
					 ON 	res.confferDocSeq = d.cons_doc_seq		
					LEFT JOIN       (
						SELECT
							SUM(b2.budget_std_amt)  AS 'resDocStdAmt'
							, SUM(b2.budget_tax_amt)        AS 'resDocTaxAmt'
							, SUM( (CASE IFNULL(b2.ctl_fg_code, '1') 
										WHEN '0'	THEN 	( CASE IFNULL(b2.budget_std_amt, 0) WHEN '0' THEN b2.budget_amt ELSE b2.budget_std_amt END )
										ELSE		IFNULL(b2.budget_amt, 0)	/* emptyStr or '1' */
									END)
							)	AS 'resDocAmt'
							, b2.conffer_doc_seq    AS confferDocSeq
						FROM    $DB_NEOS$t_exnp_resbudget b2
						 INNER JOIN $DB_NEOS$t_exnp_resdoc d2
						 ON     b2.res_doc_seq = d2.res_doc_seq
						 INNER JOIN $DB_NEOS$t_exnp_consbudget b3
						 ON	b2.conffer_budget_seq = b3.budget_seq
						  AND	b3.conffer_budget_return_yn != 'Y'
						WHERE   IFNULL(d2.doc_status, '008') IN ( '001', '002', '003', '004', '006', '008', '009' )
						 AND    d2.doc_seq IS NOT NULL
						GROUP BY b2.conffer_doc_seq
					)       res2
					ON      res2.confferDocSeq = d.cons_doc_seq
					INNER JOIN $DB_NEOS$erpgwlink gwlink
					on   	gwlink.appr_dikey = d.doc_seq
					LEFT JOIN (
						SELECT  tripB.trip_cons_doc_seq, tripB.cons_doc_seq
						FROM	$DB_NEOS$t_exnp_trip_cons_doc tripD
						INNER JOIN $DB_NEOS$t_exnp_trip_cons_budget tripB
						ON	tripD.trip_cons_doc_seq = tripB.trip_cons_doc_seq
						GROUP BY tripD.trip_cons_doc_Seq
					) tripBudget
					ON tripBudget.cons_doc_seq = d.cons_doc_seq
					WHERE	comp_seq = #compSeq#
					 AND	doc_seq IS NOT NULL
					<isNotEmpty property="docStatus">
					 AND	IFNULL(doc_status, '008') IN ($docStatus$)
					</isNotEmpty>
			
					<isNotEmpty property="frDt">
					 <isNotEmpty property="toDt">
					 AND	LEFT(requ_date,8) BETWEEN #frDt# AND #toDt#
					 </isNotEmpty>  
					</isNotEmpty> 
			
					<isNotEmpty property="confferReturnYN">
					 AND	(
					 		conffer_return_yn = #confferReturnYN#
					 		OR 
					 		( CASE amt.consDocAmt = amt2.consDocAmt WHEN 1 THEN 'N' ELSE 'Y' END) = 'Y'
					 		)   
					</isNotEmpty>
					
			
					<isNotEmpty property="docTitle">
					 AND	r.c_riaftertitle LIKE CONCAT('%', #docTitle#, '%')
					</isNotEmpty>
			
					<isNotEmpty property="docNo">
					 AND	r.c_ridocfullnum LIKE CONCAT('%', #docNo#, '%')
					</isNotEmpty>
			
					<isNotEmpty property="empName">
					 AND	d.emp_name LIKE CONCAT('%', #empName#, '%')
					</isNotEmpty>
						
					<isNotEmpty property="deptName">
					 AND	d.dept_name LIKE CONCAT('%', #deptName#, '%')
					</isNotEmpty>		 
					ORDER BY d.expend_date DESC
			) cons
		) cons2
		 <isNotEmpty property="returnEmpName">
			WHERE cons2.confferReturnName LIKE CONCAT('%', #returnEmpName#, '%')
		</isNotEmpty>	
		ORDER BY expendDate DESC
	</select>
	
	<select id="NpAdminReportA.selectConsReportEAP" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* expend/np/user/NpUserReportSQL.xml - NpAdminReportA.selectConsReportEAP */
		/* [영리] 관리자 품의 현황 정보 조회 */
		SELECT	*
	   			, ( CASE WHEN confferBudgetReturnYN = 'Y' AND IFNULL(balanceAmt,0) = 0 THEN 'Y' ELSE 'N' END ) AS confferBudgetAllReturnYN
	   	FROM (
			SELECT	
				d.cons_doc_seq						AS 'consDocSeq'
				, tripBudget.trip_cons_doc_seq				AS 'tripConsDocSeq'
				, d.doc_seq							AS 'docSeq'
				, r.doc_no					AS 'docNo'
				, d.doc_status						AS 'docStatus'
				, d.consdoc_note					AS 'consdocNote'
				, d.comp_name						AS 'compName'
				, d.dept_name						AS 'deptName'	
				, d.emp_name						AS 'empName'
				, r.doc_title					AS 'docTitle'
				, LEFT(r.rep_dt,'10')					AS 'docDate'
				, IFNULL(d.conffer_return_name, '')	AS 'confferReturnName'
				, CONVERT(d.expend_date, CHAR(10)) 	AS 'expendDate'
				, amt2.consDocStdAmt					AS 'consDocStdAmt'				
				, amt2.consDocTaxAmt					AS 'consDocTaxAmt'			
				, amt2.consDocAmt					AS 'consDocAmt'
				, IFNULL(res.resDocStdAmt, 0)		AS 'resDocStdAmt'		
				, IFNULL(res.resDocTaxAmt, 0)		AS 'resDocTaxAmt'		
				, IFNULL(res.resDocAmt,    0)		AS 'resDocAmt'
				, r.form_id 					AS 'formSeq'
				, ( CASE	d.conffer_return_yn 
					WHEN	'Y'	THEN	'0'
					ELSE		amt.consDocStdAmt - IFNULL(res2.resDocStdAmt, 0)
					END
				)	AS 'balanceStdAmt'	
				, ( CASE	d.conffer_return_yn 
					WHEN	'Y'	THEN	'0'
					ELSE		amt.consDocTaxAmt - IFNULL(res2.resDocTaxAmt, 0)
					END
				)	AS 'balanceTaxAmt'
				, ( CASE	d.conffer_return_yn 
					WHEN	'Y'	THEN	'0'
					ELSE		amt.consDocAmt - IFNULL(res2.resDocAmt, 0)	
					END
				)	AS 'balanceAmt'
				, d.conffer_return_yn                                     AS 'confferReturnYN'
				, ( CASE amt.consDocAmt = amt2.consDocAmt WHEN 1 THEN 'N' ELSE 'Y' END)  AS 'confferBudgetReturnYN'	
			FROM	$DB_NEOS$t_exnp_consdoc	d
			INNER JOIN	$DB_NEOS$teag_appdoc	r
			 ON	d.doc_seq = r.doc_id
			LEFT JOIN	(
				SELECT	
					cons_doc_seq
					, SUM(IFNULL(budget_amt, 0)) AS consDocAmt
					, SUM(IFNULL(budget_tax_amt, 0)) AS consDocTaxAmt
					, SUM(IFNULL(budget_std_amt, 0)) AS consDocStdAmt
				FROM	$DB_NEOS$t_exnp_consbudget 
				WHERE	conffer_budget_return_yn != 'Y'
				GROUP BY cons_doc_seq		
			)	amt
			ON	d.cons_doc_seq = amt.cons_doc_seq
			INNER JOIN	(
				SELECT
					cons_doc_seq
					, SUM(IFNULL(budget_amt, 0)) AS consDocAmt
					, SUM(IFNULL(budget_tax_amt, 0)) AS consDocTaxAmt
					, SUM(IFNULL(budget_std_amt, 0)) AS consDocStdAmt
				FROM    $DB_NEOS$t_exnp_consbudget
				GROUP BY cons_doc_seq
			)       amt2
			 ON     d.cons_doc_seq = amt2.cons_doc_seq		
			LEFT JOIN	(
				SELECT	
					SUM(b2.budget_std_amt)	AS 'resDocStdAmt'
					, SUM(b2.budget_tax_amt)	AS 'resDocTaxAmt'
					, SUM( (CASE IFNULL(b2.ctl_fg_code, '1') 
								WHEN '0'	THEN 	( CASE IFNULL(b2.budget_std_amt, 0) WHEN '0' THEN b2.budget_amt ELSE b2.budget_std_amt END )
								ELSE		IFNULL(b2.budget_amt, 0)	/* emptyStr or '1' */
							END)
					)	AS 'resDocAmt'
					, b2.conffer_doc_seq	AS confferDocSeq
				FROM	$DB_NEOS$t_exnp_resbudget b2
				 INNER JOIN $DB_NEOS$t_exnp_resdoc d2
				 ON	b2.res_doc_seq = d2.res_doc_seq
				WHERE	IFNULL(d2.doc_status, '999') IN ('10', '20', '30',  '40', '50', '60', '70', '80', '90', '100', '110' )
				 AND	d2.doc_seq IS NOT NULL
				GROUP BY b2.conffer_doc_seq	
			)	res
			 ON 	res.confferDocSeq = d.cons_doc_seq		
			LEFT JOIN       (
				SELECT
					SUM(b2.budget_std_amt)  AS 'resDocStdAmt'
					, SUM(b2.budget_tax_amt)        AS 'resDocTaxAmt'
					, SUM( (CASE IFNULL(b2.ctl_fg_code, '1') 
								WHEN '0'	THEN 	( CASE IFNULL(b2.budget_std_amt, 0) WHEN '0' THEN b2.budget_amt ELSE b2.budget_std_amt END )
								ELSE		IFNULL(b2.budget_amt, 0)	/* emptyStr or '1' */
							END)
					)	AS 'resDocAmt'
					, b2.conffer_doc_seq    AS confferDocSeq
				FROM    $DB_NEOS$t_exnp_resbudget b2
				 INNER JOIN $DB_NEOS$t_exnp_resdoc d2
				 ON     b2.res_doc_seq = d2.res_doc_seq
				 INNER JOIN $DB_NEOS$t_exnp_consbudget b3
				 ON	b2.conffer_budget_seq = b3.budget_seq
				  AND	b3.conffer_budget_return_yn != 'Y'
				WHERE   IFNULL(d2.doc_status, '999') IN ('10', '20', '30',  '40', '50', '60', '70', '80', '90', '100', '110' )
				 AND    d2.doc_seq IS NOT NULL
				GROUP BY b2.conffer_doc_seq
			)       res2
			ON      res2.confferDocSeq = d.cons_doc_seq
			LEFT JOIN (
					SELECT  tripB.trip_cons_doc_seq, tripB.cons_doc_seq
					FROM	$DB_NEOS$t_exnp_trip_cons_doc tripD
					INNER JOIN $DB_NEOS$t_exnp_trip_cons_budget tripB
					ON	tripD.trip_cons_doc_seq = tripB.trip_cons_doc_seq
					GROUP BY tripD.trip_cons_doc_Seq
				) tripBudget
			ON tripBudget.cons_doc_seq = d.cons_doc_seq   		 
			WHERE	comp_seq = #compSeq#
			 AND	doc_seq IS NOT NULL
			<isNotEmpty property="docStatus">
			 AND	IFNULL(doc_status, '999') IN ($docStatus$)
			</isNotEmpty>
	
			<isNotEmpty property="frDt">
			 <isNotEmpty property="toDt">
			 AND	CONVERT(REPLACE(d.expend_date, '-', ''), CHAR(8)) BETWEEN #frDt# AND #toDt#
			 </isNotEmpty>  
			</isNotEmpty> 
	
			<isNotEmpty property="confferReturnYN">
			 AND	(
				 		conffer_return_yn = #confferReturnYN#
				 		OR 
				 		( CASE amt.consDocAmt = amt2.consDocAmt WHEN 1 THEN 'N' ELSE 'Y' END) = 'Y'
			 		)
			</isNotEmpty>
	
			<isNotEmpty property="docTitle">
			 AND	doc_title LIKE CONCAT('%', #docTitle#, '%')
			</isNotEmpty>
	
			<isNotEmpty property="docNo">
			 AND	doc_no LIKE CONCAT('%', #docNo#, '%')
			</isNotEmpty>
	
			<isNotEmpty property="empName">
			 AND	d.emp_name LIKE CONCAT('%', #empName#, '%')
			</isNotEmpty>
				
			<isNotEmpty property="deptName">
			 AND	d.dept_name LIKE CONCAT('%', #deptName#, '%')
			</isNotEmpty>		
			
			<isNotEmpty property="returnEmpName">
			 AND	d.conffer_return_name LIKE CONCAT('%', #returnEmpName#, '%')
			</isNotEmpty>	 
			ORDER BY d.expend_date DESC	
		) cons
		ORDER BY expendDate DESC
	</select>
		
	<select id="NpAdminReportA.consBudgetListHead" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* expend/np/admin/NpAdminReportSQL.xml - NpAdminReportA.\Head */
		/* 품의서 예산상세 내역 리스트 조회 - 헤더정보 */
		SELECT *
			   , (CASE WHEN confferBudgetReturnYN = 'Y' AND IFNULL(balanceAmt,'0') = '0' THEN 'Y' ELSE 'N' END) AS 'confferBudgetAllReturnYN'
		FROM (
			SELECT	
				ifnull(consDoc.doc_no,teagInfo.doc_no)						AS 'docNo'
				, ifnull(drInfo.c_riaftertitle,teagInfo.doc_title)				AS 'docTitle'
				, consDoc.dept_name					AS 'deptName'
				, consDoc.emp_name					AS 'empName'
				, amt2.consDocStdAmt					AS 'consDocStdAmt'				
				, amt2.consDocTaxAmt					AS 'consDocTaxAmt'			
				, amt2.consDocAmt					AS 'consDocAmt'
				, IFNULL(res.resDocStdAmt, 0)		AS 'resDocStdAmt'		
				, IFNULL(res.resDocTaxAmt, 0)		AS 'resDocTaxAmt'	
				, IFNULL(res.resDocAmt,    0)		AS 'resDocAmt'	
				, ( CASE	consDoc.conffer_return_yn 
					WHEN	'Y'	THEN	'0'
					ELSE		amt.consDocStdAmt - IFNULL(res2.resDocStdAmt, 0)
					END
				)	AS 'balanceStdAmt'	
				, ( CASE	consDoc.conffer_return_yn 
					WHEN	'Y'	THEN	'0'
					ELSE		amt.consDocTaxAmt - IFNULL(res2.resDocTaxAmt, 0)
					END
				)	AS 'balanceTaxAmt'
	
				, ( CASE	consDoc.conffer_return_yn 
					WHEN	'Y'	THEN	'0'
					ELSE		amt.consDocAmt - IFNULL(res2.resDocAmt, 0)	
					END
				)	AS 'balanceAmt'
				, consDoc.conffer_return_yn					AS 'confferReturnYN'
				, consDoc.conffer_return_name			AS 'confferReturnEmpName'
				, ( CASE amt.consDocAmt = amt2.consDocAmt WHEN 1 THEN 'N' ELSE 'Y' END)  AS 'confferBudgetReturnYN'
				, CONVERT(consDoc.expend_date, CHAR(10)) 	AS 'expendDate'
			FROM	(
				SELECT	* 
				FROM	$DB_NEOS$t_exnp_consdoc
				WHERE 	cons_doc_seq = #consDocSeq#
			)	consDoc
			LEFT JOIN	$DB_NEOS$a_recordinfo 	drInfo
			ON	consDoc.doc_seq = drInfo.c_dikeycode
			LEFT JOIN	$DB_NEOS$teag_appdoc 	teagInfo
			ON	consDoc.doc_seq = teagInfo.doc_id
			LEFT JOIN	(
				/* 미환원 품의잔액 조회 */
				SELECT	
					cons_doc_seq
					, SUM(IFNULL(budget_amt, 0)) AS consDocAmt
					, SUM(IFNULL(budget_tax_amt, 0)) AS consDocTaxAmt
					, SUM(IFNULL(budget_std_amt, 0)) AS consDocStdAmt
				FROM	$DB_NEOS$t_exnp_consbudget 
				WHERE	conffer_budget_return_yn != 'Y'			
				GROUP BY cons_doc_seq	
			)	amt
			 ON	consDoc.cons_doc_seq = amt.cons_doc_seq
	        INNER JOIN      (
	        	/* 품의서 전체 품의액 조회 */
	            SELECT
	                    cons_doc_seq
	                    , SUM(IFNULL(budget_amt, 0)) AS consDocAmt
	                    , SUM(IFNULL(budget_tax_amt, 0)) AS consDocTaxAmt
	                    , SUM(IFNULL(budget_std_amt, 0)) AS consDocStdAmt
	            FROM    $DB_NEOS$t_exnp_consbudget
	            GROUP BY cons_doc_seq
	        )       amt2
	         ON     consDoc.cons_doc_seq = amt2.cons_doc_seq     		 
			LEFT JOIN	(
				/* 품의서 전체 참조결의액 조회 */
				SELECT	
					SUM(b2.budget_std_amt)	AS 'resDocStdAmt'
					, SUM(b2.budget_tax_amt)	AS 'resDocTaxAmt'
	                , SUM( (CASE IFNULL(b2.ctl_fg_code, '1')
	                                        WHEN '0'        THEN    ( CASE IFNULL(b2.budget_std_amt, 0) WHEN '0' THEN b2.budget_amt ELSE b2.budget_std_amt END )
	                                        ELSE            IFNULL(b2.budget_amt, 0)        /* emptyStr or '1' */
	                                END)
	                )       AS 'resDocAmt'
					, b2.conffer_doc_seq	AS confferDocSeq
				FROM	$DB_NEOS$t_exnp_resbudget b2
				 INNER JOIN $DB_NEOS$t_exnp_resdoc d2
				 ON	b2.res_doc_seq = d2.res_doc_seq
				WHERE	( d2.doc_status IN ( '001', '002', '003', '004', '006', '008', '009' )
						OR
						  d2.doc_status IN ('10', '20', '30',  '40', '50', '60', '80', '90', '110' )
						)
				GROUP BY b2.conffer_doc_seq	
			)	res
			ON 	res.confferDocSeq = consDoc.cons_doc_seq
			LEFT JOIN       (
				/* 부분환원 예산 제외 참조결의액 조회 */
				SELECT
				        SUM(b2.budget_std_amt)  AS 'resDocStdAmt'
				        , SUM(b2.budget_tax_amt)        AS 'resDocTaxAmt'
						, SUM( (CASE IFNULL(b2.ctl_fg_code, '1') 
									WHEN '0'	THEN 	( CASE IFNULL(b2.budget_std_amt, 0) WHEN '0' THEN b2.budget_amt ELSE b2.budget_std_amt END )
									ELSE		IFNULL(b2.budget_amt, 0)	/* emptyStr or '1' */
								END)
						)	AS 'resDocAmt'		
				        , b2.conffer_doc_seq    AS confferDocSeq
				FROM    $DB_NEOS$t_exnp_resbudget b2
				 INNER JOIN $DB_NEOS$t_exnp_resdoc d2
				 ON     b2.res_doc_seq = d2.res_doc_seq
				 INNER JOIN $DB_NEOS$t_exnp_consbudget b3
				 ON	b2.conffer_budget_seq = b3.budget_seq
				  AND	b3.conffer_budget_return_yn != 'Y'
				WHERE   ( IFNULL(d2.doc_status, '008') IN ( '001', '002', '003', '004', '006', '008', '009' )
						OR
						  d2.doc_status IN ('10', '20', '30',  '40', '50', '60', '80', '90', '110' )
						)
				 AND    d2.doc_seq IS NOT NULL
				GROUP BY b2.conffer_doc_seq
			)       res2
			ON      res2.confferDocSeq = consDoc.cons_doc_seq	
		) cons
	</select>	
	
	<select id="NpAdminReportA.consBudgetList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* expend/np/admin/NpUserReportSQL.xml - NpAdminReportA.consBudgetList */
		/* 품의서 예산상세 내역 리스트 조회 */
		SELECT	
			consDoc.cons_doc_seq			AS 'consDocSeq'
			, consHead.cons_seq				AS 'consSeq'
			, consBudget.budget_seq			AS 'budgetSeq'
			, consHead.docu_fg_name			AS 'docuFgName'
			, consHead.cons_date			AS 'consDate'
			, consHead.mgt_name				AS 'mgtName'
			, consHead.erp_pc_name			AS 'erpPcName'
			, consBudget.erp_budget_name	AS 'erpBudgetName'
			, IFNULL(consBudget.erp_bgacct_name,'')	AS 'erpBgacctName'
			, consHead.erp_div_name			AS 'erpDivName'
			, IFNULL(consBudget.budget_amt, 0)		AS 'budgetAmt'
			, IFNULL(resBudget.res_budget_amt, 0)	AS 'resBudgetAmt'
			,( case consDoc.conffer_return_yn when 'Y' then '0' else 
                        ( case consBudget.conffer_budget_return_yn
                                WHEN    'Y'     THEN    '0'
                                ELSE            IFNULL(consBudget.budget_amt, 0)
                                                -
                                                IFNULL(resBudget.res_budget_amt, 0)
                                END
                        )  end )     AS 'balanceAmt'				
			,(case consDoc.conffer_return_yn
                                when 'Y' then 'Y' else consBudget.conffer_budget_return_yn END
                        ) AS 'confferBudgetReturnYN'
			, consBudget.conffer_budget_return_emp_seq	AS 'confferBudgetReturnEmpSeq'
			, consBudget.conffer_budget_return_emp_name	AS 'confferBudgetReturnEmpName'
			, IFNULL(consBudget.erp_bizplan_name, '')	AS 'erpBizplanName'	
			, IFNULL(consBudget.erp_fiacct_name, '')	AS 'erpFiacctName'				
		FROM	(
			SELECT	* 
			FROM	$DB_NEOS$t_exnp_consbudget
			WHERE	cons_doc_seq = #consDocSeq#
		)	consBudget
		INNER JOIN	$DB_NEOS$t_exnp_consdoc 	consDoc
		 ON	consBudget.cons_doc_seq = consDoc.cons_doc_seq
		INNER JOIN	$DB_NEOS$t_exnp_conshead	consHead
		 ON	consBudget.cons_seq = consHead.cons_seq
		LEFT JOIN	(
			SELECT	
				SUM( (CASE IFNULL(ctl_fg_code, '1') 
							WHEN '0'	THEN 	( CASE IFNULL(budget_std_amt, 0) WHEN '0' THEN budget_amt ELSE budget_std_amt END )
							ELSE		IFNULL(budget_amt, 0)	/* emptyStr or '1' */
						END)
				)	AS 'res_budget_amt'				
				, SUM(budget_std_amt)	'res_budget_std_amt'
				, SUM(budget_tax_amt)	'res_budget_tax_amt'
				, conffer_budget_seq
			FROM	$DB_NEOS$t_exnp_resbudget b2
			 INNER JOIN $DB_NEOS$t_exnp_resdoc d2
			 ON	b2.res_doc_seq = d2.res_doc_seq
			WHERE	(
					  d2.doc_status IN ( '001', '002', '003', '004', '006', '008', '009' )
					OR
					  d2.doc_status IN ('10', '20', '30',  '40', '50', '60', '80', '90', '110' )
					)			
			GROUP BY conffer_budget_seq
		)	resBudget
		 ON	consBudget.budget_seq = resBudget.conffer_budget_seq
	</select>	

		
	<!-- 비영리 회계 - 품의서 반환 / 취소 -->
	<update id="NpAdminReportA.updateConsConfferStatus" parameterClass="java.util.HashMap">
		/* expend/np/admin/NpUserReportSQL.xml - NpAdminReportA.updateConsConfferStatus */
		/* 품의서 반환 / 취소 진행 */	
		UPDATE	$DB_NEOS$t_exnp_consdoc
		SET	conffer_return_yn 			= #confferReturn# 
			, conffer_return_name 		= #empName#
			, conffer_return_emp_seq 	= #empSeq#
		WHERE	comp_seq 		= #compSeq#
		 AND	cons_doc_seq 	IN ($consDocSeqs$);
	</update>
			
	<!-- 비영리 회계 - 품의서 반환 / 취소 -->
	<update id="NpAdminReportA.updateConsConfferBudgetStatus" parameterClass="java.util.HashMap">
		/* expend/np/admin/NpUserReportSQL.xml - NpAdminReportA.updateConsConfferBudgetStatus */
		/* 품의서 예산 반환 / 취소 진행 */	
		UPDATE	$DB_NEOS$t_exnp_consbudget		 
		SET	conffer_budget_return_yn			= #confferReturn#
			, conffer_budget_return_emp_seq		= #empSeq#
			, conffer_budget_return_emp_name	= #empName#
		WHERE	budget_seq = #consBudgetSeq#
	</update>
	
	<select id="NpAdminReportA.selectResReportEA" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* expend/np/admin/NpAdminReportSQL.xml - NpUserReportA.selectResReportPageListEA */
		/* [비영리] 관리자 결의서 현황 조회 */
		SELECT	
			d.res_doc_seq	AS 'consDocSeq'
			, d.doc_seq	AS 'docSeq'
			, d.doc_seq		AS 'docSeq'
			, IFNULL(r.c_ridocfullnum, '')	AS 'docNo'
			, d.doc_status		AS 'docStatus'
			, i.c_diwriteday	AS 'docDate'
			, d.resdoc_note	AS 'consdocNote'			
			, d.resdoc_note	AS 'resdocNote'
			, d.expend_date	AS 'expendDate'
			, d.comp_name	AS 'compName'
			, d.dept_name	AS 'deptName'	
			, d.emp_name	AS 'empName'
			, d.send_emp_seq	AS 'sendEmpSeq'
			, d.send_date		AS 'sendDate'
			, d.send_emp_name	AS 'sendName'			
			, r.c_riaftertitle	AS 'docTitle'
			, amt.resDocAmt		AS 'resDocAmt'
			, amt.resDocTaxAmt	AS 'resDocTaxAmt'
			, amt.resDocStdAmt	AS 'resDocStdAmt'
			, d.erp_send_yn	AS 'erpSendYN'
			, d.save_yn		AS 'saveYn'
			, 'EA'			AS 'eaType'
		FROM	$DB_NEOS$t_exnp_resdoc	d
		INNER JOIN	$DB_NEOS$a_recordinfo	r
		 ON	d.doc_seq = r.c_dikeycode
		INNER JOIN	(
			SELECT	c_dikeycode,  MIN(c_diwriteday) AS c_diwriteday
			FROM	$DB_NEOS$a_draftinfo 
			WHERE	IFNULL(c_distatus, '008') != 'd'
			GROUP BY c_dikeycode 
		)	i
		 ON	r.c_dikeycode = i.c_dikeycode
		INNER JOIN	(
			SELECT	
				res_doc_seq
				, SUM(IFNULL(budget_amt, 0)) AS resDocAmt
				, SUM(IFNULL(budget_tax_amt, 0)) AS resDocTaxAmt
				, SUM(IFNULL(budget_std_amt, 0)) AS resDocStdAmt
			FROM	$DB_NEOS$t_exnp_resbudget 
			GROUP BY res_doc_seq		
		)	amt		
		ON	d.res_doc_seq = amt.res_doc_seq
		 INNER JOIN $DB_NEOS$erpgwlink gwlink
         ON			gwlink.appr_dikey = d.doc_seq	
		WHERE	d.comp_seq = #compSeq#
		 AND	d.doc_seq IS NOT NULL
		<isNotEmpty property="docStatus">
		 AND	IFNULL(doc_status, '008') IN ($docStatus$)
		</isNotEmpty>
		<isEmpty property="docStatus">
		 AND	doc_status in ( '001', '002', '003', '005', '006', '007', '008', '009' )
		</isEmpty>

		<isNotEmpty property="frDt">
		 <isNotEmpty property="toDt">
		 AND	LEFT(requ_date,8) BETWEEN #frDt# AND #toDt#
		 </isNotEmpty>  
		</isNotEmpty> 

		<isNotEmpty property="confferReturnYN">
		 AND	conffer_return_yn = #confferReturnYN#
		</isNotEmpty>

		<isNotEmpty property="docTitle">
		 AND	c_riaftertitle LIKE CONCAT('%', IFNULL(#docTitle#, ''), '%')
		</isNotEmpty>

		<isNotEmpty property="docNo">
		 AND	c_ridocfullnum LIKE CONCAT('%', IFNULL(#docNo#, ''), '%')
		</isNotEmpty>

		<isNotEmpty property="empName">
		 AND	d.emp_name LIKE CONCAT('%', IFNULL(#empName#, ''), '%')
		</isNotEmpty>	
		
		<isNotEmpty property="deptName">
		 AND	d.dept_name LIKE CONCAT('%', IFNULL(#deptName#, ''), '%')
		</isNotEmpty>
		
		<isNotEmpty property="sendEmpName">
		 AND	d.send_emp_name LIKE CONCAT('%', IFNULL(#sendEmpName#, ''), '%')
		</isNotEmpty>
		
		<isNotEmpty property="erpSendYN">
		 AND	d.erp_send_yn = #erpSendYN#
		</isNotEmpty>
		ORDER BY expend_date DESC
	</select>
	
	<select id="NpAdminReportA.selectResReportEAP" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* expend/np/admin/NpAdminReportSQL.xml - NpUserReportA.selectResReportPageListEAP */
		/* [영리] 관리자 결의서 현황 조회 */
		SELECT	
			d.res_doc_seq	AS 'consDocSeq'
			, d.doc_seq	AS 'docSeq'
			, r.form_id	AS 'formSeq'
			, d.doc_seq		AS 'docSeq'
			, IFNULL(r.doc_no, '')	AS 'docNo'
			, d.doc_status		AS 'docStatus'
			, LEFT(r.rep_dt, 10)      AS 'docDate'
			, d.resdoc_note	AS 'consdocNote'			
			, d.resdoc_note	AS 'resdocNote'
			, LEFT(d.expend_date, 10) AS 'expendDate'
			, d.comp_name	AS 'compName'
			, d.dept_name	AS 'deptName'	
			, d.emp_name	AS 'empName'
			, d.send_emp_seq	AS 'sendEmpSeq'
			, d.send_date		AS 'sendDate'
			, d.send_emp_name	AS 'sendName'			
			, r.doc_title	AS 'docTitle'
			, amt.resDocAmt		AS 'resDocAmt'
			, amt.resDocTaxAmt	AS 'resDocTaxAmt'
			, amt.resDocStdAmt	AS 'resDocStdAmt'
			, d.erp_send_yn	AS 'erpSendYN'
			, d.save_yn		AS  saveYn
			, 'EAP'			AS 'eaType'
		FROM	$DB_NEOS$t_exnp_resdoc	d
		INNER JOIN	$DB_NEOS$teag_appdoc	r
		 ON	d.doc_seq = r.doc_id
		INNER JOIN	(
			SELECT	
				res_doc_seq
				, SUM(IFNULL(budget_amt, 0)) AS resDocAmt
				, SUM(IFNULL(budget_tax_amt, 0)) AS resDocTaxAmt
				, SUM(IFNULL(budget_std_amt, 0)) AS resDocStdAmt
			FROM	$DB_NEOS$t_exnp_resbudget 
			GROUP BY res_doc_seq		
		)	amt		
		ON	d.res_doc_seq = amt.res_doc_seq	
		WHERE	d.comp_seq = #compSeq#
		 AND	r.use_yn = '1'
		 AND	d.doc_seq IS NOT NULL
		<isNotEmpty property="docStatus">
		 AND	IFNULL(doc_status, '999') IN ($docStatus$)
		</isNotEmpty>
		<isEmpty property="docStatus">
		 AND	doc_status in ('10', '20', '30',  '40', '50', '60', '70', '80', '90', '100', '110' )
		</isEmpty>

		<isNotEmpty property="frDt">
		 <isNotEmpty property="toDt">
		 AND	CONVERT(REPLACE(d.expend_date, '-', ''), CHAR(8)) BETWEEN #frDt# AND #toDt#
		 </isNotEmpty>  
		</isNotEmpty> 

		<isNotEmpty property="confferReturnYN">
		 AND	conffer_return_yn = #confferReturnYN#
		</isNotEmpty>

		<isNotEmpty property="docTitle">
		 AND	r.doc_title LIKE CONCAT('%', IFNULL(#docTitle#, ''), '%')
		</isNotEmpty>

		<isNotEmpty property="docNo">
		 AND	r.doc_no LIKE CONCAT('%', IFNULL(#docNo#, ''), '%')
		</isNotEmpty>

		<isNotEmpty property="empName">
		 AND	d.emp_name LIKE CONCAT('%', IFNULL(#empName#, ''), '%')
		</isNotEmpty>	
		
		<isNotEmpty property="deptName">
		 AND	d.dept_name LIKE CONCAT('%', IFNULL(#deptName#, ''), '%')
		</isNotEmpty>
		
		<isNotEmpty property="sendEmpName">
		 AND	d.send_emp_name LIKE CONCAT('%', IFNULL(#sendEmpName#, ''), '%')
		</isNotEmpty>
		
		<isNotEmpty property="erpSendYN">
		 AND	d.erp_send_yn = #erpSendYN#
		</isNotEmpty>
		ORDER BY expend_date DESC	
	</select>
	
	<update id="NpAdminReportA.deleteResCardAqTmp" parameterClass="java.util.HashMap">
		/* mariadb/bizboxAlpha/expend/np/admin/NpAdminReportSql - NpAdminReportA.deleteResCardAqTmp */
		/* 결의서 삭제 처리 - 법인카드 승인내역 정보 */
		UPDATE	$DB_NEOS$t_ex_card_aq_tmp 
		SET		if_m_id = '0'
				, if_d_id = '0'
				, send_yn = 'N'
		WHERE	if_m_id IN $resDocSeqs$;
	</update>	
		
	<update id="NpAdminReportA.deleteResEtaxAqTmp" parameterClass="java.util.HashMap">
		/* mariadb/bizboxAlpha/expend/np/admin/NpAdminReportSql - NpAdminReportA.deleteResEtaxAqTmp */
		/* 결의서 삭제 처리 - 세금계산서 정보 */
		UPDATE	$DB_NEOS$t_ex_etax_aq_tmp 
		SET		if_m_id = '0'
				, if_d_id = '0'
				, send_yn = 'N'
		WHERE	if_m_id IN $resDocSeqs$;
	</update>
		
	<update id="NpAdminReportA.deleteCons" parameterClass="java.util.HashMap">
		/* mariadb/bizboxAlpha/expend/np/admin/NpAdminReportSql - NpAdminReportA.deleteCons */
		/* 품의서 삭제 처리 - 지출결의 정보 */
		UPDATE	$DB_NEOS$t_exnp_consdoc 
		SET		doc_status = 'd'
		WHERE	cons_doc_seq IN $consDocSeqs$;
	</update>	
		
	<update id="NpAdminReportA.deleteRes" parameterClass="java.util.HashMap">
		/* mariadb/bizboxAlpha/expend/np/admin/NpAdminReportSql - NpAdminReportA.deleteRes */
		/* 결의서 삭제 처리 - 지출결의 정보 */
		UPDATE	$DB_NEOS$t_exnp_resdoc 
		SET		doc_status = 'd'
		WHERE	res_doc_seq IN $resDocSeqs$;
	</update>	

	<update id="NpAdminReportA.deleteResDoc" parameterClass="java.util.HashMap">
		/* mariadb/bizboxAlpha/expend/np/admin/NpAdminReportSql - NpAdminReportA.deleteRes */
		/* 결의서 삭제 처리 - 전자결재 정보 */
		UPDATE	$DB_NEOS$a_draftinfo
		SET	c_distatus = 'd'
		WHERE	c_dikeycode IN $docSeqs$
	</update>
	
	<update id="NpAdminReportA.deleteRecordInfo" parameterClass="java.util.HashMap">
		/* mariadb/bizboxAlpha/expend/np/admin/NpAdminReportSql - NpAdminReportA.deleteRecordInfo */
		/* 결의서 삭제 처리 - 전자결재 정보 */
		UPDATE	$DB_NEOS$a_recordinfo
		SET	c_rideleteopt = 'd'
		WHERE	c_dikeycode IN $docSeqs$
	</update>
	
	<update id="NpAdminReportA.deleteResDocEap" parameterClass="java.util.HashMap">
		/* mariadb/bizboxAlpha/expend/np/admin/NpAdminReportSql - NpAdminReportA.deleteRes */
		/* 결의서 삭제 처리 - 전자결재 정보 */
		UPDATE	$DB_NEOS$teag_appdoc
		SET		use_yn = '0', doc_sts = '999'
		WHERE	doc_id IN $docSeqs$
	</update>
	
	<delete id="NpAdminReportA.deleteResDocEapBox" parameterClass="java.util.HashMap">
		/* mariadb/bizboxAlpha/expend/np/admin/NpAdminReportSql - NpAdminReportA.deleteResDocEapBox */
		/* 결의서 삭제 처리 - 전자결재 카운트 정보 */
		DELETE FROM $DB_NEOS$t_eap_box_emp 		
		WHERE	doc_id IN $docSeqs$
	</delete>
	
	<select id="NpAdminReportA.selectSendEaList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* mariadb/bizboxAlpha/expend/np/admin/NpAdminReportSql - NpAdminReportA.selectSendEaList */
		/* [비영리] 결의서 전송 리스트 조회 */
		SELECT	
			IFNULL(resDoc.res_doc_seq,'')		AS 'resDocSeq'
			, IFNULL(tripBudget.trip_res_doc_seq,'') AS 'tripResDocSeq'
			, IFNULL(doc.c_dikeycode,'')		AS 'docSeq'
			, IFNULL(doc.c_ridocfullnum,'')     AS 'docNo'
			, IFNULL(resDoc.doc_status,'')		AS 'docStatus'
			, IFNULL(resDoc.resdoc_note,'')		AS 'note'
			, IFNULL(resDoc.erp_gisu,'')		AS 'erpGisu'			
			, IFNULL(resDoc.comp_seq,'')		AS 'compSeq'
			, IFNULL(resDoc.comp_name,'')		AS 'compName'
			, IFNULL(resDoc.dept_seq,'')		AS 'deptSeq'
			, IFNULL(resDoc.dept_name,'')		AS 'deptName'
			, IFNULL(resDoc.emp_seq,'')			AS 'empSeq'
			, IFNULL(resDoc.emp_name,'')		AS 'empName'
			, IFNULL(resDoc.erp_send_yn,'')		AS 'erpSendYN'
			, IFNULL(head.erp_pc_seq, '')		AS 'erpPcSeq'
			, IFNULL(head.erp_pc_name, '')		AS 'erpPcName'
			, IFNULL(head.erp_dept_seq, '') 	AS 'erpDeptSeq'
			, IFNULL(head.erp_dept_name, '') 	AS 'erpDeptName'
			, IFNULL(head.erp_emp_seq, '') 		AS 'erpEmpSeq'
			, IFNULL(head.erp_emp_name, '') 	AS 'erpEmpName'
			, IFNULL(budget.amt, 0)	 					AS 'amt'
			, doc.c_dititle 					AS 'docTitle'
			, doc.c_tikeycode 					AS 'formSeq'
			, DATE_FORMAT(doc.c_diwriteday,'%Y-%m-%d')					AS 'repDate'
			, DATE_FORMAT(IFNULL(resDoc.expend_date,''),'%Y-%m-%d')		AS 'expendDate'
			, IFNULL(DATE_FORMAT(resDoc.erp_expend_year,'%Y-%m-%d'),'')	AS 'erpExpendYear'
			, IFNULL(consDoc.c_dikeycode, '') 	AS 'confferDocSeq'
			, consDoc.c_tikeycode 					AS 'confferFormSeq'
			, resDoc.erp_div_seq			AS 'erpDivSeq'
			, resDoc.erp_div_name			AS 'erpDivName'
			, 'EA'							AS 'eaType'
		FROM	$DB_NEOS$t_exnp_resdoc resDoc
		INNER JOIN	$DB_NEOS$t_exnp_reshead head 
		 ON	resDoc.res_doc_seq	= head.res_doc_seq
		INNER JOIN (
			SELECT	res_doc_seq
				, SUM(budget_amt) AS amt
			FROM	$DB_NEOS$t_Exnp_resbudget
			GROUP BY res_doc_seq
		) budget 
		 ON	resDoc.res_doc_seq = budget.res_doc_seq
		INNER JOIN (
			SELECT	doc.c_dikeycode
				, doc.c_tikeycode
				, doc.c_dititle
				, drf.c_diwriteday
				, drf.c_distatus
				, rec.c_ridocfullnum
			FROM	$DB_NEOS$a_docinfo doc
			INNER JOIN $DB_NEOS$a_draftinfo drf 
			 ON	doc.c_dikeycode	= drf.c_dikeycode
			INNER JOIN $DB_NEOS$a_recordinfo rec 
			 ON	doc.c_dikeycode	= rec.c_dikeycode
			WHERE	IFNULL(drf.c_distatus, '009') IN ('008', '009')
		) doc 
		 ON	resDoc.doc_seq		= doc.c_dikeycode
		LEFT JOIN (
			SELECT	
				cons_doc_seq	
				, c_dikeycode
				, c_tikeycode
			FROM	$DB_NEOS$t_exnp_consdoc cd
			 INNER JOIN $DB_NEOS$a_docinfo ad
			 ON	cd.doc_seq = ad.c_dikeycode
		) consDoc
		 ON 	resDoc.conffer_doc_seq = consDoc.cons_doc_seq
		 
		<isNotEmpty property="erpAbgtName"> 
		INNER JOIN	(
			SELECT	res_doc_seq
			FROM	$DB_NEOS$t_exnp_resbudget
			/* 검색조건 - 예산과목 명 */
			WHERE	IFNULL(erp_budget_name, '') 	LIKE '%$erpAbgtName$%'
		) 	budgetFilter
		 ON	resDoc.res_doc_seq	= budgetFilter.res_doc_seq	
		</isNotEmpty>
		
		INNER JOIN	(
			SELECT	DISTINCT res_doc_seq
			FROM	$DB_NEOS$t_exnp_reshead
			WHERE	1 = 1
			
			<isNotEmpty property="resNote">
			/* 검색조건 - 결의서 적요 */
			 AND	IFNULL(res_note, '') 		LIKE '%$resNote$%'
			</isNotEmpty>
			
			<isNotEmpty property="erpMgtSeq"> 
			/* 검색조건 - 부서/프로젝트 코드 */
			 AND	IFNULL(mgt_seq, '') 		= '$erpMgtSeq$'
			</isNotEmpty>
			
			<isNotEmpty property="expendToDate"> 
			/* 검색조건 - 결의일자 */ 
			 AND	IFNULL(res_date, '') 		BETWEEN '$expendFromDate$'AND '$expendToDate$'
			</isNotEmpty>
			
			<isNotEmpty property="docuFg"> 
			/* 검색조건 - 결의 구분 */ 
			 AND	IFNULL(docu_fg_code, '')	= '$docuFg$'
			</isNotEmpty> 
			
		)	headFilter
		 ON	resDoc.res_doc_seq	= headFilter.res_doc_seq		
		LEFT JOIN (
			SELECT  tripB.trip_res_doc_seq, tripB.res_doc_seq
			FROM	$DB_NEOS$t_exnp_trip_res_doc tripD
			INNER JOIN $DB_NEOS$t_exnp_trip_res_budget tripB
			ON	tripD.trip_res_doc_seq = tripB.trip_res_doc_seq
			GROUP BY tripD.trip_res_doc_Seq
		) tripBudget
		ON tripBudget.res_doc_seq = resDoc.res_doc_seq
		/* 기본조건 - 종결 문서 조회 */ 
		WHERE 	IFNULL(doc.c_distatus, '009') IN ('008', '009')
		AND		comp_seq = #compSeq#
		<isNotEmpty property="fromDate">
		 /* 기본조건 - 기안일자 */
		 AND	IFNULL(doc.c_diwriteday, '') BETWEEN '$fromDate$'AND '$toDate$' 		
		</isNotEmpty>
		
		<isNotEmpty property="senderName"> 
		 /* 검색조건 - 결의서 전송자 */
		 AND	IFNULL(resDoc.send_emp_name, '') LIKE '%$senderName$%'
		</isNotEmpty>
		
		<isNotEmpty property="erpDivSeq">
		 /* 검색조건 - 회계단위 필터 */
		 AND	IFNULL(resDoc.erp_div_seq, '') = '$erpDivSeq$' 		/* erpDivSeq filter필요 */
		</isNotEmpty>
		
		<isNotEmpty property="docTitle">
		 /* 검색조건 - 문서제목 */
		 AND	IFNULL(doc.c_dititle, '') LIKE CONCAT(CONCAT('%', '$docTitle$'), '%')
		</isNotEmpty>
		
		<isNotEmpty property="docNo">
		 /* 검색조건 - 문서번호 */
		 AND	IFNULL(doc.c_ridocfullnum, '') LIKE CONCAT(CONCAT('%', '$docNo$'), '%')		
		</isNotEmpty>
		
		<isNotEmpty property="erpDeptName">
		 /* 검색조건 - 사용부서 */
		 AND	IFNULL(head.erp_dept_name,'') LIKE CONCAT(CONCAT('%', '$erpDeptName$'), '%')
		</isNotEmpty>
		
		<isNotEmpty property="erpEmpName">
		 /* 검색조건 - 사용자 */
		 AND	IFNULL(head.erp_emp_name,'') LIKE CONCAT(CONCAT('%', '$erpEmpName$'), '%')
		</isNotEmpty>
		
		<isNotEmpty property="erpSendYN">
		 /* 검색조건 - 전송여부 */
		 AND	resDoc.erp_send_yn LIKE CONCAT(CONCAT('%', '$erpSendYN$'), '%')
		</isNotEmpty>
		GROUP BY resDoc.res_doc_seq
		
		ORDER BY doc.c_diwriteday DESC, doc.c_ridocfullnum DESC;
		
	</select>
	
	<select id="NpAdminReportA.selectSendEapList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* mariadb/bizboxAlpha/expend/np/admin/NpAdminReportSql - NpAdminReportA.selectSendEapList */
		/* [영리] 결의서 전송 리스트 조회 */
		SELECT  IFNULL(resDoc.res_doc_seq,'')									AS 'resDocSeq'
		        , IFNULL(doc.c_dikeycode,'')									AS 'docSeq'
		        , IFNULL(doc.c_ridocfullnum,'')									AS 'docNo'
		        , IFNULL(resDoc.doc_status,'')									AS 'docStatus'
		        , IFNULL(resDoc.resdoc_note,'')									AS 'note'
		        , IFNULL(resDoc.erp_gisu,'')									AS 'erpGisu'   
		        , IFNULL(resDoc.comp_seq,'')									AS 'compSeq'
		        , IFNULL(resDoc.comp_name,'')									AS 'compName'
		        , IFNULL(resDoc.dept_seq,'')									AS 'deptSeq'
		        , IFNULL(resDoc.dept_name,'')									AS 'deptName'
		        , IFNULL(resDoc.emp_seq,'')										AS 'empSeq'
		        , IFNULL(resDoc.emp_name,'')									AS 'empName'
		        , IFNULL(resDoc.erp_send_yn,'')									AS 'erpSendYN'
		        , IFNULL(head.erp_pc_seq, '')									AS 'erpPcSeq'
		        , IFNULL(head.erp_pc_name, '')									AS 'erpPcName'
		        , IFNULL(head.erp_dept_seq, '')									AS 'erpDeptSeq'
		        , IFNULL(head.erp_dept_name, '')								AS 'erpDeptName'
		        , IFNULL(head.erp_emp_seq, '')									AS 'erpEmpSeq'
		        , IFNULL(head.erp_emp_name, '')									AS 'erpEmpName'
		        , budget.amt													AS 'amt'
		        , doc.c_dititle													AS 'docTitle'
		        , doc.c_tikeycode												AS 'formSeq'
		        , DATE_FORMAT(doc.c_diwriteday,'%Y-%m-%d')						AS 'repDate'
		        , DATE_FORMAT(IFNULL(resDoc.expend_date,''),'%Y-%m-%d')			AS 'expendDate'
		        , IFNULL(DATE_FORMAT(resDoc.erp_expend_year,'%Y-%m-%d'),'')		AS 'erpExpendYear'
		        , IFNULL(consDoc.c_dikeycode, '')								AS 'confferDocSeq'
		        , doc.c_tikeycode												AS 'confferFormSeq'
		        , resDoc.erp_div_seq											AS 'erpDivSeq'
		        , resDoc.erp_div_name											AS 'erpDivName'
		        , 'EAP'															AS 'eaType'
		FROM	$DB_NEOS$t_exnp_resdoc resDoc
				INNER JOIN $DB_NEOS$t_exnp_reshead head ON resDoc.res_doc_seq = head.res_doc_seq
				INNER JOIN (
					SELECT	res_doc_seq
							, SUM(budget_amt) AS amt
					FROM	$DB_NEOS$t_Exnp_resbudget
					GROUP	BY res_doc_seq
				) budget ON resDoc.res_doc_seq = budget.res_doc_seq
				INNER JOIN (
					SELECT	doc_id AS c_dikeycode
							, form_id AS c_tikeycode
							, doc_title AS c_dititle
							, rep_dt AS c_diwriteday
							, doc_sts AS c_distatus
							, doc_no AS c_ridocfullnum
					FROM	$DB_NEOS$teag_appdoc doc
					WHERE	doc_sts = '90'
				) doc ON resDoc.doc_seq  = doc.c_dikeycode
				LEFT JOIN (
					SELECT	cons_doc_seq 
							, c_dikeycode
							, c_tikeycode
					FROM	$DB_NEOS$t_exnp_consdoc cd
							INNER JOIN $DB_NEOS$a_docinfo ad ON cd.doc_seq = ad.c_dikeycode
				) consDoc ON  resDoc.conffer_doc_seq = consDoc.cons_doc_seq
				
				<isNotEmpty property="erpAbgtName"> 
					INNER JOIN (
						SELECT	res_doc_seq
						FROM	$DB_NEOS$t_exnp_resbudget
								/* 검색조건 - 예산과목 명 */
						WHERE	IFNULL(erp_budget_name, '')  LIKE '%$erpAbgtName$%'
					)  budgetFilter ON resDoc.res_doc_seq = budgetFilter.res_doc_seq 
				</isNotEmpty>
		
				INNER JOIN (
					SELECT	DISTINCT
							res_doc_seq
					FROM	$DB_NEOS$t_exnp_reshead
					WHERE	1 = 1
		
					<isNotEmpty property="resNote">
							/* 검색조건 - 결의서 적요 */
					AND		IFNULL(res_note, '') LIKE '%$resNote$%'
					</isNotEmpty>
		
					<isNotEmpty property="erpMgtSeq"> 
							/* 검색조건 - 부서/프로젝트 코드 */
					AND		IFNULL(mgt_seq, '') = '$erpMgtSeq$'
					</isNotEmpty>
		
					<isNotEmpty property="txtExpToDate"> 
							/* 검색조건 - 결의일자 */ 
					AND		IFNULL(res_date, '') BETWEEN '$txtExpFromDate$'AND '$txtExpToDate$'
					</isNotEmpty>
		
					<isNotEmpty property="docuFg"> 
							/* 검색조건 - 결의 구분 */ 
					AND		IFNULL(docu_fg_code, '') = '$docuFg$'
					</isNotEmpty> 
		
				) headFilter ON resDoc.res_doc_seq = headFilter.res_doc_seq 
				/* 기본조건 - 종결 문서 조회 */ 
		WHERE   IFNULL(doc.c_distatus, '') IN ('90')
		
		<isNotEmpty property="fromDate">
				/* 기본조건 - 기안일자 */
		AND     REPLACE(IFNULL(SUBSTR(doc.c_diwriteday,'1','10'), ''),'-','') BETWEEN '$fromDate$'AND '$toDate$'
		</isNotEmpty>
		
		<isNotEmpty property="senderName"> 
				/* 검색조건 - 결의서 전송자 */
		AND		IFNULL(doc.send_emp_name, '') LIKE '%$senderName$%'
		</isNotEmpty>
		
		<isNotEmpty property="erpDivSeq">
				/* 검색조건 - 회계단위 필터 */
		AND		IFNULL(resDoc.erp_div_seq, '') = '$erpDivSeq$' /* erpDivSeq filter필요 */
		</isNotEmpty>
		
		<isNotEmpty property="docTitle">
				/* 검색조건 - 문서제목 */
		AND		IFNULL(doc.c_dititle, '') LIKE CONCAT(CONCAT('%', '$docTitle$'), '%')
		</isNotEmpty>
		
		<isNotEmpty property="docNo">
				/* 검색조건 - 문서번호 */
		AND		IFNULL(doc.c_ridocfullnum, '') LIKE CONCAT(CONCAT('%', '$docNo$'), '%') 
		</isNotEmpty>
		
		<isNotEmpty property="erpDeptName">
				/* 검색조건 - 사용부서 */
		AND		IFNULL(head.erp_dept_name,'') LIKE CONCAT(CONCAT('%', '$erpDeptName$'), '%')
		</isNotEmpty>
		
		<isNotEmpty property="erpEmpName">
				/* 검색조건 - 사용자 */
		AND		IFNULL(head.erp_emp_name,'') LIKE CONCAT(CONCAT('%', '$erpEmpName$'), '%')
		</isNotEmpty>
		
		<isNotEmpty property="erpSendYN">
				/* 검색조건 - 전송여부 */
		AND		resDoc.erp_send_yn LIKE CONCAT(CONCAT('%', '$erpSendYN$'), '%')
		</isNotEmpty>
		
		GROUP BY resDoc.res_doc_seq
		ORDER BY c_diwriteday DESC
	</select>
	
	<select id="NpAdminReportA.selectSendInfoDoc" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* mariadb/bizboxAlpha/expend/np/admin/NpAdminReportSql - NpAdminReportA.selectSendInfoDoc */
		/* 결의서 전송 항목 조회 - 문서 */
		SELECT	
			res_doc_seq			AS 'resDocSeq'
			, doc_seq			AS 'docSeq'
			, doc_no			AS 'docNo'
			, doc_status		AS 'docStatus'
			, resdoc_note		AS 'note'
			, expend_date		AS 'expendDate'
			, erp_div_seq		AS 'erpDivSeq'
			, erp_comp_seq		AS 'erpCompSeq'
			, erp_dept_seq		AS 'erpDeptSeq'
			, erp_emp_seq		AS 'erpEmpSeq'
			, erp_gisu			AS 'erpGisu'
			, erp_expend_year	AS 'erpExpendYear'
			, comp_seq			AS 'compSeq'
			, comp_name			AS 'compName'
			, dept_seq			AS 'deptSeq'
			, dept_name			AS 'deptName'
			, emp_seq			AS 'empSeq'
			, emp_name			AS 'empName'
			, conffer_doc_seq	AS 'confferDocSeq'
			, IFNULL(erp_send_yn, 'N')		AS 'erpSendYN'
		FROM	$DB_NEOS$t_exnp_resdoc 	d
		WHERE	res_doc_seq = #resDocSeq#;		
	</select>
	
		
	<select id="NpAdminReportA.selectSendInfoHead" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* mariadb/bizboxAlpha/expend/np/admin/NpAdminReportSql - NpAdminReportA.selectSendInfoHead */
		/* 결의서 전송 항목 조회 - 헤더 */
		SELECT	
			h.res_doc_seq			AS 'resDocSeq'
			, h.res_seq				AS 'resSeq'
			, h.mgt_seq				AS 'mgtSeq'
			, h.mgt_name			AS 'mgtName'
			, h.res_date			AS 'resDate'
			, h.docu_fg_code		AS 'docuFgCode'
			, h.docu_fg_name		AS 'docuFgName'
			, CONCAT('[', IFNULL(CASE ( SELECT COUNT(*) cnt FROM $DB_NEOS$t_co_comp WHERE comp_seq = d.comp_seq AND ea_type = 'eap' LIMIT 1 )
                                WHEN 1 THEN ( SELECT doc_no FROM $DB_NEOS$TEAG_APPDOC WHERE doc_id = d.doc_seq LIMIT 1 )
                                ELSE replace(d.doc_no,"'","''")
                        END, ''), ']', REPLACE(h.res_note, '''', '''''')) AS 'resNote'
			
			, h.erp_comp_seq		AS 'erpCompSeq'
			, h.erp_comp_name		AS 'erpCompName'
			, h.erp_gisu_date		AS 'erpGisuDate'
			, h.erp_gisu_sq			AS 'erpGisuSeq'
			, h.erp_pc_seq			AS 'erpPcSeq'
			, h.erp_no_cdocu		AS 'erpNoCdocu'
			, h.erp_emp_seq			AS 'erpEmpSeq'
			, h.erp_emp_name		AS 'erpEmpName'
			, d.erp_div_seq			AS 'erpDivSeq'
			, d.erp_div_name		AS 'erpDivName'
			, h.erp_dept_seq		AS 'erpDeptSeq'
			, h.erp_dept_name		AS 'erpDeptName'
			, h.erp_gisu			AS 'erpGisu'
			, h.erp_gisu_from_date	AS 'erpGisuFromDate'
			, h.erp_gisu_to_date	AS 'erpGisuToDate'
			, h.erp_year			AS 'erpYear'
			, h.btr_seq				AS 'btrSeq'
			, h.btr_name			AS 'btrName'
			, h.btr_nb				AS 'btrNb'
			, h.bottom_Seq			AS 'bottomSeq'
			, h.bottom_name			AS 'bottomName'
			, h.conffer_doc_seq		AS 'confferDocSeq'
			, h.conffer_seq			AS 'confferSeq'
			, c.cause_date			AS 'causeDate'
			, c.sign_date			AS 'signDate'
			, c.inspect_date		AS 'inspectDate'
			, c.payplan_date		AS 'payplanDate'
			, c.cause_emp_seq		AS 'causeEmpSeq'
			, c.cause_emp_name		AS 'cuaseEmpName'
		FROM		$DB_NEOS$t_exnp_reshead	h
		 LEFT JOIN	$DB_NEOS$t_exnp_cause	c
		  ON	h.res_seq	= c.res_seq
		 INNER JOIN	$DB_NEOS$t_exnp_resdoc d
		 ON	h.res_doc_seq = d.res_doc_seq
		 INNER JOIN	(
			SELECT	res_seq	AS 't_res_seq'
			FROM	$DB_NEOS$t_exnp_restrade
			GROUP BY res_seq
		 )	temp		
		ON	h.res_seq = temp.t_res_seq	 
		WHERE	h.res_doc_seq	= #resDocSeq#;
	</select>

	<select id="NpAdminReportA.selectSendCancelInfoRes" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* mariadb/bizboxAlpha/expend/np/admin/NpAdminReportSql - NpAdminReportA.selectSendCancelInfoRes */
		/* 결의서 전송 취소 리스트 조회 - 결의서 */	
		SELECT	
			h.res_doc_seq		AS 'resDocSeq'
			, h.res_seq			AS 'resSeq'
			, h.res_date		AS 'resDate'
			, h.res_note		AS 'note'
			, h.erp_comp_seq	AS 'erpCompSeq'
			, b.no_cdocu		AS 'erpNoCDocu'
			, h.erp_gisu_date	AS 'erpGisuDt'
			, h.erp_gisu_sq		AS 'erpGisuSq'
		FROM	$DB_NEOS$t_exnp_reshead	h
		INNER JOIN	$DB_NEOS$t_exnp_resbudget b
		 ON	h.res_seq = b.res_seq
		WHERE	h.res_doc_seq = #resDocSeq#; 		
	</select>
	
	
	<update id="NpAdminReportA.updateResSendStatus" parameterClass="java.util.HashMap">
		/* mariadb/bizboxAlpha/expend/np/admin/NpAdminReportSql - NpAdminReportA.updateResSendStatus */
		/* 결의서 전송 상태 변경 - 문서 */
		UPDATE $DB_NEOS$t_exnp_resdoc
		SET		`erp_send_yn`	= #sendFg#
				, `send_emp_seq` = #empSeq#
				, `send_emp_name` = #empName#
				, `send_date` = NOW()
		WHERE	`res_doc_seq` 	= #resDocSeq# 	
	</update>	
	
	<update id="NpAdminReportA.updateResBudgetKey" parameterClass="java.util.HashMap">
		/* mariadb/bizboxAlpha/expend/np/admin/NpAdminReportSql - NpAdminReportA.updateResBudgetKey */
		/* 결의서 ERP 연동 키 업데이트 - 예산 */
		UPDATE	$DB_NEOS$t_exnp_resbudget
		SET		no_cdocu = #noCDocu#
				, no_cdoline = #noCDoline#
		WHERE	budget_seq = #budgetSeq#
	</update>	
	<update id="NpAdminReportA.updateResTradeKey" parameterClass="java.util.HashMap">
		/* mariadb/bizboxAlpha/expend/np/admin/NpAdminReportSql - NpAdminReportA.updateResTradeKey */
		/* 결의서 ERP 연동 키 업데이트 - 거래처 */
		UPDATE	$DB_NEOS$t_exnp_restrade
		SET	no_cdocu = #noCDocu#
			, no_cdoline = #noCDoline#
			, no_payline = #noPayLine#
			, erp_etc_mng_seq = #noCdMng#
		WHERE	trade_seq = #tradeSeq#
	</update>	
	
	<select id="NpAdminReportA.selectSendInfoBudget" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* mariadb/bizboxAlpha/expend/np/admin/NpAdminReportSql - NpAdminReportA.selectSendInfoBudget */
		/* 결의서 전송 항목 조회 - 헤더및 예산 */
		SELECT	
			d.doc_seq				AS 'docSeq'
			, h.res_doc_seq			AS 'resDocSeq'
			, h.res_seq				AS 'resSeq'
			, b.budget_seq			AS 'budgetSeq'
			, h.mgt_seq				AS 'mgtSeq'
			, h.mgt_name			AS 'mgtName'
			, h.res_date			AS 'resDate'
			, (	/* 옵션에 따른 회계 발의일자 기능 */
			CASE	(
				SELECT	IFNULL(MAX(set_value), '0')
				FROM	$DB_NEOS$t_exnp_option 
				WHERE	option_gbn = '1' 
				 AND	option_code = '10' 
				 AND	comp_seq = d.comp_seq
			)	WHEN	'0'	THEN h.res_date
				ELSE		DATE_FORMAT(NOW(), '%Y%m%d')
			END
			)	AS 	'cacctDate'
			, h.docu_fg_code		AS 'docuFgCode'
			, h.docu_fg_name		AS 'docuFgName'
			, CONCAT('[', REPLACE(d.doc_no,"'","''"), '] ',  REPLACE(h.res_note, '''', '''''') )	AS 'note'
			, CONCAT('[', REPLACE(d.doc_no,"'","''"), '] ' )	AS 'docNo'
			, h.erp_comp_seq		AS 'erpCompSeq'
			, h.erp_comp_name		AS 'erpCompName'
			, h.erp_gisu_date		AS 'erpGisuDt'
			, h.erp_gisu_sq			AS 'erpGisuSq'
			, h.erp_pc_seq			AS 'erpPcSeq'
			, h.erp_pc_name			AS 'erpPcName'
			, h.erp_no_cdocu		AS 'erpNoCdocu'
			, h.erp_emp_seq			AS 'erpEmpSeq'
			, h.erp_emp_name		AS 'erpEmpName'
			, b.erp_div_seq			AS 'erpDivSeq'
			, b.erp_div_name		AS 'erpDivName'
			, h.erp_dept_seq		AS 'erpDeptSeq'
			, h.erp_dept_name		AS 'erpDeptName'
			, h.erp_gisu			AS 'erpGisu'
			, h.erp_gisu_from_date	AS 'erpGisuFromDate'
			, h.erp_gisu_to_date	AS 'erpGisuToDate'
			, h.erp_year			AS 'erpYear'
			, h.btr_seq				AS 'btrSeq'
			, h.btr_name			AS 'btrName'
			, h.btr_nb				AS 'btrNb'
			, h.bottom_seq			AS 'bottomSeq'
			, h.bottom_name			AS 'bottomName'
			, b.erp_bq_seq			AS 'erp_bq_seq'
			, b.erp_bk_seq			AS 'erpBkSeq'
			, b.erp_budget_seq		AS 'erpBudgetSeq'
			, REPLACE(b.erp_budget_name, '''', '''''') AS 'erpBudgetName'
			, b.erp_bizplan_seq		AS 'erpBizplanSeq'
			, b.erp_bizplan_name	AS 'erpBizplanName'
			, b.erp_bgt1_name		AS 'erpBgt1Name'
			, b.erp_bgt2_name		AS 'erpBgt2Name'
			, b.erp_bgt3_name		AS 'erpBgt3Name'
			, b.erp_bgt4_name		AS 'erpBgt4Name'
			, b.erp_open_amt		AS 'erpOpenAmt'
			, b.erp_left_amt		AS 'erpLeftAmt'
			, b.erp_res_amt			AS	'erpResAmt'
			, b.gw_balance_amt		AS	'gwBalanceAmt'
			, b.budget_std_amt		AS 'stdAmt'
			, b.budget_tax_amt		AS 'taxAmt'
			, b.budget_amt			AS 'amt'
			, b.erp_bgacct_seq		AS 'erpBgacctSeq'
			, b.erp_bgacct_name		AS 'erpBgacctName'
			, b.erp_fiacct_seq		AS 'erpFiacctSeq'
			, b.erp_fiacct_name		AS 'erpFiacctName'
			, b.set_fg_code			AS 'setFgCode'
			, b.set_fg_name			AS 'setFgName'
			, b.vat_fg_code			AS 'vatFgCode'
			, b.vat_fg_name			AS 'vatFgName'
			, b.tr_fg_code			AS 'trFgCode'
			, b.tr_fg_name			AS 'trFgName'
			, b.ctl_fg_code			AS 'ctlFgCode'
			, b.ctl_fg_name			AS 'ctlFgName'
			, REPLACE(b.budget_note, '''', '''''')	AS 'budgetNote'
			, IFNULL(cause.cause_date, '')		AS 'dtCause'
			, IFNULL(cause.sign_date, '')		AS 'dtStart'
			, IFNULL(cause.inspect_date, '')	AS 'dtEnd'
			, IFNULL(cause.payplan_date, '')	AS 'dtPayPlan'
			, IFNULL(cause.cause_emp_seq, '')	AS 'idCause'
			, '0' 					AS 'amCauseSum'
			, IFNULL(( SELECT set_value 
			    FROM $DB_NEOS$t_exnp_option 
			    WHERE form_seq = ( SELECT form_seq 
						FROM $DB_NEOS$t_exnp_resdoc 
						WHERE res_doc_Seq = #resDocSeq# )
			    AND comp_seq = #compSeq# 
			    AND option_gbn='3' 
			    AND option_code ='12' ),'1') AS 'budgetSendOpt'
			, IFNULL(( SELECT set_value 
			    FROM $DB_NEOS$t_exnp_option 
			    WHERE form_seq = ( SELECT form_seq 
						FROM $DB_NEOS$t_exnp_resdoc 
						WHERE res_doc_Seq = #resDocSeq# )
			    AND comp_seq = #compSeq# 
			    AND option_gbn= '3' 
			    AND option_code ='14' ),'0') AS 'budgetDtCacctSendOpt'
		FROM	(
			SELECT	* 
			FROM	$DB_NEOS$t_exnp_reshead
			WHERE	res_doc_seq = #resDocSeq#
		)	h
		INNER JOIN	$DB_NEOS$t_exnp_resbudget b
		ON	b.res_seq = h.res_seq
		INNER JOIN	(
			SELECT	budget_seq	AS 't_budget_seq'
			FROM	$DB_NEOS$t_exnp_restrade
			GROUP BY budget_seq
		)	temp		
		ON	b.budget_seq = temp.t_budget_seq	
		INNER JOIN	$DB_NEOS$t_exnp_resdoc d
		ON	h.res_doc_seq = d.res_doc_seq
		LEFT OUTER JOIN (
			SELECT	res_seq
					, cause_date
					, sign_date
					, inspect_date
					, payplan_date
					, cause_emp_seq
			FROM	$DB_NEOS$t_exnp_cause
			WHERE	res_seq IN ( select res_seq from $DB_NEOS$t_exnp_reshead where res_doc_seq = #resDocSeq# )
		)	cause
		on	h.res_seq = cause.res_seq
		ORDER BY h.res_seq ASC, b.budget_seq ASC;
	</select>
	
	<select id="NpAdminReportA.selectSendInfoTrade" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* mariadb/bizboxAlpha/expend/np/admin/NpAdminReportSql - NpAdminReportA.selectSendInfoTrade */
		/* 결의서 전송 항목 조회 - 거래처 */
		SELECT 	
			t.res_doc_seq		AS 'resDocSeq'
			, t.res_seq			AS 'resSeq'
			, t.budget_seq		AS 'budgetSeq'
			, t.trade_seq		AS 'tradeSeq'
			, t.erp_isu_dt		AS 'erpIsuDt'
			, t.erp_isu_sq		AS 'erpIsuSq'
			, t.erp_in_sq		AS 'erpInSq'
			, t.erp_bq_sq		AS 'erpBqSq'
			, t.item_name		AS 'itemName'
			, t.item_cnt		AS 'itemCnt'
			, t.emp_name		AS 'empName'
			, t.tr_seq			AS 'trSeq'
			, REPLACE(t.tr_name, '''', '''''') AS 'trName'
			, t.ceo_name		AS 'ceoName'
			, t.trade_amt		AS 'amt'
			, t.trade_std_amt	AS 'stdAmt'
			, t.trade_vat_amt	AS 'vatAmt'
			, t.jiro_seq		AS 'jiroSeq'
			, t.jiro_name		AS 'jiroName'
			, REPLACE(t.ba_nb,'''','''''')			AS 'baNb'
			, t.btr_seq			AS 'btrSeq'
			, t.btr_name		AS 'btrName'
			, t.depositor		AS 'depositor'
			, REPLACE(t.trade_note, '''', '''''')		AS 'note'
			, t.ctr_seq			AS 'ctrSeq'
			, REPLACE(t.ctr_name, '''', '''''') AS 'ctrName'
			, t.reg_date		AS 'taxDate'
			, t.etc_data_cd		AS 'etcDataCd'
			, t.etc_required_rate AS 'etcRequiredRate'
			, t.etc_required_amt AS 'etcRequiredAmt'
			, t.etc_income_seq	AS 'etcIncomeSeq'
			, t.etc_belong_year AS 'etcBelongYear'
			, t.etc_belong_month AS 'etcBelongMonth'
			, t.etc_belong_date AS 'etcBelongDate'
			, t.etc_belong_yearmonth AS 'etcBelongYearMonth'
			, ( CASE b.tr_fg_code WHEN '8' THEN CONCAT(t.salary_belong_year, t.salary_belong_month) ELSE CONCAT(t.etc_belong_year, t.etc_belong_month) END ) AS 'etcRvrsYM'
			, ( CASE b.tr_fg_code WHEN '8' THEN t.salary_income_vat_amt ELSE t.etc_income_vat_amt END ) AS 'etcIncomeVatAmt'
			, ( CASE b.tr_fg_code WHEN '8' THEN t.salary_resident_vat_amt ELSE t.etc_resident_vat_amt END ) AS 'etcResidentVatAmt'
			, t.etc_employment_amt AS 'etcEmploymentAmt'
			, t.etc_employment_insurance_amt AS 'etcEmploymentInsuranceAmt'			
			, etc_school_amt		AS 'etcSchoolAmt'  
			, etc_income_amt		AS 'etcIncomeAmt'
			, t.salary_etc_amt		AS 'salaryEtcAmt'
			, t.no_tax_code     AS 'noTaxCode'
			, t.no_tax_name     AS 'noTaxName'
			, t.etc_biz_seq		AS 'etcBizSeq'
			, t.etc_biz_name		AS 'etcBizName'
			, b.set_fg_code		AS 'setFgCode'
			, b.set_fg_name		AS 'setFgName'
			, b.vat_fg_code		AS 'vatFgCode'
			, b.vat_fg_name		AS 'vatFgName'
			, b.tr_fg_code		AS 'trFgCode'
			, b.tr_fg_name		AS 'trFgName'
			, d.erp_comp_seq	AS 'erpCompSeq'
			, d.erp_emp_seq		AS 'erpEmpSeq'
			, d.erp_dept_seq	AS 'erpDeptSeq'
			, h.erp_pc_seq		AS 'erpPcSeq'
			, c2.card_num		AS 'cardNum'
			, d.erp_div_seq		AS 'erpDivSeq'
			, IFNULL(etc_school_amt, '0')		AS 'etcSchoolAmt'
			, t.depositno		AS	'depositno' 
			, t.pay_tr_name		AS 'payTrName'
			, t.pay_tr_seq		AS 'payTrSeq' 
		FROM 	$DB_NEOS$t_exnp_restrade t
		INNER JOIN	$DB_NEOS$t_exnp_resbudget b
		 ON	t.budget_seq	= b.budget_seq
		 AND	t.res_seq	= b.res_seq
		 AND	t.res_doc_seq	= b.res_doc_seq
		INNER JOIN 	$DB_NEOS$t_exnp_reshead h
		 ON	t.res_seq	= h.res_seq
		 AND	t.res_doc_seq	= h.res_doc_seq
		INNER JOIN 	$DB_NEOS$t_exnp_resdoc d
		 ON	t.res_doc_seq = d.res_doc_seq	
		LEFT JOIN	$DB_NEOS$t_ex_card_aq_tmp c
		 ON	t.interface_seq = c.sync_id
		  AND	t.interface_type = 'card'
		LEFT JOIN 	$DB_NEOS$t_ex_card c2
		 ON	c.card_num = c2.card_code		  
		LEFT JOIN	$DB_NEOS$t_ex_etax_aq_tmp e
		 ON	t.interface_seq = e.sync_id
		  AND	t.interface_type = 'etax'		 
		WHERE	t.res_doc_seq = #resDocSeq#
		ORDER BY h.res_seq ASC, b.budget_seq ASC, t.trade_seq ASC;	
	</select>
	
	<select id="NpAdminReportA.selectSendInfoItemSpec" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* mariadb/bizboxAlpha/expend/np/admin/NpAdminReportSql - NpAdminReportA.selectSendInfoItemSpec */
		/* 물품명세 전송 항목 조회 - 거래처 */
		SELECT 	
			i.res_doc_seq	AS resDocSeq
			, i.res_seq		AS resSeq
			, i.budget_seq	AS budgetSeq
			, i.res_item_seq	AS resItemSeq
			, h.erp_comp_seq	AS erpCompSeq
			, h.res_date		AS resDate
			, h.erp_gisu_date	AS erpGisuDate
			, h.erp_gisu_sq		AS erpGisuSeq
			, item_name		AS itemName
			, item_size		AS itemSize
			, item_unit		AS itemUnit
			, item_cnt		AS itemCnt
			, unit_amt		AS unitAmt
			, item_amt		AS itemAmt
			, item_note		AS itemNote 
		FROM	$DB_NEOS$t_exnp_resitem i	 
		INNER JOIN	$DB_NEOS$t_exnp_reshead h
		ON	i.res_doc_seq = h.res_doc_Seq
		AND	i.res_seq = h.res_seq
		AND h.res_doc_seq = #resDocSeq#
		LEFT JOIN	$DB_NEOS$t_exnp_resbudget b
		ON	i.res_doc_Seq = b.res_doc_seq
		AND	i.res_seq = b.res_doc_seq
		AND b.res_doc_seq = #resDocSeq#
	</select>
	
	
	<select id="NpAdminReportA.selectEACardReport" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* mariadb/bizboxAlpha/expend/np/admin/NpAdminReportSql - NpAdminReportA.selectEACardReport */
		/* 카드사용현황 - 비영리 */
		/* 전자결재(비영리) 관리자 카드사용 현황 */
		SELECT	A.sync_id AS syncId
				, B.card_code AS cardCode
				, B.card_name AS cardName
				, B.card_num AS cardNum
				, A.auth_num AS authNum
				, A.auth_date AS authDate
				, A.auth_time AS authTime
				, CONCAT(SUBSTR(A.auth_date,1,4),'-',SUBSTR(A.auth_date,5,2),'-',SUBSTR(A.auth_date,7,2),' ',SUBSTR(A.auth_time,1,2),':',SUBSTR(A.auth_time,3,2),':',SUBSTR(A.auth_time,5,2)) AS showDate
				, A.georae_coll AS georaeColl
				, A.georae_stat AS georaeStat
				, CASE 
					WHEN A.GEORAE_STAT = '1' || A.GEORAE_STAT = 'N' THEN '승인' 
					ELSE '취소' 
				END AS georaeStatName
				, A.georae_cand AS georaeCand
				, IFNULL(A.request_amount,0) AS requestAmount
				, IFNULL(A.amt_md_amount,0) AS amtMdAmount
				, IFNULL(A.vat_md_amount,0) AS vatMdAmount
				, IFNULL(A.ser_amount,0) AS serAmt
				, A.merc_name AS mercName
				, A.merc_saup_no AS mercSaupNo
				, IFNULL(A.send_yn, 'N') AS sendYN
				, CASE
					WHEN IFNULL(A.send_yn,'N') = 'N' THEN '미결의'
					WHEN (IFNULL(A.send_yn,'N') = 'Y' AND A.if_m_id ='D') THEN '미사용'
					ELSE '결의'
				END AS sendYNName
				, A.if_m_id AS ifMId
				, A.if_d_id AS ifDId
				, IFNULL(C.doc_seq, '') AS docSeq
				, IFNULL(C.doc_title, '') AS docTitle
				, IFNULL(C.doc_no, '') AS docNo
				, IFNULL(C.form_id, '') AS formSeq
				, IFNULL(c.user_nm, '') AS userNm
		FROM	(
			SELECT	*
			FROM	$DB_NEOS$t_ex_card_aq_tmp
			WHERE	auth_date BETWEEN #fromDate# AND #toDate#
			AND		merc_name LIKE CONCAT('%',#searchMercName#,'%')
			AND     auth_num LIKE CONCAT('%',#searchCardAuthNum#,'%')
			AND     merc_saup_no LIKE CONCAT('%',#searchOwnerRegNo#,'%')
			<isEqual property="sendYN" compareValue="D">
			AND		IFNULL(send_yn,'N') = 'Y'
			AND		if_m_id = 'D'
			</isEqual>
			<isNotEqual property="sendYN" compareValue="D">
			AND		IFNULL(send_yn,'N') LIKE CONCAT('%',#sendYN#,'%')
			</isNotEqual>
			<isEqual property="georaeStat" compareValue="N">
			AND		( georae_stat = 'N' OR georae_stat = '1' ) 
			</isEqual>
			<isEqual property="georaeStat" compareValue="Y">
			AND		( georae_stat = 'Y' OR georae_stat = '0' ) 
			</isEqual>
		) A
		INNER JOIN (
			SELECT	card_code
					, card_num
					, card_name
					, REPLACE(card_num,'-','') AS repCardNum
			FROM	$DB_NEOS$t_ex_card
			WHERE	comp_seq = #compSeq#
			<isNotEmpty property="cardInfo">
				<iterate  prepend="AND" property="cardInfo" open=" card_code IN (" close=")" conjunction="," >
					#cardInfo[]#
				</iterate>
			</isNotEmpty>
 
					
		) B ON A.card_num = B.repCardNum
		LEFT OUTER JOIN (
			SELECT	A.doc_seq
					, B.doc_title
					, B.doc_no
					, B.form_id
					, B.user_nm
					, A.interface_seq
			FROM	(
				SELECT	A.res_doc_seq
						, A.doc_seq
						, B.interface_seq
				FROM	$DB_NEOS$t_Exnp_resdoc A
				INNER JOIN $DB_NEOS$t_exnp_restrade B ON B.interface_type = 'card' AND A.res_doc_seq = B.res_doc_seq
				WHERE	doc_seq != ''
				AND		doc_status NOT IN ('','d','007')
			) A INNER JOIN (
				SELECT	doc.c_dikeycode AS doc_id
						, doc.c_tikeycode AS form_id
						, doc.c_dititle AS doc_title
						, rec.c_ridocfullnum AS doc_no
						, drf.c_dijunkyulname AS user_nm
				FROM	$DB_NEOS$a_docinfo doc
				INNER JOIN $DB_NEOS$a_draftinfo drf ON doc.c_dikeycode = drf.c_dikeycode
				INNER JOIN $DB_NEOS$a_recordinfo rec ON doc.c_dikeycode = rec.c_dikeycode
				WHERE	IFNULL(drf.c_dijunkyulname, '') LIKE CONCAT('%',#searchUserNm#,'%')
			) B ON A.doc_seq = B.doc_id
		) C ON A.sync_id = C.interface_seq
		<isEqual property="orderBy" compareValue="ASC">
		ORDER BY A.auth_date, A.auth_time, sync_id ASC
		</isEqual>
		<isNotEqual property="orderBy" compareValue="ASC">
		ORDER BY A.auth_date, A.auth_time, sync_id DESC
		</isNotEqual>
	</select>
	
	<select id="NpAdminReportA.selectEAPCardReport" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* mariadb/bizboxAlpha/expend/np/admin/NpAdminReportSql - NpAdminReportA.selectEAPCardReport */
		/* 카드사용현황 - 영리 */
		/* 전자결재(영리) 관리자 카드사용 현황 */
		SELECT	A.sync_id AS syncId
				, B.card_code AS cardCode
				, B.card_name AS cardName
				, B.card_num AS cardNum
				, A.auth_num AS authNum
				, A.auth_date AS authDate
				, A.auth_time AS authTime
				, CONCAT(SUBSTR(A.auth_date,1,4),'-',SUBSTR(A.auth_date,5,2),'-',SUBSTR(A.auth_date,7,2),' ',SUBSTR(A.auth_time,1,2),':',SUBSTR(A.auth_time,3,2),':',SUBSTR(A.auth_time,5,2)) AS showDate
				, A.georae_coll AS georaeColl
				, A.georae_stat AS georaeStat
				, CASE 
					WHEN A.GEORAE_STAT = '1' || A.GEORAE_STAT = 'N' THEN '승인' 
					ELSE '취소' 
				END AS georaeStatName
				, A.georae_cand AS georaeCand
				, IFNULL(A.request_amount,0) AS requestAmount
				, IFNULL(A.amt_md_amount,0) AS amtMdAmount
				, IFNULL(A.vat_md_amount,0) AS vatMdAmount
				, IFNULL(A.ser_amount,0) AS serAmt
				, A.merc_name AS mercName
				, A.merc_saup_no AS mercSaupNo
				, IFNULL(A.send_yn, 'N') AS sendYN
				, CASE
					WHEN IFNULL(A.send_yn,'N') = 'N' THEN '미결의'
					WHEN (IFNULL(A.send_yn,'N') = 'Y' AND A.if_m_id ='D') THEN '미사용'
					ELSE '결의'
				END AS sendYNName
				, A.if_m_id AS ifMId
				, A.if_d_id AS ifDId
				, IFNULL(C.doc_seq, '') AS docSeq
				, IFNULL(C.doc_title, '') AS docTitle
				, IFNULL(C.doc_no, '') AS docNo
				, IFNULL(C.form_id, '') AS formSeq
				, IFNULL(c.user_nm, '') AS userNm
		FROM	(
			SELECT	*
			FROM	$DB_NEOS$t_ex_card_aq_tmp
			WHERE	auth_date BETWEEN #fromDate# AND #toDate#
			AND		merc_name LIKE CONCAT('%',#searchMercName#,'%')
			<isEqual property="sendYN" compareValue="D">
			AND		IFNULL(send_yn,'N') = 'Y'
			AND		if_m_id = 'D'
			</isEqual>
			<isNotEqual property="sendYN" compareValue="D">
			AND		IFNULL(send_yn,'N') LIKE CONCAT('%',#sendYN#,'%')
			</isNotEqual>
			<isEqual property="georaeStat" compareValue="N">
			AND		( georae_stat = 'N' OR georae_stat = '1' ) 
			</isEqual>
			<isEqual property="georaeStat" compareValue="Y">
			AND		( georae_stat = 'Y' OR georae_stat = '0' ) 
			</isEqual>
		) A
		INNER JOIN (
			SELECT	card_code
					, card_num
					, card_name
					, REPLACE(card_num,'-','') AS repCardNum
			FROM	$DB_NEOS$t_ex_card
			WHERE	comp_seq = #compSeq#
			AND		card_num LIKE CONCAT('%',#searchCardNum#,'%')
			AND		IFNULL(card_name,'') LIKE CONCAT('%',#searchCardName#,'%')
		) B ON A.card_num = B.repCardNum
		LEFT OUTER JOIN (
			SELECT	A.doc_seq
					, B.doc_title
					, B.doc_no
					, B.form_id
					, B.user_nm
					, A.interface_seq
			FROM	(
				SELECT	A.res_doc_seq
						, A.doc_seq
						, B.interface_seq
				FROM	$DB_NEOS$t_Exnp_resdoc A
				INNER JOIN $DB_NEOS$t_exnp_restrade B ON B.interface_type = 'card' AND A.res_doc_seq = B.res_doc_seq
				WHERE	doc_seq != ''
				AND		doc_status NOT IN ('','999','100')
			) A INNER JOIN $DB_NEOS$teag_appdoc B ON A.doc_seq = B.doc_id
			WHERE	B.IFNULL(user_nm, '') LIKE CONCAT('%',#searchUserNm#,'%')
		) C ON A.sync_id = C.interface_seq
		<isEqual property="orderBy" compareValue="ASC">
		ORDER BY A.auth_date, A.auth_time, sync_id ASC
		</isEqual>
		<isNotEqual property="orderBy" compareValue="ASC">
		ORDER BY A.auth_date, A.auth_time, sync_id DESC
		</isNotEqual>
	</select>
	
	
	<update id="NpAdminReportA.updateSendYN" parameterClass="java.util.HashMap">
		/* mariadb/bizboxAlpha/expend/np/admin/NpAdminReportSql - NpAdminReportA.updateSendYN */
		/* 카드사용현황 - 영리 */
		/* 카드사용현황 카드내역 미사용/사용 처리 */
		UPDATE	$DB_NEOS$t_ex_card_aq_tmp
		SET		send_yn = #sendYN#
		<isEqual property="sendYN" compareValue="Y">
				, if_m_id = 'D'
		</isEqual>
		<isNotEqual property="sendYN" compareValue="Y">
				, if_m_id = ''
		</isNotEqual>
		WHERE	sync_id = #syncId#
	</update>
	
	
	<select id="NpAdminReportA.NPAdminGWEtaxInfoSelectEA" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT	etax.sync_id AS syncId
				, etax.iss_no AS issNo
				, etax.iss_dt AS issDt
				, etax.send_yn AS sendYN
				, IFNULL(tr.transferType,'') AS transferType
				, IFNULL(tr.supperKey, '') AS supperKey
				, IFNULL(etax.if_m_id,'') AS ifMId
				, IFNULL(etax.if_m_id,'') AS ifMId
				, IFNULL(doc.doc_title,'') AS docTitle
				, IFNULL(doc.doc_no,'') AS docNo
				, IFNULL(doc.user_id,'') AS empSeq
				, IFNULL(doc.user_nm,'') AS empName
		FROM	$DB_NEOS$t_ex_etax_aq_tmp etax
		LEFT OUTER JOIN (
			SELECT	A.doc_seq
					, A.interface_seq AS interface_m_id
					, B.doc_title
					, B.doc_no
					, B.form_id
					, B.user_id
					, B.user_nm
			FROM	(
				SELECT	doc.doc_seq
						, interface_seq
				FROM	$DB_NEOS$t_exnp_resdoc doc
				INNER JOIN $DB_NEOS$t_exnp_restrade trade ON trade.interface_type = 'etax' AND doc.res_doc_seq = trade.res_doc_seq
				WHERE	IFNULL(doc.doc_status,'') IN ('10','20','001', '002','90','008')
			) A INNER JOIN (
				SELECT	doc.c_dikeycode AS doc_id
						, doc.c_tikeycode AS form_id
						, doc.c_dititle AS doc_title
						, rec.c_ridocfullnum AS doc_no
						, drf.c_diuserkey AS user_id
						, drf.c_dijunkyulname AS user_nm
				FROM	$DB_NEOS$a_docinfo doc
				INNER JOIN $DB_NEOS$a_draftinfo drf ON doc.c_dikeycode = drf.c_dikeycode
				INNER JOIN $DB_NEOS$a_recordinfo rec ON doc.c_dikeycode = rec.c_dikeycode
				WHERE	IFNULL(drf.c_dijunkyulname, '') LIKE CONCAT('%',#userName#,'%')
			) B ON A.doc_seq = B.doc_id
		) doc ON etax.sync_id = doc.interface_m_id
		LEFT OUTER JOIN (
			/* 내가 이관한 내역들 */
			SELECT	iss_no
					, 'T' AS transferType
					, IFNULL(GROUP_CONCAT(supper_key),'') AS supperKey
			FROM	$DB_NEOS$t_Ex_etax_transfer
			WHERE	transfer_seq = #empSeq#
			GROUP BY iss_no
		) tr ON tr.iss_no = etax.iss_no
		WHERE	etax.send_yn = 'Y'
		AND		etax.comp_Seq = #compSeq#
		AND		etax.iss_dt BETWEEN #searchFromDt# AND #searchToDt#
	</select>
	
	<select id="NpAdminReportA.NPAdminGWEtaxInfoSelectEAP" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT	etax.sync_id AS syncId
				, etax.iss_no AS issNo
				, etax.iss_dt AS issDt
				, etax.send_yn AS sendYN
				, IFNULL(tr.transferType,'') AS transferType
				, IFNULL(tr.supperKey, '') AS supperKey
				, IFNULL(etax.if_m_id,'') AS ifMId
				, IFNULL(etax.if_m_id,'') AS ifMId
				, IFNULL(doc.doc_title,'') AS docTitle
				, IFNULL(doc.doc_no,'') AS docNo
				, IFNULL(doc.user_id,'') AS empSeq
				, IFNULL(doc.user_nm,'') AS empName
		FROM	$DB_NEOS$t_ex_etax_aq_tmp etax
		LEFT OUTER JOIN (
			SELECT	A.doc_seq
					, A.interface_seq AS interface_m_id
					, B.doc_title
					, B.doc_no
					, B.form_id
					, B.user_id
					, B.user_nm
			FROM	(
				SELECT	doc.doc_seq
						, interface_seq
				FROM	$DB_NEOS$t_exnp_resdoc doc
				INNER JOIN $DB_NEOS$t_exnp_restrade trade ON trade.interface_type = 'etax' AND doc.res_doc_seq = trade.res_doc_seq
				WHERE	IFNULL(doc.doc_status,'') IN ('10','20','001', '002','90','008')
			) A INNER JOIN $DB_NEOS$teag_appdoc B ON A.doc_seq = B.doc_id
			WHERE	B.user_nm LIKE CONCAT('%',#userName#,'%')
		) doc ON etax.sync_id = doc.interface_m_id
		WHERE	etax.send_yn = 'Y'
		LEFT OUTER JOIN (
			/* 내가 이관한 내역들 */
			SELECT	iss_no
					, 'T' AS transferType
					, IFNULL(GROUP_CONCAT(supper_key),'') AS supperKey
			FROM	$DB_NEOS$t_Ex_etax_transfer
			WHERE	transfer_seq = #empSeq#
			GROUP BY iss_no
			UNION
			/* 내가 이관 받은 내역들 */
			SELECT	iss_no
					, 'R' AS transferType
					, IFNULL(GROUP_CONCAT(supper_key),'') AS supperKey
			FROM	$DB_NEOS$t_Ex_etax_transfer
			WHERE	receive_seq = #empSeq#
			GROUP BY iss_no
		) tr ON tr.iss_no = etax.iss_no
		AND		etax.comp_Seq = #compSeq#
		AND		etax.iss_dt BETWEEN #searchFromDt# AND #searchToDt#
	</select>
	
	<insert id="NPAdminETaxSetUseYNInsert" parameterClass="java.util.HashMap">
		INSERT IGNORE INTO $DB_NEOS$t_ex_etax_aq_tmp ( iss_no, comp_seq, iss_dt, partner_no, send_yn, if_m_id, note, emp_seq, summary_seq, auth_seq, project_seq, card_seq, budget_seq, create_seq, create_date, modify_seq, modify_date )
	    VALUES ( #issNo#, #compSeq#, #issDt#, #partnerNo#, #sendYN#, #ifMId# , '', '0', '0', '0', '0', '0', '0', '$createSeq$', NOW(), '$modifySeq$', NOW() )
	</insert>
	
	<update id="NPAdminETaxSetUseYNUpdate" parameterClass="java.util.HashMap">
		UPDATE	$DB_NEOS$t_ex_etax_aq_tmp
		SET		send_yn = #sendYN#
				, if_m_id = #ifMId#
		WHERE	sync_id = #syncId#
	</update>
	
	<select	id="NPAdminSpecificETaxSelect" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT	sync_id AS syncId
		FROM	$DB_NEOS$t_ex_etax_aq_tmp
		WHERE	iss_no = #issNo#
		AND		comp_seq = #compSeq#
	</select>
	
	<select	id="NpUserReportA.selectResDocInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">

		/* NpAdminReportSQL.xml -  NpUserReportA.selectResDocInfo */
		/* 양식 정보 조회 - 결의문서 정보 */
		SELECT	*
		FROM	(
			SELECT	
				res_doc_seq			AS 'resDocSeq'
				, expend_date			AS 'expendDate'
				, substring(create_date,1,10)     as 'createDate'				
				, erp_comp_seq			AS 'erpCompSeq'
				, erp_gisu				AS 'erpGisu'
				, erp_expend_year		AS 'erpExpendYear'
				, comp_name				AS 'compName'
				, dept_name				AS 'deptName'
				, emp_name				AS 'empName'
				, erp_div_seq			AS 'erpDivSeq'
				, erp_div_name			AS 'erpDivName'
				, conffer_doc_seq		AS 'confferDocSeq'
			FROM	$DB_NEOS$t_exnp_resdoc 
			WHERE	res_doc_seq = #exDocSeq#
		)	doc
		INNER JOIN	(
			SELECT	
				res_seq
				, mgt_seq				AS 'mgtSeq'
				, mgt_name				AS 'mgtName'
				, erp_pc_seq			AS 'erpPcSeq'
				, erp_pc_name			AS 'erpPcName'
				, bottom_seq			AS 'bottomSeq'
				, bottom_name			AS 'bottomName'
				, ifnull(pjtFromDt,'')				AS 'pjtFromDt'
				, ifnull(pjtToDt,'')				AS 'pjtToDt'
				, btr_nb				AS 'btrNb'
				, btr_name				AS 'btrName'
				, btr_seq				AS 'btrSeq'
				, docu_fg_name			AS 'docuFgName'
				, erp_gisu				AS 'gisu'
				, erp_gisu_from_date	AS 'gisuStartDate'
				, erp_gisu_to_date		AS 'gisuEndDate'
				, res_date				AS 'expendReqDate'
				, res_date				AS 'resDate'
				, res_note				AS 'resNote'
			FROM	$DB_NEOS$t_exnp_reshead
			WHERE	res_doc_seq = #exDocSeq#
			ORDER BY res_doc_seq ASC
			LIMIT	1
		)	head
		ON	1 = 1
		INNER JOIN	(
			SELECT	
				erp_budget_seq			AS 'erpBudgetSeq'
				, erp_budget_name		AS 'erpBudgetName'
				, erp_bizplan_seq		AS 'erpBizplanSeq'
				, erp_bizplan_name		AS 'erpBizplanName'
				, erp_fiacct_seq 		AS 'erpFiacctSeq'
				, erp_fiacct_name 		AS 'erpFiacctName'
				, erp_bgt1_name			AS 'erpBgt1Name'
				, erp_bgt1_seq			AS 'erpBgt1Seq'
				, erp_bgt2_name			AS 'erpBgt2Name'
				, erp_bgt2_seq			AS 'erpBgt2Seq'
				, erp_bgt3_name			AS 'erpBgt3Name'
				, erp_bgt3_seq			AS 'erpBgt3Seq'
				, erp_bgt4_name			AS 'erpBgt4Name'
				, erp_bgt4_seq			AS 'erpBgt4Seq'
				, erp_bgacct_seq		AS 'erpBgacctSeq'
				, erp_bgacct_name		AS 'erpBgacctName'
				, erp_open_amt			AS 'erpOpenAmt'
				, erp_apply_amt			AS 'erpApplyAmt'
				, erp_res_amt			AS 'erpResAmt'
				, erp_left_amt			AS 'erpLeftAmt'
				, budget_std_amt		AS 'budgetStdAmt'	
				, budget_amt			AS 'budgetAmt'	
				, budget_note			AS 'budgetNote'		
				, set_fg_name			AS 'setFgName'
				, vat_fg_name			AS 'vatFgName'
				, tr_fg_name			AS 'trFgName'	
				, ctl_fg_code			AS 'ctlFgCode'			
			FROM	$DB_NEOS$t_exnp_resbudget
			WHERE	res_doc_seq = #exDocSeq#
			ORDER BY budget_seq ASC
			LIMIT	1
		)	budget
		ON	1 = 1	
		INNER JOIN	(
			SELECT	
				tr_name					AS 'tradeName'
				, CONCAT(SUBSTRING(reg_date,1,4), '-',SUBSTRING(reg_date,5,2),'-',SUBSTRING(reg_date,7,2))				as 'regDate'
				, emp_name				AS 'tradeEmpName'
				, ceo_name				AS 'tradeCeoName'
				, trade_amt				AS 'tradeAmt'
				, trade_std_amt			AS 'tradeStdAmt'
				, trade_vat_amt			AS 'tradeVatAmt'
				, ba_nb					AS 'tradeBaNb'
				, btr_name				AS 'tradeBtrName'
				, depositor				AS 'tradeDepositor'
				, trade_note			AS 'tradeNote'
				, no_tax_name           AS 'tradeNoTaxName'
			FROM	$DB_NEOS$t_exnp_restrade
			WHERE	res_doc_seq = #exDocSeq#
			ORDER BY trade_seq ASC
			LIMIT	1
		)	trade
		ON	1 = 1		
		LEFT JOIN (
			SELECT	doc.c_dititle AS 'conferDocTitle'
				, doc_no	AS 'conferDocNo'
				, emp_name	AS 'conferEmpName'
				, dept_name	AS 'conferDeptName'
			FROM (
				SELECT	doc_no
					, emp_name	
					, dept_name
					, doc_seq
				FROM	$DB_NEOS$t_exnp_consdoc
				WHERE	cons_doc_seq = (
							SELECT	IFNULL(conffer_doc_seq,'') AS conffer_doc_seq 
							FROM	$DB_NEOS$t_exnp_resdoc 
							WHERE	res_doc_seq = #exDocSeq#
							)
				) cons
			INNER JOIN $DB_NEOS$a_docinfo doc
			ON	cons.doc_seq = doc.c_dikeycode
		)	conferDoc
		ON	1 = 1	
		LEFT JOIN	(
			SELECT	
				h.res_seq
				, CONCAT(SUBSTRING(cause_date,1,4),'-',SUBSTRING(cause_date,5,2),'-',SUBSTRING(cause_date,7,2))			AS 'causeDate'
				, sign_date				AS 'signDate'
				, inspect_date			AS 'inspectDate'
				, payplan_date			AS 'payplanDate' 
				, cause_emp_name		AS 'causeEmpName'
			FROM	$DB_NEOS$t_exnp_cause c
			INNER JOIN $DB_NEOS$t_exnp_reshead h
			ON	c.res_seq = h.res_seq
			WHERE	h.res_doc_Seq = #exDocSeq#
			LIMIT 1
		)	cause
		ON	head.res_seq = cause.res_seq		
		LEFT JOIN (
			SELECT	
				 (CASE domestic_code WHEN '0' THEN '국내' ELSE '국외' END) AS domesticCode
				, LEFT(trip_from_date,16)	AS  tripFromDateALL
				, LEFT(trip_from_date,10)	AS  tripFromDate
				, SUBSTRING(trip_from_date,12,5) AS tripFromTime
				, LEFT(trip_to_date,16)	AS  tripToDateALL
				, LEFT(trip_to_date,10)	AS  tripToDate
				, SUBSTRING(trip_to_date,12,5) AS tripToTime
				, IFNULL(calendar_name,'')	AS calendarName
				, IFNULL(location_name,'') AS locationName
				, IFNULL(location_adv,'')	AS locationAdv
				, IFNULL(transport_name,'') AS transportName
				, IFNULL(purpose,'')	AS purpose
				, (CASE trip_expense_code WHEN '0' THEN '대상' ELSE '비대상' END) AS tripExpenseCode
			FROM	$DB_NEOS$t_exnp_trip_res_attend
			WHERE	trip_res_doc_seq = '$tripResDocSeq$'
			LIMIT 1
		) tripAttend
		ON 1=1
		LEFT JOIN  (
				SELECT  IFNULL(doc_no,'') AS docNo
					, create_date	AS createDate
				FROM	$DB_NEOS$t_exnp_trip_res_doc
				WHERE	trip_res_doc_seq = '$tripResDocSeq$'
				LIMIT	1
			) tripResDoc
		ON	1=1
		INNER JOIN
			(
				SELECT  GROUP_CONCAT(emp_name) AS tripEmpName
				FROM	$DB_NEOS$t_exnp_trip_res_traveler
				WHERE	trip_res_doc_seq = '$tripResDocSeq$'
				LIMIT	1
			) tripResTraveler
		ON	1=1
		LEFT JOIN
		(
		    SELECT	tripResDocSeq
		    , amtClass1Code
		    , amtClass1Name
		    , SUM(amtClass1Amt) AS totalClass1Amt
		    , maxAmt1
		    , amtClass1Seq
		    , amtClass1DomesticCode
		    , amtClass1HoldCode
		    , amtClass2Code
		    , amtClass2Name
		    , SUM(amtClass2Amt) AS totalClass2Amt
		    , maxAmt2
		    , amtClass2Seq
		    , amtClass2DomesticCode
		    , amtClass2HoldCode
		    , amtClass3Code
		    , amtClass3Name
		    , SUM(amtClass3Amt) AS totalClass3Amt
		    , maxAmt3
		    , amtClass3Seq
		    , amtClass3DomesticCode
		    , amtClass3HoldCode
		    , amtClass4Code
		    , amtClass4Name
		    , SUM(amtClass4Amt) AS totalClass4Amt
		    , maxAmt4
		    , amtClass4Seq
		    , amtClass4DomesticCode
		    , amtClass4HoldCode
		    , amtClass5Code
		    , amtClass5Name
		    , SUM(amtClass5Amt) AS totalClass5Amt
		    , maxAmt5
		    , amtClass5Seq
		    , amtClass5DomesticCode
		    , amtClass5HoldCode
		    , amtClass6Code
		    , amtClass6Name
		    , SUM(amtClass6Amt) AS totalClass6Amt
		    , maxAmt6
		    , amtClass6Seq
		    , amtClass6DomesticCode
		    , amtClass6HoldCode
		    , compSeq
		    , compName
		    , empSeq
		    , empName
		    , dutyItemSeq
		    , dutyGroupSeq
		    , transportSeq
		    , locationSeq
		    , dutyName
		    , SUM(amtClassSum) AS totalAmtClassSum
		FROM	(
		    SELECT	
		        trip_res_doc_seq AS tripResDocSeq
		        , MAX( CASE WHEN expense.amt_class_code='1' THEN expense.amt_class_code ELSE '0'  END) 			AS amtClass1Code
		        , MAX( CASE WHEN expense.amt_class_code='1' THEN expense.amt_class_name ELSE '일비'  END) 		AS amtClass1Name
		        , MAX( CASE WHEN expense.amt_class_code='1' THEN expense.expense_amt ELSE '0'  END) 			AS amtClass1Amt
		        , MAX( CASE WHEN amt.amt_class_code='1' THEN amt.amt ELSE '0'  END) 							AS maxAmt1
		        , MAX( CASE WHEN expense.amt_class_code='1' THEN expense.amt_seq ELSE '0'  END) 				AS amtClass1Seq
		        , MAX( CASE WHEN expense.amt_class_code='1' THEN expense.domestic_code ELSE '0'  END) 			AS amtClass1DomesticCode
		        , MAX( CASE WHEN expense.amt_class_code='1' THEN amt.amt_hold_code ELSE '0'  END) 			AS amtClass1HoldCode
		        , MAX( CASE WHEN expense.amt_class_code='2' THEN expense.amt_class_code ELSE '1'  END) 			AS amtClass2Code
		        , MAX( CASE WHEN expense.amt_class_code='2' THEN expense.amt_class_name ELSE '식비'  END) 		AS amtClass2Name
		        , MAX( CASE WHEN expense.amt_class_code='2' THEN expense.expense_amt ELSE '0'  END) 			AS amtClass2Amt
		        , MAX( CASE WHEN amt.amt_class_code='2' THEN amt.amt ELSE '0'  END) 							AS maxAmt2
		        , MAX( CASE WHEN expense.amt_class_code='2' THEN expense.amt_seq ELSE '0'  END) 				AS amtClass2Seq
		        , MAX( CASE WHEN expense.amt_class_code='2' THEN expense.domestic_code ELSE '0'  END) 			AS amtClass2DomesticCode
		        , MAX( CASE WHEN expense.amt_class_code='2' THEN amt.amt_hold_code ELSE '0'  END) 			AS amtClass2HoldCode
		        , MAX( CASE WHEN expense.amt_class_code='3' THEN expense.amt_class_code ELSE '2'  END) 			AS amtClass3Code
		        , MAX( CASE WHEN expense.amt_class_code='3' THEN expense.amt_class_name ELSE '숙빅비'  END) 	AS amtClass3Name
		        , MAX( CASE WHEN expense.amt_class_code='3' THEN expense.expense_amt ELSE '0'  END) 			AS amtClass3Amt
		        , MAX( CASE WHEN amt.amt_class_code='3' THEN amt.amt ELSE '0'  END) 							AS maxAmt3
		        , MAX( CASE WHEN expense.amt_class_code='3' THEN expense.amt_seq ELSE '0'  END) 				AS amtClass3Seq
		        , MAX( CASE WHEN expense.amt_class_code='3' THEN expense.domestic_code ELSE '0'  END) 			AS amtClass3DomesticCode
		        , MAX( CASE WHEN expense.amt_class_code='3' THEN amt.amt_hold_code ELSE '0'  END) 			AS amtClass3HoldCode
		        , MAX( CASE WHEN expense.amt_class_code='4' THEN expense.amt_class_code ELSE '3'  END) 			AS amtClass4Code
		        , MAX( CASE WHEN expense.amt_class_code='4' THEN expense.amt_class_name ELSE '운임비'  END) 	AS amtClass4Name
		        , MAX( CASE WHEN expense.amt_class_code='4' THEN expense.expense_amt ELSE '0'  END) 			AS amtClass4Amt
		        , MAX( CASE WHEN amt.amt_class_code='4' THEN amt.amt ELSE '0'  END) 							AS maxAmt4
		        , MAX( CASE WHEN expense.amt_class_code='4' THEN expense.amt_seq ELSE '0'  END) 				AS amtClass4Seq
		        , MAX( CASE WHEN expense.amt_class_code='4' THEN expense.domestic_code ELSE '0'  END) 			AS amtClass4DomesticCode
		        , MAX( CASE WHEN expense.amt_class_code='4' THEN amt.amt_hold_code ELSE '0'  END) 			AS amtClass4HoldCode
		        , MAX( CASE WHEN expense.amt_class_code='5' THEN expense.amt_class_code ELSE '4'  END) 			AS amtClass5Code
		        , MAX( CASE WHEN expense.amt_class_code='5' THEN expense.amt_class_name ELSE '기타여비'  END) 	AS amtClass5Name
		        , MAX( CASE WHEN expense.amt_class_code='5' THEN expense.expense_amt ELSE '0'  END) 			AS amtClass5Amt
		        , MAX( CASE WHEN amt.amt_class_code='5' THEN amt.amt ELSE '0'  END) 							AS maxAmt5
		        , MAX( CASE WHEN expense.amt_class_code='5' THEN expense.amt_seq ELSE '0'  END) 				AS amtClass5Seq
		        , MAX( CASE WHEN expense.amt_class_code='5' THEN expense.domestic_code ELSE '0'  END) 			AS amtClass5DomesticCode
		        , MAX( CASE WHEN expense.amt_class_code='5' THEN amt.amt_hold_code ELSE '0'  END) 			AS amtClass5HoldCode
		        , MAX( CASE WHEN expense.amt_class_code='6' THEN expense.amt_class_code ELSE '5'  END) 			AS amtClass6Code
		        , MAX( CASE WHEN expense.amt_class_code='6' THEN expense.amt_class_name ELSE '기타여비2'  END) 	AS amtClass6Name
		        , MAX( CASE WHEN expense.amt_class_code='6' THEN expense.expense_amt ELSE '0'  END) 			AS amtClass6Amt
		        , MAX( CASE WHEN amt.amt_class_code='6' THEN amt.amt ELSE '0'  END) 							AS maxAmt6
		        , MAX( CASE WHEN expense.amt_class_code='6' THEN expense.amt_seq ELSE '0'  END) 				AS amtClass6Seq
		        , MAX( CASE WHEN expense.amt_class_code='6' THEN expense.domestic_code ELSE '0' END) 			AS amtClass6DomesticCode
		        , MAX( CASE WHEN expense.amt_class_code='6' THEN amt.amt_hold_code ELSE '0'  END) 			AS amtClass6HoldCode
		        , SUM(expense_amt) 																AS amtClassSum
		        , expense.comp_seq				AS compSeq
		        , expense.comp_name				AS compName
		        , expense.emp_seq				AS empSeq
		        , expense.emp_name				AS empName
		        , expense.duty_item_seq 		AS dutyItemSeq
		        , expense.duty_group_seq 		AS dutyGroupSeq
		        , expense.transport_seq			AS transportSeq
		        , expense.location_seq			AS locationSeq
		        , expense.duty_name				AS dutyName
		    FROM	$DB_NEOS$t_exnp_trip_res_expense expense
		    LEFT JOIN $DB_NEOS$t_exnp_trip_set_amt amt
		    ON	amt.amt_seq = expense.amt_seq
		    WHERE	trip_res_doc_seq = '$tripResDocSeq$'
		    AND	emp_seq IS NOT NULL
		    GROUP BY emp_seq,trip_res_doc_seq,expense.comp_seq,expense.comp_name,expense.emp_name,expense.duty_item_seq,expense.duty_group_seq,expense.transport_seq,expense.location_seq,expense.duty_name
		    ) expense
		    LIMIT 1
		) expense
		ON 1=1
	</select>
	
	<select	id="NpUserReportA.selectConsDocumentInterfaceInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* NpAdminReportSQL.xml -  NpUserReportA.selectConsDocumentInterfaceInfo */
		/* 품의 양식 정보조 회 - 2차 외부 연동시스템 정보 조회 */
		SELECT	
			cons_doc_seq 					AS consDocSeq
			, IFNULL(out_process_interface_id, '')		AS outProcessInterfaceId
			, IFNULL(out_process_interface_m_id, '') 	AS outProcessInterfaceMId
			, IFNULL(out_process_interface_d_id, '')	AS outProcessInterfaceDId
		FROM	$DB_NEOS$t_exnp_consdoc	
		WHERE	cons_doc_seq  = #exDocSeq#
		LIMIT 1	
	</select>
	
	<select	id="NpUserReportA.selectResDocumentInterfaceInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* NpAdminReportSQL.xml -  NpUserReportA.selectResDocumentInterfaceInfo */
		/* 결의 양식 정보조 회 - 2차 외부 연동시스템 정보 조회 */
		SELECT
			res_doc_seq 					AS resDocSeq
			, IFNULL(out_process_interface_id, '')		AS outProcessInterfaceId
			, IFNULL(out_process_interface_m_id, '') 	AS outProcessInterfaceMId
			, IFNULL(out_process_interface_d_id, '')	AS outProcessInterfaceDId
		FROM	$DB_NEOS$t_exnp_resdoc	
		WHERE	res_doc_seq  = #exDocSeq#
		LIMIT 1
	</select>
		
	<select	id="NpUserReportA.selectConsFooterInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* NpAdminReportSQL.xml -  NpUserReportA.selectConsFooterInfo */
		/* 양식 정보 조회 - 합계 영역 조회 */
		SELECT	*
		FROM	(
			SELECT			 
				IFNULL(SUM(IFNULL(t.trade_unit_amt, 0)), 0)	 		AS 'totalTradeAmt'
				, IFNULL(SUM(IFNULL(t.trade_std_amt, 0)), 0)	AS 'totalStdAmt'
				, IFNULL(SUM(IFNULL(t.trade_vat_amt, 0)), 0)	AS 'totalVatAmt'
			FROM	$DB_NEOS$t_exnp_constrade t
			WHERE	t.cons_doc_seq = #exDocSeq#	
		)	trade
		INNER JOIN	(
			SELECT			 
				IFNULL(	SUM(IFNULL(b.budget_amt, 0)), 0)	AS 'totalBudgetAmt'
				, IFNULL(SUM(IFNULL(b.budget_std_amt, 0)), 0)	AS 'totalBudgetStdAmt'
				, IFNULL(SUM(IFNULL(b.budget_tax_amt, 0)), 0)	AS 'totalBudgetVatAmt'
			FROM	$DB_NEOS$t_exnp_consbudget b
			WHERE	b.cons_doc_seq = #exDocSeq#	
		)	budget
		ON	1 = 1		
	</select>
	
	<select	id="NpUserReportA.selectResFooterInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* NpAdminReportSQL.xml -  NpUserReportA.selectConsDocInfo */
		/* 양식 정보 조회 - 합계 영역 조회 */
		SELECT	*
		FROM	(
			SELECT			 
				IFNULL(SUM(IFNULL(t.trade_amt, 0)), 0)	 		AS 'totalTradeAmt'
				, IFNULL(SUM(IFNULL(t.trade_std_amt, 0)), 0)	AS 'totalStdAmt'
				, IFNULL(SUM(IFNULL(t.trade_vat_amt, 0)), 0)	AS 'totalVatAmt'
			FROM	$DB_NEOS$t_exnp_restrade t
			WHERE	t.res_doc_seq = #exDocSeq#	
		)	trade
		INNER JOIN	(
			SELECT			 
				IFNULL(SUM( (CASE IFNULL(b.ctl_fg_code, '1') 
							WHEN '0'	THEN 	( CASE IFNULL(b.budget_std_amt, 0) WHEN '0' THEN b.budget_amt ELSE b.budget_std_amt END )
							ELSE		IFNULL(b.budget_amt, 0)	/* emptyStr or '1' */
						END)
				), 0)											AS 'totalBudgetAmt'
				, IFNULL(SUM(IFNULL(b.budget_std_amt, 0)), 0)	AS 'totalBudgetStdAmt'
				, IFNULL(SUM(IFNULL(b.budget_tax_amt, 0)), 0)	AS 'totalBudgetVatAmt'
			FROM	$DB_NEOS$t_exnp_resbudget b
			WHERE	b.res_doc_seq = #exDocSeq#	
		)	budget
		ON	1 = 1		
	</select>
	
	<select	id="NpUserReportA.selectConsDocInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* NpAdminReportSQL.xml -  NpUserReportA.selectConsDocInfo */
		/* 양식 정보 조회 - 품의문서 정보 */
		SELECT	*
		FROM	(
			SELECT	
				cons_doc_seq			AS 'consDocSeq'
				, expend_date			AS 'expendDate'
				, erp_comp_seq			AS 'erpCompSeq'
				, SUBSTRING(create_date,1,10)     AS 'createDate'
				, erp_gisu				AS 'erpGisu'
				, erp_expend_year		AS 'erpExpendYear'
				, comp_name				AS 'compName'
				, dept_name				AS 'deptName'
				, emp_name				AS 'empName'
				, erp_div_seq			AS 'erpDivSeq'
				, erp_div_name			AS 'erpDivName'
			FROM	$DB_NEOS$t_exnp_consdoc 
			WHERE	cons_doc_seq = #exDocSeq#
		)	doc
		INNER JOIN	(
			SELECT	
				mgt_seq					AS 'mgtSeq'
				, mgt_name				AS 'mgtName'
				, ifnull(pjtFromDt,'')				AS 'pjtFromDt'
				, ifnull(pjtToDt,'')				AS 'pjtToDt'
				, erp_pc_seq			AS 'erpPcSeq'
				, erp_pc_name			AS 'erpPcName'
				, docu_fg_name			AS 'docuFgName'
				, btr_nb				AS 'btrNb'
				, btr_name				AS 'btrName'
				, btr_seq				AS 'btrSeq'
				, bottom_seq			AS 'bottomSeq'
				, bottom_name			AS 'bottomName'
				, erp_gisu				AS 'gisu'
				, erp_gisu_from_date	AS 'gisuStartDate'
				, erp_gisu_to_date		AS 'gisuEndDate'
				, cons_date				AS 'consDate'
				, cons_date				AS 'expendReqDate'
				, cons_note				AS 'consNote'
			FROM	$DB_NEOS$t_exnp_conshead
			WHERE	cons_doc_seq = #exDocSeq#
			ORDER BY cons_doc_seq ASC
			LIMIT	1
		)	head
		ON	1 = 1
		INNER JOIN	(
			SELECT	
				erp_budget_seq			AS 'erpBudgetSeq'
				, erp_budget_name		AS 'erpBudgetName'
				, erp_bizplan_seq		AS 'erpBizplanSeq'
				, erp_bizplan_name		AS 'erpBizplanName'
				, erp_fiacct_seq 		AS 'erpFiacctSeq'
				, erp_fiacct_name 		AS 'erpFiacctName'
				, erp_bgt1_name			AS 'erpBgt1Name'
				, erp_bgt1_seq			AS 'erpBgt1Seq'
				, erp_bgt2_name			AS 'erpBgt2Name'
				, erp_bgt2_seq			AS 'erpBgt2Seq'
				, erp_bgt3_name			AS 'erpBgt3Name'
				, erp_bgt3_seq			AS 'erpBgt3Seq'
				, erp_bgt4_name			AS 'erpBgt4Name'
				, erp_bgt4_seq			AS 'erpBgt4Seq'
				, erp_bgacct_seq		AS 'erpBgacctSeq'
				, erp_bgacct_name		AS 'erpBgacctName'
				, erp_open_amt			AS 'erpOpenAmt'
				, erp_apply_amt			AS 'erpApplyAmt'
				, erp_res_amt			AS 'erpResAmt'
				, erp_left_amt			AS 'erpLeftAmt'	
				, budget_amt			AS 'budgetAmt'	
				, budget_note			AS 'budgetNote'				
			FROM	$DB_NEOS$t_exnp_consbudget
			WHERE	cons_doc_seq = #exDocSeq#
			ORDER BY budget_seq ASC
			LIMIT	1
		)	budget
		ON	1 = 1
		LEFT JOIN (
			SELECT	
				 (CASE domestic_code WHEN '0' THEN '국내' ELSE '국외' END) AS domesticCode
				, LEFT(trip_from_date,16)	AS  tripFromDateALL
				, LEFT(trip_from_date,10)	AS  tripFromDate
				, SUBSTRING(trip_from_date,12,5) AS tripFromTime
				, LEFT(trip_to_date,16)	AS  tripToDateALL
				, LEFT(trip_to_date,10)	AS  tripToDate
				, SUBSTRING(trip_to_date,12,5) AS tripToTime
				, IFNULL(calendar_name,'')	AS calendarName
				, IFNULL(location_name,'') AS locationName
				, IFNULL(location_adv,'')	AS locationAdv
				, IFNULL(transport_name,'') AS transportName
				, IFNULL(purpose,'')	AS purpose
				, (CASE trip_expense_code WHEN '0' THEN '대상' ELSE '비대상' END) AS tripExpenseCode
			FROM	$DB_NEOS$t_exnp_trip_cons_attend
			WHERE	trip_cons_doc_seq = '$tripConsDocSeq$'
			LIMIT 1
		) tripAttend
		ON 1=1
		LEFT JOIN  (
				SELECT  IFNULL(doc_no,'') AS docNo
					, create_date	AS createDate
				FROM	$DB_NEOS$t_exnp_trip_cons_doc
				WHERE	trip_cons_doc_seq = '$tripConsDocSeq$'
				LIMIT	1
			) tripConsDoc
		ON	1=1
		INNER JOIN
			(
				SELECT  GROUP_CONCAT(emp_name) AS tripEmpName
				FROM	$DB_NEOS$t_exnp_trip_cons_traveler
				WHERE	trip_cons_doc_seq = '$tripConsDocSeq$'
				LIMIT	1
			) tripConsTraveler
		ON	1=1
		LEFT JOIN
		(
		    SELECT	tripConsDocSeq
		    , amtClass1Code
		    , amtClass1Name
		    , SUM(amtClass1Amt) AS totalClass1Amt
		    , maxAmt1
		    , amtClass1Seq
		    , amtClass1DomesticCode
		    , amtClass1HoldCode
		    , amtClass2Code
		    , amtClass2Name
		    , SUM(amtClass2Amt) AS totalClass2Amt
		    , maxAmt2
		    , amtClass2Seq
		    , amtClass2DomesticCode
		    , amtClass2HoldCode
		    , amtClass3Code
		    , amtClass3Name
		    , SUM(amtClass3Amt) AS totalClass3Amt
		    , maxAmt3
		    , amtClass3Seq
		    , amtClass3DomesticCode
		    , amtClass3HoldCode
		    , amtClass4Code
		    , amtClass4Name
		    , SUM(amtClass4Amt) AS totalClass4Amt
		    , maxAmt4
		    , amtClass4Seq
		    , amtClass4DomesticCode
		    , amtClass4HoldCode
		    , amtClass5Code
		    , amtClass5Name
		    , SUM(amtClass5Amt) AS totalClass5Amt
		    , maxAmt5
		    , amtClass5Seq
		    , amtClass5DomesticCode
		    , amtClass5HoldCode
		    , amtClass6Code
		    , amtClass6Name
		    , SUM(amtClass6Amt) AS totalClass6Amt
		    , maxAmt6
		    , amtClass6Seq
		    , amtClass6DomesticCode
		    , amtClass6HoldCode
		    , compSeq
		    , compName
		    , empSeq
		    , empName
		    , dutyItemSeq
		    , dutyGroupSeq
		    , transportSeq
		    , locationSeq
		    , dutyName
		    , SUM(amtClassSum) AS totalAmtClassSum
		FROM	(
		    SELECT	
		        trip_cons_doc_seq AS tripConsDocSeq
		        , MAX( CASE WHEN expense.amt_class_code='1' THEN expense.amt_class_code ELSE '0'  END) 			AS amtClass1Code
		        , MAX( CASE WHEN expense.amt_class_code='1' THEN expense.amt_class_name ELSE '일비'  END) 		AS amtClass1Name
		        , MAX( CASE WHEN expense.amt_class_code='1' THEN expense.expense_amt ELSE '0'  END) 			AS amtClass1Amt
		        , MAX( CASE WHEN amt.amt_class_code='1' THEN amt.amt ELSE '0'  END) 							AS maxAmt1
		        , MAX( CASE WHEN expense.amt_class_code='1' THEN expense.amt_seq ELSE '0'  END) 				AS amtClass1Seq
		        , MAX( CASE WHEN expense.amt_class_code='1' THEN expense.domestic_code ELSE '0'  END) 			AS amtClass1DomesticCode
		        , MAX( CASE WHEN expense.amt_class_code='1' THEN amt.amt_hold_code ELSE '0'  END) 			AS amtClass1HoldCode
		        , MAX( CASE WHEN expense.amt_class_code='2' THEN expense.amt_class_code ELSE '1'  END) 			AS amtClass2Code
		        , MAX( CASE WHEN expense.amt_class_code='2' THEN expense.amt_class_name ELSE '식비'  END) 		AS amtClass2Name
		        , MAX( CASE WHEN expense.amt_class_code='2' THEN expense.expense_amt ELSE '0'  END) 			AS amtClass2Amt
		        , MAX( CASE WHEN amt.amt_class_code='2' THEN amt.amt ELSE '0'  END) 							AS maxAmt2
		        , MAX( CASE WHEN expense.amt_class_code='2' THEN expense.amt_seq ELSE '0'  END) 				AS amtClass2Seq
		        , MAX( CASE WHEN expense.amt_class_code='2' THEN expense.domestic_code ELSE '0'  END) 			AS amtClass2DomesticCode
		        , MAX( CASE WHEN expense.amt_class_code='2' THEN amt.amt_hold_code ELSE '0'  END) 			AS amtClass2HoldCode
		        , MAX( CASE WHEN expense.amt_class_code='3' THEN expense.amt_class_code ELSE '2'  END) 			AS amtClass3Code
		        , MAX( CASE WHEN expense.amt_class_code='3' THEN expense.amt_class_name ELSE '숙빅비'  END) 	AS amtClass3Name
		        , MAX( CASE WHEN expense.amt_class_code='3' THEN expense.expense_amt ELSE '0'  END) 			AS amtClass3Amt
		        , MAX( CASE WHEN amt.amt_class_code='3' THEN amt.amt ELSE '0'  END) 							AS maxAmt3
		        , MAX( CASE WHEN expense.amt_class_code='3' THEN expense.amt_seq ELSE '0'  END) 				AS amtClass3Seq
		        , MAX( CASE WHEN expense.amt_class_code='3' THEN expense.domestic_code ELSE '0'  END) 			AS amtClass3DomesticCode
		        , MAX( CASE WHEN expense.amt_class_code='3' THEN amt.amt_hold_code ELSE '0'  END) 			AS amtClass3HoldCode
		        , MAX( CASE WHEN expense.amt_class_code='4' THEN expense.amt_class_code ELSE '3'  END) 			AS amtClass4Code
		        , MAX( CASE WHEN expense.amt_class_code='4' THEN expense.amt_class_name ELSE '운임비'  END) 	AS amtClass4Name
		        , MAX( CASE WHEN expense.amt_class_code='4' THEN expense.expense_amt ELSE '0'  END) 			AS amtClass4Amt
		        , MAX( CASE WHEN amt.amt_class_code='4' THEN amt.amt ELSE '0'  END) 							AS maxAmt4
		        , MAX( CASE WHEN expense.amt_class_code='4' THEN expense.amt_seq ELSE '0'  END) 				AS amtClass4Seq
		        , MAX( CASE WHEN expense.amt_class_code='4' THEN expense.domestic_code ELSE '0'  END) 			AS amtClass4DomesticCode
		        , MAX( CASE WHEN expense.amt_class_code='4' THEN amt.amt_hold_code ELSE '0'  END) 			AS amtClass4HoldCode
		        , MAX( CASE WHEN expense.amt_class_code='5' THEN expense.amt_class_code ELSE '4'  END) 			AS amtClass5Code
		        , MAX( CASE WHEN expense.amt_class_code='5' THEN expense.amt_class_name ELSE '기타여비'  END) 	AS amtClass5Name
		        , MAX( CASE WHEN expense.amt_class_code='5' THEN expense.expense_amt ELSE '0'  END) 			AS amtClass5Amt
		        , MAX( CASE WHEN amt.amt_class_code='5' THEN amt.amt ELSE '0'  END) 							AS maxAmt5
		        , MAX( CASE WHEN expense.amt_class_code='5' THEN expense.amt_seq ELSE '0'  END) 				AS amtClass5Seq
		        , MAX( CASE WHEN expense.amt_class_code='5' THEN expense.domestic_code ELSE '0'  END) 			AS amtClass5DomesticCode
		        , MAX( CASE WHEN expense.amt_class_code='5' THEN amt.amt_hold_code ELSE '0'  END) 			AS amtClass5HoldCode
		        , MAX( CASE WHEN expense.amt_class_code='6' THEN expense.amt_class_code ELSE '5'  END) 			AS amtClass6Code
		        , MAX( CASE WHEN expense.amt_class_code='6' THEN expense.amt_class_name ELSE '기타여비2'  END) 	AS amtClass6Name
		        , MAX( CASE WHEN expense.amt_class_code='6' THEN expense.expense_amt ELSE '0'  END) 			AS amtClass6Amt
		        , MAX( CASE WHEN amt.amt_class_code='6' THEN amt.amt ELSE '0'  END) 							AS maxAmt6
		        , MAX( CASE WHEN expense.amt_class_code='6' THEN expense.amt_seq ELSE '0'  END) 				AS amtClass6Seq
		        , MAX( CASE WHEN expense.amt_class_code='6' THEN expense.domestic_code ELSE '0' END) 			AS amtClass6DomesticCode
		        , MAX( CASE WHEN expense.amt_class_code='6' THEN amt.amt_hold_code ELSE '0'  END) 			AS amtClass6HoldCode
		        , SUM(expense_amt) 																AS amtClassSum
		        , expense.comp_seq				AS compSeq
		        , expense.comp_name				AS compName
		        , expense.emp_seq				AS empSeq
		        , expense.emp_name				AS empName
		        , expense.duty_item_seq 		AS dutyItemSeq
		        , expense.duty_group_seq 		AS dutyGroupSeq
		        , expense.transport_seq			AS transportSeq
		        , expense.location_seq			AS locationSeq
		        , expense.duty_name				AS dutyName
		    FROM	$DB_NEOS$t_exnp_trip_cons_expense expense
		    LEFT JOIN $DB_NEOS$t_exnp_trip_set_amt amt
		    ON	amt.amt_seq = expense.amt_seq
		    WHERE	trip_cons_doc_seq = '$tripConsDocSeq$'
		    AND	emp_seq IS NOT NULL
		    GROUP BY emp_seq,trip_cons_doc_seq,expense.comp_seq,expense.comp_name,expense.emp_name,expense.duty_item_seq,expense.duty_group_seq,expense.transport_seq,expense.location_seq,expense.duty_name
		    ) expense
		    LIMIT 1
		) expense
		ON 1=1
	</select>
	
	<select	id="NpUserReportA.selectConsHeadInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* NpAdminReportSQL.xml -  NpUserReportA.selectConsHeadInfo */
		/* 양식 정보 조회 - 품의서 헤더 정보 */
		SELECT	
			d.cons_doc_seq		AS 'consDocSeq'
			, h.cons_seq		AS 'consSeq'
			, d.doc_seq			AS 'docSeq'
			, d.consdoc_note	AS 'docNote'	
			, d.expend_date		AS 'expendDate'
			, d.comp_name		AS 'compName'	
			, d.dept_name		AS 'deptName'
			, d.emp_name		AS 'empName'
			, substring(d.create_date,1,10)     as 'createDate'
			, h.cons_date		AS 'expendConsDate'
			, h.mgt_seq			AS 'projectCode'
			, h.mgt_name		AS 'projectName'
			, h.mgt_seq			AS 'erpMgtSeq'
			, h.mgt_name		AS 'erpMgtName'
			, ifnull(h.pjtFromDt,'')				AS 'pjtFromDt'
			, ifnull(h.pjtToDt,'')				AS 'pjtToDt'
			, h.btr_nb			AS 'btrNb'
			, h.btr_name		AS 'btrName'
			, h.btr_seq			AS 'btrSeq'			
			, h.docu_fg_name	AS 'docuFgName'
			, h.cons_note		AS 'consNote'
			, h.erp_comp_seq	AS 'erpCompCode'
			, h.erp_comp_name	AS 'erpCompName'
			, h.erp_pc_seq		AS 'erpPcCode'
			, h.erp_pc_name		AS 'erpPcName'
			, h.erp_div_seq		AS 'erpDivSeq'
			, h.erp_div_name	AS 'erpDivName'
			, h.erp_gisu		AS 'erpGisu'
			, h.erp_gisu		AS 'gisu'	
			, b.erp_budget_seq	AS 'budgetCode'
			, b.erp_budget_seq	AS 'erpBudgetSeq'
			, b.erp_bgt1_name	AS 'erpBudget1Name'
			, b.erp_bgt2_name	AS 'erpBudget2Name'
			, b.erp_bgt3_name	AS 'erpBudget3Name'
			, b.erp_bgt4_name	AS 'erpBudget4Name'
			, b.erp_budget_name	AS 'erpBudgetName'
			, b.erp_open_amt	AS 'erpOpenAmt'
			, b.erp_apply_amt	AS 'erpApplyAmt'
			, (SELECT SUM(budget_amt) FROM $DB_NEOS$t_exnp_consbudget bd where bd.cons_seq = b.cons_seq ) AS 'budgetAmt'
			, b.budget_note		AS 'budgetNote'
		FROM	(
			SELECT	* 
			FROM	$DB_NEOS$t_exnp_consdoc
			WHERE 	cons_doc_seq = #exDocSeq#
		)	d
		INNER JOIN	$DB_NEOS$t_exnp_conshead	h
		 ON	d.cons_doc_seq = h.cons_doc_seq
		INNER JOIN	(
			SELECT	*
			FROM	$DB_NEOS$t_exnp_consbudget 
			WHERE	budget_seq IN (
				SELECT	MIN(budget_seq)
				FROM	$DB_NEOS$t_exnp_consbudget 
				WHERE	cons_doc_seq = #exDocSeq#
				GROUP BY cons_seq 
			)
		) 	b
		ON	h.cons_seq = b.cons_seq;
	</select>	
	
	<select	id="NpUserReportA.selectResHeadInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* NpAdminReportSQL.xml -  NpUserReportA.selectResHeadInfo */
		/* 양식 정보 조회 - 결의서 헤더 정보 */
		SELECT	
			d.res_doc_seq		AS 'resDocSeq'
			, h.res_seq			AS 'resSeq'
			, d.doc_seq			AS 'docSeq'
			, d.resdoc_note		AS 'docNote'	
			, d.expend_date		AS 'expendDate'		
			, d.comp_name		AS 'compName'	
			, d.dept_name		AS 'deptName'
			, d.emp_name		AS 'empName'
			, substring(d.create_date,1,10)     as 'createDate'
			, h.res_date		AS 'expendResDate'
			, h.mgt_seq			AS 'projectCode'
			, h.mgt_name		AS 'projectName'
			, h.mgt_seq			AS 'erpMgtSeq'
			, h.mgt_name		AS 'erpMgtName'			
			, ifnull(h.pjtFromDt,'')				AS 'pjtFromDt'
			, ifnull(h.pjtToDt,'')				AS 'pjtToDt'
			, h.docu_fg_name	AS 'docuFgName'
			, h.res_note		AS 'note'
			, h.erp_comp_seq	AS 'erpCompCode'
			, h.erp_comp_name	AS 'erpCompName'
			, h.erp_pc_seq		AS 'erpPcCode'
			, h.erp_pc_name		AS 'erpPcName'
			, h.erp_div_seq		AS 'erpDivSeq'
			, h.erp_div_name	AS 'erpDivName'	
			, h.erp_gisu		AS 'erpGisu'
			, h.erp_gisu		AS 'gisu'	
			, h.btr_nb			AS 'btrNb'
			, h.btr_name		AS 'btrName'
			, h.btr_seq			AS 'btrSeq'
			, b.erp_budget_seq	AS 'budgetCode'
			, b.erp_budget_seq	AS 'erpBudgetSeq'
			, b.erp_bgt1_name	AS 'erpBudget1Name'
			, b.erp_bgt2_name	AS 'erpBudget2Name'
			, b.erp_bgt3_name	AS 'erpBudget3Name'
			, b.erp_bgt4_name	AS 'erpBudget4Name'
			, b.erp_budget_name	AS 'erpBudgetName'
			, b.erp_open_amt	AS 'erpOpenAmt'
			, b.erp_apply_amt	AS 'erpApplyAmt'
			, (SELECT SUM(budget_amt) FROM $DB_NEOS$t_exnp_resbudget bt WHERE bt.res_seq = h.res_seq )	AS 'budgetAmt'
			, (SELECT SUM(budget_std_amt) FROM $DB_NEOS$t_exnp_resbudget bt WHERE bt.res_seq = h.res_seq )	AS 'budgetStdAmt'
			, (SELECT SUM(budget_tax_amt) FROM $DB_NEOS$t_exnp_resbudget bt WHERE bt.res_seq = h.res_seq )	AS 'budgetTaxAmt'			
			, b.budget_note		AS 'budgetNote'
			, b.set_fg_name		AS 'setFgName'
			, b.vat_fg_name		AS 'vatFgName'
			, b.tr_fg_name		AS 'trFgName'
			, b.ctl_fg_code		AS 'ctlFgCode'
			
			, t.tr_name			AS 'tradeName'
			, t.depositor		AS 'depositor'
			, t.btr_name		AS 'btrName'
			, t.emp_name		AS 'empName'
			, t.ceo_name		AS 'ceoName'
			, t.trade_amt		AS 'tradeAmt'
			, t.trade_std_amt	AS 'tradeStdAmt'
			, t.trade_vat_amt	AS 'tradeVatAmt'
			, t.jiro_name		AS 'jiroName'
			, t.ba_nb			AS 'baNb'
			, t.trade_note		AS 'tradeNote'
			, t.no_tax_name     AS 'tradeNoTaxName'
			
			, c.cause_date		AS 'causeDate'
			, c.sign_date		AS 'signDate'
			, c.inspect_date	AS 'inspectDate'
			, c.payplan_date	AS 'payplanDate'
			, c.cause_emp_name	AS 'causeEmpName'	
		FROM	(
			SELECT	* 
			FROM	$DB_NEOS$t_exnp_resdoc
			WHERE 	res_doc_seq = #exDocSeq#
		)	d
		INNER JOIN	$DB_NEOS$t_exnp_reshead	h
		 ON	d.res_doc_seq = h.res_doc_seq
		INNER JOIN	(
			SELECT	*
			FROM	$DB_NEOS$t_exnp_resbudget 
			WHERE	budget_seq IN (
				SELECT	MIN(budget_seq)
				FROM	$DB_NEOS$t_exnp_resbudget 
				WHERE	res_doc_seq = #exDocSeq#
				GROUP BY res_seq 
			)
		) 	b
		ON	h.res_seq = b.res_seq
		INNER JOIN	(
			SELECT	*
			FROM	$DB_NEOS$t_exnp_restrade 
			WHERE	trade_seq IN (
				SELECT	MIN(trade_seq)
				FROM	$DB_NEOS$t_exnp_restrade
				WHERE	res_doc_seq = #exDocSeq#
				GROUP BY res_seq 
			)
		) 	t
		ON	h.res_seq = t.res_seq
		LEFT JOIN	$DB_NEOS$t_exnp_cause c
		ON	h.res_seq = c.res_seq
		;
	</select>	
	
	
	<select	id="NpUserReportA.selectConsBudgetInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* NpAdminReportSQL.xml -  NpUserReportA.selectConsBudgetInfo */
		/* 양식 정보 조회 - 품의서 예산 정보 */
		SELECT	
			b.cons_doc_seq			AS 'consDocSeq'
			, b.cons_seq			AS 'consSeq'
			, b.budget_seq			AS 'budgetSeq'
			, b.erp_budget_seq		AS 'erpBudgetSeq'
			, b.erp_budget_name		AS 'erpBudgetName'
			, b.erp_bizplan_seq		AS 'erpBizplanSeq'
			, b.erp_bizplan_name	AS 'erpBizplanName'
			, b.erp_fiacct_seq 		AS 'fiacctSeq'
			, b.erp_fiacct_name 	AS 'fiacctName'
			, b.erp_budget_seq		AS 'budgetCode'
			, b.erp_budget_name		AS 'budgetName'
			, b.erp_bizplan_seq		AS 'bizplanCode'
			, b.erp_bizplan_name	AS 'bizplanName'			
			, b.erp_bgt1_name		AS 'budget1Name'
			, b.erp_bgt2_name		AS 'budget2Name'
			, b.erp_bgt3_name		AS 'budget3Name'
			, b.erp_bgt4_name		AS 'budget4Name'
			, b.erp_level01_seq		AS 'budget1LevelCode'
			, b.erp_level01_name	AS 'budget1LevelName'
			, b.erp_level02_seq		AS 'budget2LevelCode'
			, b.erp_level02_name	AS 'budget2LevelName'
			, b.erp_level03_seq		AS 'budget3LevelCode'
			, b.erp_level03_name	AS 'budget3LevelName'
			, b.erp_level04_seq		AS 'budget4LevelCode'
			, b.erp_level04_name	AS 'budget4LevelName'
			, b.erp_level05_seq		AS 'budget5LevelCode'
			, b.erp_level05_name	AS 'budget5LevelName'			
			, b.erp_level06_seq		AS 'budget6LevelCode'
			, b.erp_level06_name	AS 'budget6LevelName'
			, b.budget_std_amt		AS 'stdAmt'
			, b.budget_tax_amt		AS 'taxAmt'
			, b.budget_amt			AS 'amt'
			, b.erp_bgacct_seq		AS 'erpBgacctSeq'
			, b.erp_bgacct_name		AS 'erpBgacctName'
			, b.erp_bgacct_seq		AS 'bgacctCode'
			, b.erp_bgacct_name		AS 'bgacctName'
			, b.set_fg_name			AS 'setFgName'
			, b.vat_fg_name			AS 'vatFgName'
			, b.tr_fg_name			AS 'trFgName'
			, b.ctl_fg_name			AS 'ctlFgName'
			, b.erp_div_name		AS 'erpDivName'
			, b.erp_div_seq			AS 'erpDivSeq'
			, b.budget_note			AS 'budgetNote'
			, IFNULL(b.erp_open_amt, 0)		AS 'erpOpenAmt'
			, IFNULL(b.erp_apply_amt, 0)	AS 'erpApplyAmt'
			, IFNULL(b.erp_res_amt, 0)		AS 'erpResAmt'
			, IFNULL(b.erp_left_amt, 0) 	AS 'erpLeftAmt'	
			, IFNULL(b.budget_amt, 0)		AS 'budgetAmt'	
			, h.mgt_name				AS 'mgtName'
			, h.mgt_seq					AS 'mgtSeq'
			, h.docu_fg_name			AS 'docuFgName'
			, h.cons_note				AS 'consNote'
			, h.erp_comp_seq			AS 'erpCompSeq'
			, h.erp_comp_name			AS 'erpCompName'
			, h.bottom_name				AS 'bottomName'
			, h.bottom_seq				AS 'bottomSeq'
			, h.btr_nb					AS 'btrNb'
			, h.btr_name				AS 'btrName'
			, h.btr_seq					AS 'btrSeq'
			, h.cons_date				AS 'consDate'
			, h.erp_gisu				AS 'erpGisu'
			, h.erp_gisu				AS 'gisu'
			, h.mgt_name				AS 'erpMgtName'
			, h.mgt_seq					AS 'erpMgtSeq'
			
			, DATE_FORMAT(h.cons_date, '%Y-%m-%d')	AS 'consDate'
			
			, d.expend_date		AS 'expendDate'
		FROM	$DB_NEOS$t_exnp_consbudget b
		 INNER JOIN	$DB_NEOS$t_exnp_conshead h
		 ON	b.cons_seq = h.cons_seq
		 INNER JOIN	$DB_NEOS$t_exnp_consdoc d
		 on	b.cons_doc_seq = d.cons_doc_seq
		WHERE	b.cons_doc_seq = #exDocSeq#;			
	</select>	
	
	<select	id="NpUserReportA.selectResBudgetInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* NpAdminReportSQL.xml -  NpUserReportA.selectResBudgetInfo */
		/* 양식 정보 조회 - 결의서 예산 정보 */
		SELECT	
			b.res_doc_seq			AS 'resDocSeq'
			, b.res_seq				AS 'resSeq'
			, b.budget_seq			AS 'budgetSeq'
			, b.erp_budget_seq		AS 'erpBudgetSeq'
			, b.erp_budget_name		AS 'erpBudgetName'
			, b.erp_bizplan_seq		AS 'erpBizplanSeq'
			, b.erp_bizplan_name	AS 'erpBizplanName'
			, b.erp_fiacct_seq 		AS 'fiacctSeq'
			, b.erp_fiacct_name 	AS 'fiacctName'
			, b.erp_budget_seq		AS 'budgetCode'
			, b.erp_budget_name		AS 'budgetName'
			, b.erp_bizplan_seq		AS 'bizplanCode'
			, b.erp_bizplan_name	AS 'bizplanName'
			, b.erp_bgt1_name		AS 'budget1Name'
			, b.erp_bgt2_name		AS 'budget2Name'
			, b.erp_bgt3_name		AS 'budget3Name'
			, b.erp_bgt4_name		AS 'budget4Name'
			, b.erp_level01_seq		AS 'budget1LevelCode'
			, b.erp_level01_name	AS 'budget1LevelName'
			, b.erp_level02_seq		AS 'budget2LevelCode'
			, b.erp_level02_name	AS 'budget2LevelName'
			, b.erp_level03_seq		AS 'budget3LevelCode'
			, b.erp_level03_name	AS 'budget3LevelName'
			, b.erp_level04_seq		AS 'budget4LevelCode'
			, b.erp_level04_name	AS 'budget4LevelName'
			, b.erp_level05_seq		AS 'budget5LevelCode'
			, b.erp_level05_name	AS 'budget5LevelName'			
			, b.erp_level06_seq		AS 'budget6LevelCode'
			, b.erp_level06_name	AS 'budget6LevelName'
			, b.budget_std_amt		AS 'stdAmt'
			, b.budget_tax_amt		AS 'taxAmt'
			, b.budget_amt			AS 'amt'
			, b.erp_bgacct_seq		AS 'erpBgacctSeq'
			, b.erp_bgacct_name		AS 'erpBgacctName'
			, b.erp_bgacct_seq		AS 'bgacctCode'
			, b.erp_bgacct_name		AS 'bgacctName'			
			, b.set_fg_name			AS 'setFgName'
			, b.vat_fg_name			AS 'vatFgName'
			, b.tr_fg_name			AS 'trFgName'
			, b.ctl_fg_code			AS 'ctlFgCode'
			, b.ctl_fg_name			AS 'ctlFgName'
			, b.erp_div_name		AS 'erpBudgetDivName'
			, b.erp_div_seq			AS 'erpBudgetDivSeq'
			, b.erp_div_seq			AS 'erpDivSeq'
			, IFNULL(b.erp_open_amt, 0)		AS 'erpOpenAmt'
			, IFNULL(b.erp_apply_amt, 0)	AS 'erpApplyAmt'
			, IFNULL(b.erp_res_amt, 0)		AS 'erpResAmt'
			, IFNULL(b.erp_left_amt, 0) 	AS 'erpLeftAmt'	
			, IFNULL(b.budget_amt, 0)		AS 'budgetAmt'			
			
			, b.conffer_doc_seq			AS 'confferDocSeq'
			, b.conffer_seq				AS 'confferSeq'
			, b.conffer_budget_seq		AS 'confferBudgetSeq'	
			, h.res_date				AS 'resDate'
			, h.btr_nb					AS 'btrNb'
			, h.btr_name				AS 'btrName'
			, h.btr_seq					AS 'btrSeq'
			, h.mgt_name				AS 'mgtName'
			, h.mgt_seq					AS 'mgtSeq'
			, h.docu_fg_name			AS 'docuFgName'
			, h.res_note				AS 'resNote'
			, h.erp_comp_seq			AS 'erpCompSeq'
			, h.erp_comp_name			AS 'erpCompName'
			, h.bottom_name				AS 'bottomName'
			, h.bottom_seq				AS 'bottomSeq'		
			, h.erp_gisu				AS 'erpGisu'
			, h.erp_gisu				AS 'gisu'
			, h.mgt_name				AS 'erpMgtName'
			, h.mgt_seq					AS 'erpMgtSeq'			
			
			, d.expend_date		AS 'expendDate'	
			
			, h.btr_name		AS 'btrName' 
			, h.btr_nb		AS 'btrNumber' 
			, t.tr_name		AS 'trName'
			, t.ba_nb		AS 'trBankNum'
			, t.ctr_name		AS 'trCtrName'
			, b.budget_note		AS 'budgetNote'	
				
			, h.erp_div_seq		AS 'erpDivSeq'			
			, h.erp_div_name	AS 'erpDivName'		
		FROM	$DB_NEOS$t_exnp_resbudget b
		 INNER JOIN	$DB_NEOS$t_exnp_reshead h
		 ON	b.res_seq = h.res_seq
		 INNER JOIN	$DB_NEOS$t_exnp_resdoc d
		 ON	b.res_doc_seq = d.res_doc_seq	
		 INNER JOIN	(
			SELECT * FROM $DB_NEOS$t_exnp_restrade 	GROUP BY budget_seq
		 )	t
		 ON	b.budget_seq = t.budget_seq 
		WHERE	b.res_doc_seq = #exDocSeq#;	
	</select>		
	
	<select	id="NpUserReportA.selectConsTradeInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* NpAdminReportSQL.xml -  NpUserReportA.selectConsTradeInfo */
		/* 양식 정보 조회 - 품의서 채주 정보 */
		SELECT	
			cons_doc_seq	AS 'consDocSeq'
			, cons_seq	AS 'consSeq'
			, budget_seq	AS 'budgetSeq'
			, trade_seq	AS 'tradeSeq'
			, item_name	AS 'itemName'
			, item_cnt	AS 'itemCnt'
			, emp_name	AS 'tradeEmpName'
			, tr_name	AS 'tradeName'
			, ceo_name	AS 'ceoName'
			, trade_unit_amt     AS 'tradeAmt'
			, trade_std_amt	AS 'tradeStdAmt'
			, trade_vat_amt	AS 'tradeVatAmt'
			, jiro_name	AS 'jiroName'
			, ba_nb		AS 'bankNum'
			, btr_name	AS 'bankName'
			, depositor	AS 'depositor'
			, trade_note	AS 'tradeNote'
		FROM	$DB_NEOS$t_exnp_constrade
		WHERE	cons_doc_seq = #exDocSeq#;
		
	</select>
	
	<select	id="NpUserReportA.selectResTradeInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* NpAdminReportSQL.xml -  NpUserReportA.selectResTradeInfo */
		/* 양식 정보 조회 - 결의서 채주 정보 */
		SELECT	
			t.res_doc_seq		AS 'resDocSeq'
			, t.res_seq			AS 'resSeq'
			, t.budget_seq		AS 'budgetSeq'
			, t.trade_seq		AS 'tradeSeq'
			, t.item_name		AS 'itemName'
			, t.item_cnt		AS 'itemCnt'
			, t.emp_name		AS 'tradeEmpName'
			, t.tr_name			AS 'tradeName'
			, t.ceo_name		AS 'ceoName'
			, t.trade_amt		AS 'tradeAmt'
			, t.trade_std_amt	AS 'tradeStdAmt'
			, t.trade_vat_amt	AS 'tradeVatAmt'
			, t.jiro_name		AS 'jiroName'
			, t.btr_name		AS 'btrName'
			, t.btr_seq			AS 'btrSeq'
			, t.ba_nb			AS 'bankNum'
			, t.btr_name		AS 'bankName'
			, (CASE t.interface_type WHEN 'card' 
			   THEN ( CASE WHEN length(c.card_num)>16 THEN c.card_num ELSE CONCAT(SUBSTRING(card_num,1,4),'-',SUBSTRING(card_num,5,4),'-',SUBSTRING(card_num,9,4),'-',SUBSTRING(card_num,13,4)) END ) 
			   ELSE t.btr_name 
			   END) 'cardNumAndBankName'
			, t.depositor		AS 'depositor'
			, t.ctr_name		AS 'ctrName'
			, t.ctr_seq			AS 'ctrSeq'
			, t.etc_biz_seq			AS 'etcBizSeq'
			, t.etc_biz_name		AS 'etcBizName'
			, t.trade_note		AS 'tradeNote'
			, t.no_tax_code     AS 'noTaxCode'
			, t.no_tax_name     AS 'noTaxName'
			, IFNULL(DATE_FORMAT(IFNULL(t.reg_date, ''), '%Y-%m-%d'), '')	AS 'regDate'
			, (CASE WHEN IFNULL(t.business_nb,'')='' THEN '' ELSE CONCAT(SUBSTRING(t.business_nb,1,3),'-',SUBSTRING(t.business_nb,4,2),'-',SUBSTRING(t.business_nb,6,5)) END) AS 'businessNum'
			, (CASE t.interface_type WHEN 'card' THEN t.interface_seq ELSE '' END) 'cardPop' 		
			, (CASE t.interface_type WHEN 'etax' THEN IFNULL((SELECT iss_no FROM $DB_NEOS$t_ex_etax_aq_tmp WHERE sync_id = t.interface_seq LIMIT 1), '') ELSE '' END) 'eTaxPop'
			, t.etc_data_cd		AS 'etcDataCd'
			, t.etc_required_rate AS 'etcRequiredRate'
			, t.etc_required_amt AS 'etcRequiredAmt'
			, t.etc_income_amt	AS 'etcIncomeAmt'
			, t.etc_income_seq	AS 'etcIncomeSeq'
			, t.etc_belong_year AS 'etcBelongYear'
			, t.etc_belong_month AS 'etcBelongMonth'
			, t.etc_belong_date AS 'etcBelongDate'
			, t.etc_belong_yearmonth AS 'etcBelongYearMonth'
			, t.etc_school_amt AS 'etcSchoolAmt'
			, ( CASE b.tr_fg_code WHEN '8' THEN CONCAT(t.salary_belong_year, t.salary_belong_month) ELSE CONCAT(t.etc_belong_year, t.etc_belong_month) END ) AS 'etcRvrsYM'
			, ( CASE b.tr_fg_code WHEN '8' THEN t.salary_income_vat_amt ELSE t.etc_income_vat_amt END ) AS 'etcIncomeVatAmt'
			, ( CASE b.tr_fg_code WHEN '8' THEN t.salary_resident_vat_amt ELSE t.etc_resident_vat_amt END ) AS 'etcResidentVatAmt'
			, t.etc_employment_amt AS 'etcEmploymentAmt'
			, t.etc_employment_insurance_amt AS 'etcEmploymentInsuranceAmt'
			, t.etc_school_amt		AS 'etcSchoolAmt'
			, t.etc_income_amt		AS 'etcIncomeAmt'
			, t.salary_etc_amt		AS 'salaryEtcAmt'
			, b.erp_budget_seq	AS 'budgetCode'
			, b.erp_budget_name	AS 'budgetName'
			, b.erp_bizplan_seq	AS 'bizplanCode'
			, b.erp_bizplan_name	AS 'bizplanName'
			, b.erp_bgt1_name		AS 'budget1Name'
			, b.erp_bgt2_name		AS 'budget2Name'
			, b.erp_bgt3_name		AS 'budget3Name'
			, b.erp_bgt4_name		AS 'budget4Name'
			, b.budget_std_amt	AS 'stdAmt'
			, b.budget_tax_amt	AS 'taxAmt'
			, b.budget_amt		AS 'amt'
			, b.erp_bgacct_seq	AS 'bgacctCode'
			, b.erp_bgacct_name	AS 'bgacctName'
			, b.erp_fiacct_seq 			AS 'fiacctSeq'
			, b.erp_fiacct_name 			AS 'fiacctName'
			, b.set_fg_name		AS 'setFgName'
			, b.vat_fg_name		AS 'vatFgName'
			, b.tr_fg_name		AS 'trFgName'
			, b.ctl_fg_name		AS 'ctlFgName'
			, b.erp_div_name	AS 'budgetErpDivName'
			, b.budget_note		AS 'budgetNote'
			, IFNULL(b.erp_open_amt, 0)		AS 'erpOpenAmt'
			, IFNULL(b.erp_apply_amt, 0)	AS 'erpApplyAmt'
			, IFNULL(b.erp_left_amt, 0) 	AS 'erpLeftAmt'	
			, IFNULL(b.budget_amt, 0)		AS 'budgetAmt'	
			, IFNULL(b.gw_balance_amt, 0)	AS 'gwBalanceAmt'	
			
			, h.mgt_name		AS 'mgtName'
			, h.res_date		AS 'resDate'
			, h.docu_fg_name	AS 'docuFgName'
			, h.res_note		AS 'resNote'
			, h.erp_comp_name	AS 'erpCompName'
			, h.erp_pc_name		AS 'erpPcName'
			, h.erp_emp_name	AS 'erpEmpName'
			, h.erp_div_name	AS 'resErpDivName'
			, h.erp_dept_name	AS 'erpDeptName'
			, h.erp_gisu		AS 'erpGisu'
			, h.erp_year		AS 'erpYear'
			, h.btr_name		AS 'resBtrName'
			, h.btr_nb			AS 'resBtrNb'
			, h.bottom_name		AS 'bottomName'
			
			, IFNULL(DATE_FORMAT(IFNULL(c.auth_date, ''), '%Y-%m-%d'), '')	AS 'cardAuthDate'
			, IFNULL(c.auth_num, '')	AS 'cardAuthNum'
			, (CASE WHEN (SELECT set_value FROM $DB_NEOS$t_exnp_option WHERE option_gbn = '1' AND option_code = '1' AND comp_seq = 'NP_OPTION_G20') = '1' 
			THEN IFNULL(c.card_num,( SELECT card_num FROM $DB_NEOS$t_ex_card WHERE comp_seq = d.comp_seq and card_code = t.ctr_seq LIMIT 1 ))
			ELSE CONCAT(SUBSTRING(REPLACE(IFNULL(c.card_num,( SELECT card_num FROM $DB_NEOS$t_ex_card WHERE comp_seq = d.comp_seq and card_code = t.ctr_seq LIMIT 1 )),'-',''),1,4),'********',SUBSTRING(REPLACE(IFNULL(c.card_num,( SELECT card_num FROM $DB_NEOS$t_ex_card WHERE comp_seq = d.comp_seq and card_code = t.ctr_seq LIMIT 1 )),'-',''),13,4))
			END
			) AS 'cardCardNum'
			, IFNULL(DATE_FORMAT(IFNULL(e.iss_dt, ''), '%Y-%m-%d'), '')	AS 'etaxIssDate'
			, IFNULL(e.iss_no, '')	AS 'etaxIssNo'
			
		FROM	$DB_NEOS$t_exnp_restrade t
		 INNER JOIN $DB_NEOS$t_exnp_resbudget b
		 ON	t.res_doc_seq = b.res_doc_seq
		  AND	t.res_seq = b.res_seq
		  AND	t.budget_seq = b.budget_seq
		 INNER JOIN $DB_NEOS$t_exnp_reshead h
		 ON	t.res_doc_seq = h.res_doc_seq
		  AND	t.res_seq = h.res_seq
		  INNER join t_exnp_resdoc d
         ON 	t.res_doc_seq = d.res_doc_seq
		LEFT OUTER JOIN $DB_NEOS$t_ex_card_aq_tmp c ON t.interface_type = 'card' AND t.interface_seq = c.sync_id
		LEFT OUTER JOIN $DB_NEOS$t_ex_etax_aq_tmp e ON t.interface_type = 'etax' AND t.interface_seq = e.sync_id
		WHERE	t.res_doc_seq = #exDocSeq#;		
	</select>
	
	<select	id="NpUserReportA.selectConsItemInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* NpAdminReportSQL.xml -  NpUserReportA.selectConsItemInfo */
		SELECT	item.cons_doc_seq
				, item.cons_seq
				, item.budget_seq
				, item.item_name	AS itemName
				, item.item_size 	AS itemSize
				, item.item_unit 	AS itemUnit
				, item.item_cnt 	AS itemCnt
				, item.unit_amt		AS unitAmt
				, item.item_amt		AS itemAmt
				, item.item_note	AS itemNote
				, doc.doc_no		AS docNo
				, doc.expend_date	AS expendDate
				, doc.comp_name		AS compName
				, doc.erp_div_name	AS erpDivName
				, doc.dept_name		AS deptName
				, doc.emp_name		AS empName
				, head.erp_gisu		AS erpGisu
				, head.erp_year		AS erpYear
				, head.mgt_seq		AS mgtSeq
				, head.mgt_name		AS mgtName
				, head.mgt_seq		AS projectSeq
				, head.mgt_name		AS projectName
				, head.cons_date		AS resDate
				, head.docu_fg_name	AS docuFgName
				, head.cons_note		AS resNote
				, head.btr_seq		AS btrSeq
				, head.btr_name		AS btrName
				, head.btr_nb		AS btrNb
				, head.bottom_seq	AS bottomSeq
				, head.bottom_name	AS bottomName
		FROM	$DB_NEOS$t_exnp_consitem item
		INNER JOIN $DB_NEOS$t_exnp_consdoc doc
		ON	doc.cons_doc_seq = item.cons_doc_seq
		INNER JOIN $DB_NEOS$t_exnp_conshead head
		ON	head.cons_doc_seq = item.cons_doc_seq
		AND	head.cons_seq	= item.cons_seq
		WHERE	item.cons_doc_seq = #exDocSeq#;
	</select>	
	
	<select	id="NpUserReportA.selectResItemInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* NpAdminReportSQL.xml -  NpUserReportA.selectResItemInfo */
		SELECT	item.res_doc_seq
				, item.res_seq
				, item.budget_seq
				, item.item_name	AS itemName
				, item.item_size 	AS itemSize
				, item.item_unit 	AS itemUnit
				, item.item_cnt 	AS itemCnt
				, item.unit_amt		AS unitAmt
				, item.item_amt		AS itemAmt
				, item.item_note	AS itemNote
				, doc.doc_no		AS docNo
				, doc.expend_date	AS expendDate
				, doc.comp_name		AS compName
				, doc.erp_div_name	AS erpDivName
				, doc.dept_name		AS deptName
				, doc.emp_name		AS empName
				, head.erp_gisu		AS erpGisu
				, head.erp_year		AS erpYear
				, head.mgt_seq		AS mgtSeq
				, head.mgt_name		AS mgtName
				, head.mgt_seq		AS projectSeq
				, head.mgt_name		AS projectName
				, head.res_date		AS resDate
				, head.docu_fg_name	AS docuFgName
				, head.res_note		AS resNote
				, head.btr_seq		AS btrSeq
				, head.btr_name		AS btrName
				, head.btr_nb		AS btrNb
				, head.bottom_seq	AS bottomSeq
				, head.bottom_name	AS bottomName
		FROM	$DB_NEOS$t_exnp_resitem item
		INNER JOIN $DB_NEOS$t_exnp_resdoc doc
		ON	doc.res_doc_seq = item.res_doc_seq
		INNER JOIN $DB_NEOS$t_exnp_reshead head
		ON	head.res_doc_seq = item.res_doc_seq
		AND	head.res_seq	= item.res_seq
		WHERE	item.res_doc_seq = #exDocSeq#;
	</select>	
	
	<select id="NpUserReportA.selectCardTransHistoryList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* NpAdminReportSQL.xml -  NpUserReportA.selectCardTransHistoryList */
		/* 카드내역 이관 조회 */
		SELECT    DATE_FORMAT(a.create_date, '%Y-%m-%d') AS transferDate
			, A.card_num AS cardNum
			, A.auth_num AS authNum
			, A.auth_date AS authDate
			, A.auth_time AS authTime
			, CASE
				WHEN a.transfer_seq = #empSeq# THEN a.receive_name
				ELSE a.transfer_name
				END AS targerName
			, CASE
				WHEN a.transfer_seq = #empSeq# THEN 'T'
				ELSE 'R'
				END AS transferType 
			, A.transfer_seq AS transferSeq
			, A.transfer_name AS transferName
			, A.receive_seq AS receiveSeq
			, A.receive_name AS receiveName
			, A.partner_name AS partnerName
			, A.partner_no AS partnerNo
			, A.amt AS amt
			, b.send_yn AS sendYN
			, IFNULL(b.if_m_id,'') AS ifMId
			, IFNULL(b.if_d_id,'') AS ifDId
			, IFNULL(c.doc_status, '') AS docStatus
			, IFNULL(c.doc_seq,'') AS docSeq
			, IFNULL(c.doc_title,'') AS docTitle
			, IFNULL(c.doc_no,'') AS docNo
			, IFNULL(c.user_nm, '') AS userName
		FROM   $DB_NEOS$t_ex_card_transfer A
		INNER JOIN $DB_NEOS$t_ex_card_aq_tmp B
		ON     A.card_num = B.card_num AND A.auth_num = B.auth_num
		LEFT OUTER JOIN (
			SELECT	A.res_doc_seq
				, A.doc_status
				, A.doc_seq
				, B.doc_title
				, B.doc_no
				, B.user_nm
			FROM	(
				SELECT	doc.doc_seq
						, doc.res_doc_seq
						, doc.doc_status
						, interface_seq
				FROM	$DB_NEOS$t_exnp_resdoc doc
				INNER JOIN $DB_NEOS$t_exnp_restrade trade ON trade.interface_type = 'etax' AND doc.res_doc_seq = trade.res_doc_seq
				WHERE	IFNULL(doc.doc_status,'') IN ('001', '002', '003', '008', '009')  
			) A INNER JOIN (
				SELECT	doc.c_dikeycode AS doc_id
						, doc.c_tikeycode AS form_id
						, doc.c_dititle AS doc_title
						, rec.c_ridocfullnum AS doc_no
						, drf.c_diuserkey AS user_id
						, drf.c_dijunkyulname AS user_nm
				FROM	$DB_NEOS$a_docinfo doc
				INNER JOIN $DB_NEOS$a_draftinfo drf ON doc.c_dikeycode = drf.c_dikeycode
				INNER JOIN $DB_NEOS$a_recordinfo rec ON doc.c_dikeycode = rec.c_dikeycode
			) B ON A.doc_seq = B.doc_id
		) c ON B.if_m_id = C.res_doc_seq
		WHERE	a.comp_seq = #compSeq#
		AND		(
			a.transfer_seq = #empSeq#
			OR
			a.receive_seq = #empSeq#
		)
		<!-- 0 : 이관일자, 1 : 승인일자 -->
		<isEqual property="dateSearchType" compareValue="0">
		AND		DATE_FORMAT(A.create_date,'%Y%m%d') BETWEEN #searchFromDate# AND #searchToDate#
		</isEqual>
		<isEqual property="dateSearchType" compareValue="1">
		AND		A.auth_date BETWEEN #searchFromDate# AND #searchToDate#
		</isEqual>
		
		AND		(
			a.transfer_name LIKE CONCAT('%',#searchStr#,'%')
			OR a.receive_name LIKE CONCAT('%',#searchStr#,'%')
			OR a.partner_name LIKE CONCAT('%',#searchStr#,'%')
			OR a.card_num LIKE CONCAT('%',#searchStr#,'%')
			OR a.auth_num LIKE CONCAT('%',#searchStr#,'%')
			OR a.auth_date LIKE CONCAT('%',#searchStr#,'%')
			OR a.auth_time LIKE CONCAT('%',#searchStr#,'%')
		)
		AND		b.send_yn LIKE CONCAT('%','N','%')
		
		UNION
		
		SELECT DATE_FORMAT(a.create_date, '%Y-%m-%d') AS transferDate
			, A.card_num AS cardNum
			, A.auth_num AS authNum
			, A.auth_date AS authDate
			, A.auth_time AS authTime
			, CASE
				WHEN a.transfer_seq = #empSeq# THEN a.receive_name
				ELSE a.transfer_name
				END AS targerName
			, CASE
				WHEN a.transfer_seq = #empSeq# THEN 'T'
				ELSE 'R'
				END AS transferType 
			, A.transfer_seq AS transferSeq
			, A.transfer_name AS transferName
			, A.receive_seq AS receiveSeq
			, A.receive_name AS receiveName
			, A.partner_name AS partnerName
			, A.partner_no AS partnerNo
			, A.amt AS amt
			, b.send_yn AS sendYN
			, '' AS ifMId
			, '' AS ifDId
			, '' AS docStatus
			, '' AS docSeq
			, '' AS docTitle
			, '' AS docNo
			, '' AS userName 
		FROM   $DB_NEOS$t_ex_card_transfer A
		INNER JOIN $DB_NEOS$t_ex_card_aq_tmp B
		ON     A.card_num = B.card_num AND A.auth_num = B.auth_num
		WHERE  (A.transfer_seq = #empSeq# OR A.receive_seq = #empSeq#)
				
	</select>
	
	<select id="NpUserReportA.NPUserCardDetailInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* NpAdminReportSQL.xml -  NpUserReportA.NPUserCardDetailInfo */
		/* 카드내역 상세 정보 조회 */
		SELECT	
			sync_id		AS 'syncId'
			, owner_reg_no	AS 'ownerRegNo'
			, card_code	AS 'cardCode'
			, card_name	AS 'cardName'
			, card_num	AS 'cardNum'
			, user_name	AS 'userName'
			, auth_num	AS 'authNum'
			, auth_date	AS 'authDate'
			, auth_time	AS 'authTime'
			, aqui_date	AS 'aquiDate'
			, georae_coll	AS 'georaeColl'
			, georae_stat	AS 'georaeStat'
			, georae_cand	AS 'georaeCand'
			, request_amount	AS 'requestAmount'
			, amt_amount	AS 'amtAmount'
			, vat_amount	AS 'vatAmount'
			, ser_amount	AS 'serAmount'
			, fre_amount	AS 'freAmount'
			, amt_md_amount	AS 'amt_md_amount'
			, vat_md_amount	AS 'vat_md_amount'
			, georae_gukga	AS 'georaeGukga'
			, for_amount	AS 'forAmount'
			, usd_amount	AS 'usdAmount'
			, merc_name	AS 'mercName'
			, merc_saup_no	AS 'mercSaupNo'
			, merc_addr 	AS 'mercAddr'
			, merc_repr 	AS 'mercRepr'
			, merc_tel 	AS 'mercTel'
			, merc_zip 	AS 'mercZip'
			, mcc_name 	AS 'mccName'
			, mcc_code 	AS 'mccCode'
			, mcc_stat 	AS 'mccStat'
			, vat_stat 	AS 'vatStat'
			, can_date 	AS 'canDate'
			, ask_site 	AS 'askSite'
			, site_date 	AS 'siteDate'
			, ask_date 	AS 'askDate'
			, ask_time 	AS 'askTime'
			, gongje_no_chk 	AS 'gongjeNoChk'
			, first_date 	AS 'firstDate'
			, cancel_date 	AS 'cancelDate'
			, abroad 	AS 'abroad'
			, van_created_dt 	AS 'vanCreatedDt'
			, van_edited_dt 	AS 'vanEditedDt'
			, created_by 	AS 'createdBy'
			, created_dt 	AS 'createdDt'
			, edited_dt 	AS 'editedDt'
			, edited_by 	AS 'editedBy'
			, edited_action 	AS 'editedAction'
			, createdate 	AS 'createdate'
			, createtime 	AS 'createtime'
			, sett_date 	AS 'settDate'
			, org_coll 	AS 'orgColl'
			, aqui_rate 	AS 'aquiRate'
			, conversion_fee 	AS 'conversionFee'
			, auth_cd 	AS 'authCd'
			, auth_nm 	AS 'authNm'
			, summary_cd 	AS 'summaryCd'
			, summary_nm 	AS 'summaryNm'
			, pjt_cd 	AS 'pjtCd'
			, pjt_nm 	AS 'pjtNm'
			, detail 	AS 'detail'
			, if_m_id 	AS 'ifMId'
			, if_d_id 	AS 'ifDId'
			, del_yn 	AS 'delYn'
			, app_div 	AS 'appDiv'
			, send_yn 	AS 'sendYn'
			, user_send_yn 	AS 'userSendYn'
			, emp_seq	AS 'empSeq'
			, summary_seq	AS 'summarySeq'
			, auth_seq	AS 'authSeq'
			, project_seq	AS 'projectSeq'
			, budget_seq	AS 'budgetSeq'
			, doc_seq	AS 'docSeq'
		FROM	$DB_NEOS$t_ex_card_aq_tmp
		WHERE	sync_id = #syncId#
	
	</select>
	
	
	<select id="NpUserReportA.NPETaxNotUseList" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap"><![CDATA[
		/* NpAdminReportSQL.xml -  NpUserReportA.NPETaxNotUseList */
		/* 매입전자세금계산서 미사용 내역 조회 */
		
		SELECT  IFNULL(A.iss_no, '') AS notUseIssNo
		        , IFNULL(B.emp_seq, '') AS notUseEmpSeq
		        , IFNULL(B.emp_name, '') AS notUseEmpName
		FROM    (
		                SELECT  iss_no
		                        , use_yn_emp_seq
		                FROM    $DB_NEOS$t_ex_etax_aq_tmp
		                WHERE   iss_dt BETWEEN #issDateFrom# AND #issDateTo#
		                AND     IFNULL(use_yn, 'Y') = 'N'
		        ) A INNER JOIN (
		                SELECT  emp_seq
		                        , emp_name
		                FROM    $DB_NEOS$t_co_emp_multi
		                WHERE   lang_code = #langCode#
		        ) B ON A.use_yn_emp_seq = B.emp_seq
	]]></select>

	<select id="NpUserReportA.NPETaxTransList" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap"><![CDATA[
		/* NpAdminReportSQL.xml -  NpUserReportA.NPETaxTransList */
		/* 매입전자세금계산서 이관 내역 조회 */
		
		SELECT  iss_no AS transIssNo
		        , transfer_seq AS transEmpSeq
		        , transfer_name AS trnasEmpName
		        , receive_seq AS receiveEmpSeq
		        , receive_name AS receiveEmpName
		FROM    $DB_NEOS$t_ex_etax_transfer
		WHERE   iss_dt BETWEEN #issDateFrom# and #issDateTo#
	]]></select>



	<!-- /* 매입전자세금계산서 현황 및 기능 2차 구현 - 김상겸 */ -->
	
	<!-- /* 매입전자세금계산서 이관 목록 조회 */ -->
	<select id="NpUserReportA.ETaxTransList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap"><![CDATA[
		/* NpAdminReportSQL.xml - NpUserReportA.ETaxTransList */
		/* 매입전자세금계산서 (이관)수신 목록 조회 */
		
		SELECT  comp_seq AS compSeq
		        , iss_no AS issNo
		        , iss_dt AS issDt
		        , partner_no AS partnerNo
		        , partner_name AS partnerName
		        , transfer_seq AS transferSeq
		        , transfer_name AS transferName
		        , receive_seq AS receiveSeq
		        , receive_name AS receiveName
		        , supper_key AS supperKey
		FROM    $DB_NEOS$t_ex_etax_transfer
		WHERE   iss_dt BETWEEN #issDateFrom# and #issDateTo#
		AND     comp_seq = #compSeq#
		AND     transfer_seq = #empSeq#
	]]></select>
	
	<!-- /* 매입전자세금계산서 (이관)수신 목록 조회 */ -->
	<select id="NpUserReportA.ETaxReceiveList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap"><![CDATA[
		/* NpAdminReportSQL.xml - NpUserReportA.ETaxReceiveList */
		/* 매입전자세금계산서 (이관)수신 목록 조회 */
		
		SELECT  comp_seq AS compSeq
		        , iss_no AS issNo
		        , iss_dt AS issDt
		        , partner_no AS partnerNo
		        , partner_name AS partnerName
		        , transfer_seq AS transferSeq
		        , transfer_name AS transferName
		        , receive_seq AS receiveSeq
		        , receive_name AS receiveName
		        , supper_key AS supperKey
		FROM    $DB_NEOS$t_ex_etax_transfer
		WHERE   iss_dt BETWEEN #issDateFrom# and #issDateTo#
		AND     comp_seq = #compSeq#
		AND     receive_seq = #empSeq#
	]]></select>
	
	<!-- /* 매입전자세금계산서 데이터 존재 여부 확인 */ -->
	<select id="NpUserReportA.ETaxExists" parameterClass="java.util.HashMap" resultClass="java.util.HashMap"><![CDATA[
		/* NpAdminReportSQL.xml -  NpUserReportA.ETaxExists */
		/* 매입전자세금계산서 연동 정보 존재 확인 */
		
		SELECT  sync_id AS syncId /* 연동 시퀀스 */
		        , iss_no AS issNo /* 매입전자세금계산서 번호 */
		        , iss_dt AS issDt /* 매입전자세금계산서 작성일자 */
		        , partner_no AS partnerNo /* 거래처 사업자 등록번호 */
		        , comp_seq AS compSeq /* Bizbox Alpha 회사 시퀀스 */
		        , IFNULL(send_yn, 'N') AS sendYn /* 상신여부 ( N : 미상신 / Y : 상신 ) */
		        , IFNULL(if_m_id, '0') AS ifMId /* 연동 구분 아이디 ( 영리 : expend_seq / 비영리 : budget_seq ) */
		        , IFNULL(if_d_id, '0') AS ifDId /* 연동 구분 아이디 ( 영리 : list_seq / 비영리 : trade_seq ) */
		        , IFNULL(use_yn, 'Y') AS useYn /* 사용여부 ( 사용 : Y / 미사용 : N ) */
		        , IFNULL(use_yn_emp_seq, '') AS useYnEmpSeq /* ( 사영여부 미사용처리 진행한 사용자의 emp_seq ) */
		FROM    $DB_NEOS$t_ex_etax_aq_tmp
		WHERE   iss_no = #issNo#
		AND     iss_dt = #issDt#
		LIMIT	1
	]]></select>

	<!-- /* 매입전자세금계산서 상신 데이터 존재 여부 확인 */ -->
	<select id="NpUserReportA.ETaxSendExists" parameterClass="java.util.HashMap" resultClass="java.util.HashMap"><![CDATA[
		/* NpAdminReportSQL.xml -  NpUserReportA.ETaxSendExists */
		/* 매입전자세금계산서 상신 데이터 존재 여부 확인 */
		
		SELECT  sync_id AS syncId
		        , iss_no AS issNo
		        , iss_dt AS issDt
		        , partner_no AS partnerNo
		        , comp_seq AS compSeq
		        , IFNULL(send_yn, 'N') AS sendYn
		        , IFNULL(note, '') AS note
		        , IFNULL(if_m_id, '0') AS ifMId
		        , IFNULL(if_d_id, '0') AS ifDId
		        , IFNULL(use_yn, 'Y') AS useYn
		        , IFNULL(use_yn_emp_seq, '') AS useYnEmpSeq
		FROM    $DB_NEOS$t_ex_etax_aq_tmp
		WHERE   iss_no = #issNo#
		AND     iss_dt = #issDt#
		AND     IFNULL(send_yn, 'N') = 'Y'
		LIMIT	1
	]]></select>

	<!-- /* 매입전자세금계산서 연동 데이터 생성 */ -->
	<insert id="NpUserReportA.ETaxInsert" parameterClass="java.util.HashMap">
		/* NpAdminReportSQL.xml - NpUserReportA.ETaxInsert */
		/* 매입전자세금계산서 연동
		데이터 생성 */
		
		<![CDATA[
		INSERT IGNORE INTO $DB_NEOS$t_ex_etax_aq_tmp ( iss_no, iss_no2, iss_dt, partner_no, comp_seq, send_yn, create_seq, create_date, modify_seq, modify_date )
		VALUES ( #issNo#, #issNo2#, #issDt#, #trRegNb#, #compSeq#, 'N', #empSeq#, NOW(), #empSeq#, NOW() )
		]]>

		<selectKey keyProperty="sync_id" resultClass="int">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
	</insert>

	<!-- /* 매입전자세금계산서 연동 데이터 미사용 처리 */ -->
	<update id="NpUserReportA.ETaxUseUpdateN" parameterClass="java.util.HashMap"><![CDATA[
		/* NpAdminReportSQL.xml -  NpUserReportA.ETaxUseUpdateN */
		/* 매입전자세금계산서 연동 데이터 미사용 처리 */
		
		UPDATE  $DB_NEOS$t_ex_etax_aq_tmp
		SET     use_yn = 'N'
		        , use_yn_emp_seq = #empSeq#
		        , modify_seq = #empSeq#
		        , modify_date = NOW()
		WHERE   iss_no = #issNo#
		AND     iss_dt = #issDt#
		AND     IFNULL(send_yn, 'N') = 'N'
	]]></update>

	<!-- /* 매입전자세금계산서 연동 데이터 사용 처리 */ -->
	<update id="NpUserReportA.ETaxUseUpdateY" parameterClass="java.util.HashMap"><![CDATA[
		/* NpAdminReportSQL.xml -  NpUserReportA.ETaxUseUpdateY */
		/* 매입전자세금계산서 연동 데이터 미사용 처리 */
		
		UPDATE  $DB_NEOS$t_ex_etax_aq_tmp
		SET     use_yn = 'Y'
		        , use_yn_emp_seq = #empSeq#
		        , modify_seq = #empSeq#
		        , modify_date = NOW()
		WHERE   iss_no = #issNo#
		AND     iss_dt = #issDt#
		AND     IFNULL(send_yn, 'N') = 'N'
	]]></update>

	<!-- /* 매입전자세금계산서 연동 데이터 상신 취소 처리 */ -->
	<update id="NpUserReportA.ETaxSendUpdateN" parameterClass="java.util.HashMap"><![CDATA[
		/* NpAdminReportSQL.xml -  NpUserReportA.ETaxSendUpdateN */
		/* 매입전자세금계산서 연동 데이터 상신 처리 */
		
		UPDATE  $DB_NEOS$t_ex_etax_aq_tmp
		SET     send_yn = 'N'
		        , modify_seq = #empSeq#
		        , modify_date = NOW()
		WHERE   iss_no = #issNo#
		AND     iss_dt = #issDt#
		AND     IFNULL(send_yn, 'N') = 'Y'
	]]></update>

	<!-- /* 매입전자세금계산서 연동 데이터 상신 처리 */ -->
	<update id="NpUserReportA.ETaxSendUpdateY" parameterClass="java.util.HashMap"><![CDATA[
		/* NpAdminReportSQL.xml -  NpUserReportA.ETaxSendUpdateY */
		/* 매입전자세금계산서 연동 데이터 상신 처리 */
		
		UPDATE  $DB_NEOS$t_ex_etax_aq_tmp
		SET     send_yn = 'Y'
		        , modify_seq = #empSeq#
		        , modify_date = NOW()
		WHERE   iss_no = #issNo#
		AND     iss_dt = #issDt#
		AND     IFNULL(send_yn, 'N') = 'N'
	]]></update>

	<!-- /* 매입전자세금계산서 이관 데이터 조회 */ -->
	<select id="NpUserReportA.ETaxTransExists" parameterClass="java.util.HashMap" resultClass="java.util.HashMap"><![CDATA[
		/* NpAdminReportSQL.xml -  NpUserReportA.ETaxTransExists */
		/* 매입전자세금계산서 연동 데이터 상신 처리 */
		
		SELECT  seq AS eTaxTransSeq
		        , comp_seq AS compSeq
		        , iss_no AS issNo
		        , iss_dt AS issDt
		        , partner_no AS trRegNb
		        , partner_name AS trName
		        , amt AS reqAmt
		        , transfer_seq AS transferSeq /* 이관 사용자 시퀀스 */
		        , transfer_name AS transferName /* 이관 사용자 사원명 */
		        , receive_seq AS receiveEmpSeq /* 수신 사용자 시퀀스 */
		        , receive_name AS receiveEmpName /* 수신 사용자 사원명 */
		        , supper_key AS receiveEmpSuperKey /* 수신 사용자 공통팝업 수퍼키 */
		FROM    $DB_NEOS$t_ex_etax_transfer
		WHERE   iss_no = #issNo#
		AND     iss_dt = #issDt#
	]]></select>
	
	<!-- /* 매입전자세금계산서 이관 데이터 수정 */ -->
	<update id="NpUserReportA.ETaxTransUpdate" parameterClass="java.util.HashMap"><![CDATA[
		/* NpAdminReportSQL.xml -  NpUserReportA.ETaxTransUpdate */
		/* 매입전자세금계산서 이관 데이터 수정 처리 */
		
		UPDATE  $DB_NEOS$t_ex_etax_transfer
		SET     comp_seq = #compSeq#
		        , iss_no = #issNo#
		        , iss_dt = #issDt#
		        , partner_no = #trRegNb#
		        , partner_name = #trName#
		        , amt = #reqAmt#
		        , transfer_seq = #empSeq#
		        , transfer_name = #empName#
		        , receive_seq = #receiveEmpSeq#
		        , receive_name = #receiveEmpName#
		        , supper_key = #receiveEmpSuperKey#
		        , create_date = NOW()
		WHERE   seq = #eTaxTransSeq#
		AND		iss_no = #issNo#
		AND     iss_dt = #issDt#
	]]></update>
	
	<!-- /* 매입전자세금계산서 이관 데이터 생성 */ -->
	<insert id="NpUserReportA.ETaxTransInsert" parameterClass="java.util.HashMap">
		/* NpAdminReportSQL.xml - NpUserReportA.ETaxTransInsert */
		/* 매입전자세금계산서 이관 데이터 생성 */
		
		<![CDATA[
		INSERT INTO $DB_NEOS$t_ex_etax_transfer ( comp_seq, iss_no, iss_no2, iss_dt, partner_no, partner_name, amt, transfer_seq, transfer_name, receive_seq, receive_name, supper_key, create_date )
		VALUE ( #compSeq#, #issNo#, #issNo2#, #issDt#, #trRegNb#, #trName#, #reqAmt#, #empSeq#, #empName#, #receiveEmpSeq#, #receiveEmpName#, #receiveEmpSuperKey#, NOW() );
		]]>

		<selectKey keyProperty="etax_trans_seq" resultClass="int"><![CDATA[
			SELECT LAST_INSERT_ID() AS etax_trans_seq
		]]></selectKey>
	</insert>
	
	<select id="NpUserReportA.selectYesilConsAmtList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* NpAdminReportSQL.xml - NpUserReportA.selectYesilConsAmtList */
		/* [G20 예실대비 현황- 품의상세 팝업] 현황 예산별 품의서 사용 리스트 조회 */
		SELECT	
			cons.cons_doc_seq	AS 'consDocSeq'
			, cons.doc_seq		AS 'docSeq'
			, cons.doc_no		AS 'docNo'
			, cons.doc_status	AS 'docStatus'
			, CONCAT(SUBSTRING(i.c_diwriteday,1,4),'-',SUBSTRING(i.c_diwriteday,5,2),'-',SUBSTRING(i.c_diwriteday,7,2))      AS 'docDate'
			, CONVERT(cons.expend_date, CHAR(10))	AS 'expendDate'
			, cons.comp_name	AS 'compName'
			, cons.dept_name	AS 'deptName'
			, cons.emp_name		AS 'empName'
			, cons.conffer_return_yn	AS 'confferReturnYn'
			, cons.erp_div_name	AS 'erpDivName'
			, cons.erp_budget_seq	AS 'erpBudgetSeq'
			, cons.erp_budget_name	AS 'erpBudgetName'
			, IFNULL(cons.budget_std_amt, 0)	AS 'consStdAmt'
			, IFNULL(cons.budget_tax_amt, 0)	AS 'consTaxAmt'
			, IFNULL(cons.budget_amt, 0)	AS 'consAmt'
			, conffer_budget_return_yn
			, IFNULL(res.res_amt, 0)		AS 'resAmt' 
			, (     CASE WHEN       conffer_return_yn = 'Y'
                                THEN            0
                                ELSE            IFNULL(cons.budget_amt, 0) - IFNULL(res.res_amt, 0)
                                END
            )  AS 'balanceAmt'
			, IFNULL(ea.c_riaftertitle, eap.doc_title)	AS docTitle
			, IFNULL(form_id,'')				AS formSeq
		FROM	(
			SELECT	
				doc.cons_doc_seq
				, doc.doc_seq
				, doc.doc_no
				, doc.doc_status
				, doc.expend_date
				, doc.comp_name
				, doc.erp_comp_seq
				, doc.dept_name
				, doc.emp_name
				, doc.conffer_return_yn
				, doc.erp_div_name
				, consBudget.erp_budget_seq
				, consBudget.erp_budget_name
				, MAX(consBudget.conffer_budget_return_yn) AS conffer_budget_return_yn
				, SUM(case consBudget.conffer_budget_return_yn when 'Y' then 0 else consBudget.budget_std_amt end)        AS budget_std_amt
                , SUM(case consBudget.conffer_budget_return_yn when 'Y' then 0 else consBudget.budget_tax_amt end)        AS budget_tax_amt
                , SUM(case consBudget.conffer_budget_return_yn when 'Y' then 0 else consBudget.budget_amt end)            AS budget_amt
			FROM	$DB_NEOS$t_exnp_consdoc	doc
			INNER JOIN      (
				SELECT  *
				FROM    $DB_NEOS$t_exnp_conshead
				WHERE	#erpMgtSeq# LIKE CONCAT('%|', mgt_seq, '|%')
 				 AND	(CASE '$erpBottomSeq$' WHEN '' THEN CONCAT('|',IFNULL(bottom_seq, ''), '|') ELSE '$erpBottomSeq$' END) LIKE CONCAT('%|', IFNULL(bottom_seq, ''), '|%')
			)       head
			 ON     doc.cons_doc_seq = head.cons_doc_seq			
			INNER JOIN	(
				SELECT	* 
				FROM	$DB_NEOS$t_exnp_consbudget
				WHERE	( erp_budget_seq = #erpBudgetSeq# OR erp_bgt1_seq = #erpBudgetSeq# OR erp_bgt2_seq = #erpBudgetSeq# OR erp_bgt3_seq = #erpBudgetSeq# 
						OR erp_bgt4_seq = #erpBudgetSeq# OR erp_level01_seq = #erpBudgetSeq# OR erp_level02_seq = #erpBudgetSeq# OR erp_level03_seq = #erpBudgetSeq# 
						OR erp_level04_seq = #erpBudgetSeq# OR erp_level05_seq = #erpBudgetSeq# OR erp_level06_seq = #erpBudgetSeq#)
			)	consBudget
			ON	doc.cons_doc_seq = consBudget.cons_doc_seq
			 AND	head.cons_seq = consBudget.cons_seq
			WHERE	doc_seq IS NOT NULL
			 AND	IFNULL(doc_status, '008') IN ( '001', '002', '003', '004', '006', '008', '009', '20', '30', '90' )
			 AND	head.erp_gisu = #erpGisu#
			 AND	doc.erp_div_seq = #erpDivSeq#
			GROUP BY doc.cons_doc_seq
		)	cons
		LEFT JOIN	(
			SELECT	c_dikeycode 
				, c_riaftertitle
			FROM	$DB_NEOS$a_recordinfo
			GROUP BY c_dikeycode
		)	ea
		ON	cons.doc_seq = ea.c_dikeycode
		LEFT JOIN      (
                        SELECT  c_dikeycode,  MIN(c_diwriteday) AS c_diwriteday
                        FROM    $DB_NEOS$a_draftinfo
                        WHERE   IFNULL(c_distatus, '008') != 'd'
                        GROUP BY c_dikeycode
                )       i
                 ON     ea.c_dikeycode = i.c_dikeycode
		LEFT JOIN	(
			SELECT	doc_id
				, form_id
				, doc_title
			FROM	$DB_NEOS$teag_appdoc
		)	eap
		ON	cons.doc_seq = eap.doc_id		
		LEFT JOIN	(
			SELECT	
				budget.conffer_doc_seq	
				, SUM( (CASE IFNULL(budget.ctl_fg_code, '1') 
							WHEN '0'	THEN 	( CASE IFNULL(budget.budget_std_amt, 0) WHEN '0' THEN budget.budget_amt ELSE budget.budget_std_amt END )
							ELSE		IFNULL(budget.budget_amt, 0)	/* emptyStr or '1' */
						END)
				)	AS 'res_amt'
				, SUM(budget.budget_std_amt)	'res_std_amt'
			FROM	(
				SELECT	*
				FROM	$DB_NEOS$t_exnp_resdoc 
				WHERE	doc_seq IS NOT NULL
				 AND	erp_div_seq = #erpDivSeq#
				 AND	IFNULL(doc_status, '008') IN ( '001', '002', '003', '004', '006', '008', '009', '20', '30', '90' )
			)	doc
			
			INNER JOIN	(
				SELECT	
					res_seq
					, res_doc_seq
				FROM	$DB_NEOS$t_exnp_reshead
				WHERE	#erpMgtSeq# LIKE CONCAT('%|', mgt_seq, '|%')
			)	head	
			ON	doc.res_doc_seq = head.res_doc_seq
						
			INNER JOIN	$DB_NEOS$t_exnp_resbudget budget
			ON	doc.res_doc_seq = budget.res_doc_seq
			AND	head.res_seq = budget.res_seq
			WHERE	(budget.erp_budget_seq = #erpBudgetSeq# OR budget.erp_bgt1_seq = #erpBudgetSeq# OR budget.erp_bgt2_seq = #erpBudgetSeq# OR budget.erp_bgt3_seq = #erpBudgetSeq# 
					OR budget.erp_bgt4_seq = #erpBudgetSeq# OR budget.erp_level01_seq = #erpBudgetSeq# OR budget.erp_level02_seq = #erpBudgetSeq# OR budget.erp_level03_seq = #erpBudgetSeq#
					OR budget.erp_level04_seq = #erpBudgetSeq# OR budget.erp_level05_seq = #erpBudgetSeq# OR budget.erp_level06_seq = #erpBudgetSeq#)
			GROUP BY budget.conffer_doc_seq	
		)	res
		ON	cons.cons_doc_seq = res.conffer_doc_seq
		WHERE	(
				cons.doc_no 			LIKE CONCAT('%', '$serchStr$', '%')
				OR cons.dept_name 		LIKE CONCAT('%', '$serchStr$', '%')
				OR cons.emp_name 		LIKE CONCAT('%', '$serchStr$', '%')
				OR cons.erp_div_name 	LIKE CONCAT('%', '$serchStr$', '%')
				OR IFNULL(ea.c_riaftertitle, eap.doc_title) LIKE CONCAT('%', '$serchStr$', '%')
			)
		<isNotEmpty property="docStatus">
		AND	cons.doc_status IN ($docStatus$)
		</isNotEmpty>
		<isNotEmpty property="balanceYN">
		AND	( CASE 		#balanceYN#
				WHEN 	'N' THEN '1'
				ELSE	(	CASE WHEN	conffer_budget_return_yn = 'Y'
			 				THEN		0
							ELSE		(CASE WHEN conffer_return_yn = 'Y' THEN 0 ELSE IFNULL(cons.budget_amt, 0) - IFNULL(res.res_amt, 0) END)
							END
						)
			END
		 )	!= 0
		</isNotEmpty>
		AND cons.erp_comp_seq = #erpCompSeq#
		AND cons.conffer_return_yn != 'Y'
	</select>
	
	<select id="NpUserReportA.selectERPiUYesilConsAmtList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* expend/np/user/NpUserBudgetSQL.xml - NpUserReportA.selectERPiUYesilConsAmtList */
		/* ERPiU 예실대비 현황 품의 잔액 상세 팝업 리스트 조회 */
		SELECT	
			tbl.cons_doc_seq	AS consDocSeq
			, tbl.doc_seq		AS docSeq
			, tbl.doc_status	AS docStatus
			, tbl.doc_no		AS docNo
			, IFNULL(ea.c_riaftertitle, eap.doc_title)		AS docTitle
			, dr.c_diwriteday	AS expendDate
			, tbl.dept_name		AS deptName
			, tbl.emp_name		AS empName
			, tbl.budget_amt	AS consAmt
			, tbl.res_budget_amt	AS resAmt
			, ( CASE tbl.conffer_return_yn WHEN 'Y' THEN '0' ELSE tbl.balance_amt END ) AS balanceAmt
		FROM	(
			SELECT	
				consD.cons_doc_seq
				, consD.doc_seq
				, consD.doc_status
				, consD.doc_no
				, consD.comp_name
				, consD.dept_name
				, consD.emp_name
				, consB.erp_bgacct_seq
				, consB.erp_bgacct_name
				, consB.budget_amt
				, IFNULL(resB.budget_amt, 0) AS res_budget_amt
				, CASE conffer_budget_return_yn WHEN 'Y' THEN '0' ELSE consB.budget_amt - IFNULL(resB.budget_amt, 0) END AS balance_amt
				, consD.conffer_return_yn
			FROM	$DB_NEOS$t_exnp_consbudget consB
			INNER JOIN	(
				SELECT 	d.* , h.cons_seq
				FROM	$DB_NEOS$t_exnp_consdoc d
				INNER JOIN $DB_NEOS$t_exnp_conshead h
				 ON	d.cons_doc_seq = h.cons_doc_seq
				 AND	h.cons_date BETWEEN #fromDate# AND #toDate#
				WHERE	doc_seq IS NOT NULL
				 AND	IFNULL(doc_status, '008') IN ( '001', '002', '003', '004', '008', '009','20', '30', '90' )
				 AND	comp_seq = #compSeq#
			 )	consD
			 ON		consB.cons_doc_seq = consD.cons_doc_seq
			 AND	consB.cons_seq = consD.cons_seq
			 LEFT JOIN	(
				 SELECT	
					b.conffer_doc_seq
					, b.conffer_budget_seq
					, SUM(IFNULL(( CASE ctl_fg_code WHEN '0' THEN ( CASE IFNULL(budget_std_amt, 0) WHEN '0' THEN budget_amt ELSE budget_std_amt END ) ELSE budget_amt END ), 0)) AS budget_amt
				FROM	$DB_NEOS$t_exnp_resbudget b
				INNER JOIN	(
					SELECT 	* 
					FROM	$DB_NEOS$t_exnp_resdoc 
					WHERE	doc_seq IS NOT NULL
					 AND	IFNULL(doc_status, '008') IN ( '001', '002', '003', '004', '008', '009','20', '30', '90' )
					 AND	comp_seq = #compSeq#
					 AND	conffer_doc_seq IS NOT NULL
				 )	d
				 ON	b.res_doc_seq = d.res_doc_seq
				 GROUP BY b.conffer_budget_seq
			 )	resB
			 ON	consB.cons_doc_seq = resB.conffer_doc_seq
			 AND	consB.budget_seq = resB.conffer_budget_seq
			 WHERE	consB.erp_budget_seq = #erpBudgetSeq#
			  AND	consB.erp_bizplan_seq = #erpBizplanSeq#
			  AND	consB.erp_bgacct_seq = #erpBgacctSeq#
			  and  	consD.conffer_return_yn != 'Y'
			  and 	consB.conffer_budget_return_yn != 'Y'
		)	tbl
		LEFT JOIN	$DB_NEOS$a_recordinfo ea
		 ON	tbl.doc_seq = ea.c_dikeycode
		LEFT JOIN	$DB_NEOS$a_draftinfo dr
		 ON	tbl.doc_seq = dr.c_dikeycode
		LEFT JOIN	$DB_NEOS$teag_appdoc eap
		 ON	tbl.doc_seq = eap.doc_id
		WHERE	(
			tbl.doc_no 			LIKE CONCAT('%', '$serchStr$', '%')
			OR tbl.dept_name 		LIKE CONCAT('%', '$serchStr$', '%')
			OR tbl.emp_name 		LIKE CONCAT('%', '$serchStr$', '%')
			OR IFNULL(ea.c_riaftertitle, eap.doc_title) LIKE CONCAT('%', '$serchStr$', '%')
		)
		<isNotEmpty property="docStatus">
		AND	tbl.doc_status IN ($docStatus$)
		</isNotEmpty>
		<isNotEmpty property="balanceYN">
		AND	( CASE 		#balanceYN#
				WHEN 	'N' THEN '1'
				ELSE	(	CASE	tbl.conffer_return_yn 
								WHEN 	'Y' 	THEN 0
								ELSE	tbl.balance_amt
							END	)
			END
		 )	!= 0
		</isNotEmpty>
	</select>
	
	<select id="NpUserReportA.selectERPiUYesilConsBudgetInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* expend/np/user/NpUserBudgetSQL.xml - NpUserReportA.selectERPiUYesilConsBudgetInfo */
		/* ERPiU 예실대비 품의 상세 팝업 총계 금액 조회 */
		SELECT	
			SUM(tbl.budget_amt)			AS consBudgetAmt
			, SUM(tbl.res_budget_amt)	AS resBudgetAmt
			, SUM(tbl.balance_amt) 	AS balanceAmt
		FROM	(
			SELECT	
				consD.cons_doc_seq
				, consD.doc_seq
				, consD.doc_status
				, consD.doc_no
				, consD.comp_name
				, consD.dept_name
				, consD.emp_name
				, consB.erp_bgacct_seq
				, consB.erp_bgacct_name
				, consB.budget_amt
				, IFNULL(resB.budget_amt, 0) AS res_budget_amt
				, CASE conffer_budget_return_yn WHEN 'Y' THEN '0' ELSE consB.budget_amt - IFNULL(resB.budget_amt, 0) END AS balance_amt
				, consD.conffer_return_yn
			FROM	$DB_NEOS$t_exnp_consbudget consB
			INNER JOIN	(
				SELECT 	d.* , h.cons_seq
				FROM	$DB_NEOS$t_exnp_consdoc d
				INNER JOIN $DB_NEOS$t_exnp_conshead h
				 ON	d.cons_doc_seq = h.cons_doc_seq
				 AND	h.cons_date BETWEEN #fromDate# AND #toDate#
				WHERE	doc_seq IS NOT NULL
				 AND	IFNULL(doc_status, '008') IN ( '001', '002', '003', '004', '008', '009','20', '30', '90' )
				 AND	comp_seq = #compSeq#
			 )	consD
			 ON		consB.cons_doc_seq = consD.cons_doc_seq
			 AND	consB.cons_seq = consD.cons_seq
			 LEFT JOIN	(
				 SELECT	
					b.conffer_doc_seq
					, b.conffer_budget_seq
					, SUM(IFNULL(( CASE ctl_fg_code WHEN '0' THEN ( CASE IFNULL(budget_std_amt, 0) WHEN '0' THEN budget_amt ELSE budget_std_amt END ) ELSE budget_amt END ), 0)) AS budget_amt
				FROM	$DB_NEOS$t_exnp_resbudget b
				INNER JOIN	(
					SELECT 	* 
					FROM	$DB_NEOS$t_exnp_resdoc 
					WHERE	doc_seq IS NOT NULL
					 AND	IFNULL(doc_status, '008') IN ( '001', '002', '003', '004', '008', '009','20', '30', '90' )
					 AND	comp_seq = #compSeq#
					 AND	conffer_doc_seq IS NOT NULL
				 )	d
				 ON	b.res_doc_seq = d.res_doc_seq
				 GROUP BY b.conffer_budget_seq
			 )	resB
			 ON	consB.cons_doc_seq = resB.conffer_doc_seq
			 AND	consB.budget_seq = resB.conffer_budget_seq
			 WHERE	consB.erp_budget_seq = #erpBudgetSeq#
			  AND	consB.erp_bizplan_seq = #erpBizplanSeq#
			  AND	consB.erp_bgacct_seq = #erpBgacctSeq#
			  and  	consD.conffer_return_yn != 'Y'
			  and 	consB.conffer_budget_return_yn != 'Y'
		)	tbl
		LEFT JOIN	$DB_NEOS$a_recordinfo ea
		 ON	tbl.doc_seq = ea.c_dikeycode
		LEFT JOIN	$DB_NEOS$a_draftinfo dr
		 ON	tbl.doc_seq = dr.c_dikeycode
		LEFT JOIN	$DB_NEOS$teag_appdoc eap
		 ON	tbl.doc_seq = eap.doc_id
		WHERE	(
			tbl.doc_no 			LIKE CONCAT('%', '$serchStr$', '%')
			OR tbl.dept_name 		LIKE CONCAT('%', '$serchStr$', '%')
			OR tbl.emp_name 		LIKE CONCAT('%', '$serchStr$', '%')
			OR IFNULL(ea.c_riaftertitle, eap.doc_title) LIKE CONCAT('%', '$serchStr$', '%')
		)
	</select>
	
	<!-- <select id="NpUserReportA.selectERPiUYesilConsBudgetInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* expend/np/user/NpUserBudgetSQL.xml - NpUserReportA.selectERPiUYesilConsBudgetInfo */
		/* ERPiU 예실대비 품의 상세 팝업 총계 금액 조회 */
		SELECT	
			SUM(budget_amt) 			AS consBudgetAmt
			, SUM(res_budget_amt) 		AS resBudgetAmt
			, SUM(budget_amt) - SUM(res_budget_amt) AS balanceAmt
		FROM	(
			SELECT	
				consB.erp_bgacct_seq
				, consB.erp_bgacct_name
				, consB.budget_amt
				, IFNULL(res_budget_amt,'0') AS res_budget_amt
			FROM	$DB_NEOS$t_exnp_consbudget consB
			INNER JOIN	(
				SELECT 	d.* 
				FROM	$DB_NEOS$t_exnp_consdoc d
				INNER JOIN $DB_NEOS$t_exnp_conshead h
				 ON	d.cons_doc_seq = h.cons_doc_seq
				 AND	h.cons_date BETWEEN #fromDate# AND #toDate#
				WHERE	doc_seq IS NOT NULL
				 AND	IFNULL(doc_status, '008') IN ( '001', '002', '003', '004', '008', '009','20', '30', '90' )
				 AND	comp_seq = #compSeq#
			 )	consD
			 ON	consB.cons_doc_seq = consD.cons_doc_seq
			 LEFT JOIN	(
				 SELECT	
					b.conffer_doc_seq
					, SUM(IFNULL(( CASE ctl_fg_code WHEN '0' THEN ( CASE IFNULL(budget_std_amt, 0) WHEN '0' THEN budget_amt ELSE budget_std_amt END ) ELSE budget_amt END ), 0)) AS res_budget_amt
				FROM	$DB_NEOS$t_exnp_resbudget b
				INNER JOIN	(
					SELECT 	* 
					FROM	$DB_NEOS$t_exnp_resdoc 
					WHERE	doc_seq IS NOT NULL
					 AND	IFNULL(doc_status, '008') IN ( '001', '002', '003', '004', '008', '009','20', '30', '90' )
					 AND	comp_seq = #compSeq#
					 AND	conffer_doc_seq IS NOT NULL
				 )	d
				 ON	b.res_doc_seq = d.res_doc_seq
				 GROUP BY b.conffer_doc_seq
			 )	resB
			 ON	consB.cons_doc_seq = resB.conffer_doc_seq
		    WHERE	consB.erp_budget_seq = #erpBudgetSeq#
		    AND	consB.erp_bizplan_seq = #erpBizplanSeq#
		    AND	consB.erp_bgacct_seq = #erpBgacctSeq#
		)	tbl
		GROUP BY erp_bgacct_seq		
	</select> -->
	
	<select id="NpUserReportA.selectYesilConsBudgetInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* expend/np/user/NpUserBudgetSQL.xml - NpUserReportA.selectYesilConsBudgetInfo */
		/* [G20 예실대비 현황 - 품의 상세 팝업품의단계 잔액 조회 */
		SELECT	
			SUM( IFNULL(consB.budget_std_amt, 0 ))		'consBudgetStdAmt'
			, SUM( IFNULL(consB.budget_tax_amt, 0 ))	'consBudgetTaxAmt'
			, SUM( IFNULL(consB.budget_amt, 0 ))		'consBudgetAmt'
			, consB.erp_budget_seq				'consErpBudgetSeq'
			, SUM( IFNULL(resB.budget_std_amt, 0 ))	'resBudgetStdAmt'
			, SUM( IFNULL(resB.budget_tax_amt, 0 ))	'resBudgetTaxAmt'
			, SUM( IFNULL(resB.budget_amt, 0 ))		'resBudgetAmt'
			, resB.erp_budget_seq				'resErpBudgetSeq'
			, SUM( IFNULL(consB.budget_std_amt, 0 )) 	- SUM( IFNULL(resB.budget_std_amt, 0 )) 	AS 'balanceStdAmt'
			, SUM( IFNULL(consB.budget_tax_amt, 0 )) 	- SUM( IFNULL(resB.budget_tax_amt, 0 )) 	AS 'balanceTaxAmt'
			, SUM( IFNULL(consB.budget_amt, 0 )) 		- SUM( IFNULL(resB.budget_amt, 0 )) 		AS 'balanceAmt'
			
		FROM	(	
			SELECT	* 
			FROM 	$DB_NEOS$t_exnp_consdoc
			WHERE 	conffer_return_yn != 'Y'
			 AND	doc_status IN ( '001', '002', '003', '004', '006', '008', '009', '20', '30', '90' )
			 AND	erp_div_seq = #erpDivSeq#
			UNION	
			SELECT	* 
			FROM 	$DB_NEOS$t_exnp_consdoc
			WHERE	cons_doc_seq = #consDocSeq#
		)	consD
		INNER JOIN 	(
			SELECT	b.* 
			FROM	$DB_NEOS$t_exnp_conshead h
			INNER JOIN	$DB_NEOS$t_exnp_consbudget b
			 ON	h.cons_seq = b.cons_seq
			 AND	(b.erp_budget_seq = #erpBudgetSeq# OR b.erp_bgt1_seq = #erpBudgetSeq# OR b.erp_bgt2_seq = #erpBudgetSeq# OR b.erp_bgt3_seq = #erpBudgetSeq# 
			 		OR b.erp_bgt4_seq = #erpBudgetSeq# OR b.erp_level01_seq = #erpBudgetSeq# OR b.erp_level02_seq = #erpBudgetSeq# OR b.erp_level03_seq = #erpBudgetSeq#
			 		OR b.erp_level04_seq = #erpBudgetSeq# OR b.erp_level05_seq = #erpBudgetSeq# OR b.erp_level06_seq = #erpBudgetSeq#)
			 AND	conffer_budget_return_yn = 'N' 
			WHERE	#erpMgtSeq# LIKE CONCAT('%|', mgt_seq, '|%')
 			 AND	(CASE '$erpBottomSeq$' WHEN '' THEN CONCAT('|', IFNULL(bottom_seq, ''), '|') ELSE '$erpBottomSeq$' END) LIKE CONCAT('%|', IFNULL(bottom_seq, ''), '|%')
 			 AND	h.erp_gisu = #erpGisu#				
		)	consB
		 ON	consD.cons_doc_seq = consB.cons_doc_seq
		LEFT JOIN	(
			SELECT	
				rb.conffer_doc_seq
				, rb.conffer_seq
				, rb.conffer_budget_seq
				, rb.erp_budget_seq
				, IFNULL(rb.erp_bgacct_seq, '')	AS erp_bgacct_seq
				, SUM( rb.budget_std_amt ) 	AS budget_std_amt
				, SUM( rb.budget_tax_amt )AS budget_tax_amt
				, SUM( (CASE IFNULL(rb.ctl_fg_code, '1') 
							WHEN '0'	THEN 	( CASE IFNULL(rb.budget_std_amt, 0) WHEN '0' THEN rb.budget_amt ELSE rb.budget_std_amt END )
							ELSE		IFNULL(rb.budget_amt, 0)	/* emptyStr or '1' */
						END)
				)	AS budget_amt				
			FROM	$DB_NEOS$t_exnp_resbudget rb
			 INNER JOIN $DB_NEOS$t_exnp_resdoc rd
			 ON 	rd.res_doc_seq = rb.res_doc_seq
			  AND	IFNULL(rd.doc_status, '008') IN ( '001', '002', '003', '004', '006', '008', '009', '20', '30', '90' )
			  AND	rd.doc_seq IS NOT NULL
			  AND	(rb.erp_budget_seq = #erpBudgetSeq# OR rb.erp_bgt1_seq = #erpBudgetSeq# OR rb.erp_bgt2_seq = #erpBudgetSeq# OR rb.erp_bgt3_seq = #erpBudgetSeq# 
			  		OR rb.erp_bgt4_seq = #erpBudgetSeq# OR rb.erp_level01_seq = #erpBudgetSeq# OR rb.erp_level02_seq = #erpBudgetSeq# OR rb.erp_level03_seq = #erpBudgetSeq#
			  		OR rb.erp_level04_seq = #erpBudgetSeq# OR rb.erp_level05_seq = #erpBudgetSeq# OR rb.erp_level06_seq = #erpBudgetSeq#)
			WHERE	rb.conffer_doc_seq IS NOT NULL	
			GROUP	BY rb.conffer_doc_seq
					, rb.conffer_seq
					, rb.conffer_budget_seq
					, (CASE IFNULL(rb.erp_budget_seq, '') WHEN '' THEN -1 ELSE IFNULL(rb.erp_budget_seq,'') END)
					, (CASE IFNULL(rb.erp_bgacct_seq, '') WHEN '' THEN -1 ELSE IFNULL(rb.erp_bgacct_seq,'') END)
			HAVING 	budget_amt != 0
		) resB
		 ON 	consB.cons_doc_seq = resB.conffer_doc_seq
		 AND	consB.cons_seq = resB.conffer_seq
		 AND	consB.budget_seq = resB.conffer_budget_seq
		 WHERE	consD.erp_comp_seq = #erpCompSeq#	
	</select>
	
	<select id="NpUserReportA.selectERPiUYesilResAmtList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* expend/np/user/NpUserBudgetSQL.xml - NpUserReportA.selectERPiUYesilResAmtList */
		/* ERPiU 결의서 전송/미전송 합계 리스트 조회 */
		SELECT	
			tbl.res_doc_seq	AS resDocSeq
			, tbl.doc_seq		AS docSeq
			, tbl.doc_status	AS docStatus
			, tbl.doc_no		AS docNo
			, IFNULL(ea.c_riaftertitle, eap.doc_title)		AS docTitle
			, dr.c_diwriteday	AS expendDate
			, tbl.dept_name		AS deptName
			, tbl.emp_name		AS empName
			, tbl.res_budget_amt	AS budgetAmt
			, tbl.erp_send_yn	AS erpSendYN
		FROM	(
			SELECT	
				resD.res_doc_seq
				, resD.doc_seq
				, resD.doc_status
				, resD.doc_no
				, resD.comp_name
				, resD.dept_name
				, resD.emp_name
				, resB.erp_bgacct_seq
				, resB.erp_bgacct_name
				, IFNULL(( CASE resB.ctl_fg_code WHEN '0' THEN ( CASE IFNULL(resB.budget_std_amt, 0) WHEN '0' THEN resB.budget_amt ELSE resB.budget_std_amt END ) ELSE resB.budget_amt END ), 0) AS res_budget_amt
				, resD.erp_send_yn
			FROM	$DB_NEOS$t_exnp_resbudget resB
			INNER JOIN	(
				SELECT 	
					h.res_seq
					, d.* 
				FROM	$DB_NEOS$t_exnp_resdoc d
				INNER JOIN $DB_NEOS$t_exnp_reshead h
				 ON	d.res_doc_seq = h.res_doc_seq
				 AND	h.res_date BETWEEN #fromDate# AND #toDate#
				WHERE	doc_seq IS NOT NULL
				 AND	IFNULL(doc_status, '008') IN ( '001', '002', '003', '004', '008', '009','20', '30', '90' )
				 AND	comp_seq = #compSeq#
			 )	resD
			 ON		resB.res_doc_seq = resD.res_doc_seq
			 AND	resB.res_seq 	= resD.res_seq
			WHERE	resB.erp_budget_seq = #erpBudgetSeq#
			 AND	resB.erp_bizplan_seq = #erpBizplanSeq# 
			 AND	resB.erp_bgacct_seq = #erpBgacctSeq# 
		)	tbl
		LEFT JOIN	$DB_NEOS$a_recordinfo ea
		 ON	tbl.doc_seq = ea.c_dikeycode
		LEFT JOIN	$DB_NEOS$a_draftinfo dr
		 ON	tbl.doc_seq = dr.c_dikeycode
		LEFT JOIN	$DB_NEOS$teag_appdoc eap
		 ON	tbl.doc_seq = eap.doc_id
		WHERE	(
			tbl.doc_no 			LIKE CONCAT('%', '$serchStr$', '%')
			OR tbl.dept_name 		LIKE CONCAT('%', '$serchStr$', '%')
			OR tbl.emp_name 		LIKE CONCAT('%', '$serchStr$', '%')
			OR IFNULL(ea.c_riaftertitle, eap.doc_title) LIKE CONCAT('%', '$serchStr$', '%')
		)	
		<isNotEmpty property="docStatus">
		AND	tbl.doc_status IN ($docStatus$)
		</isNotEmpty>
	</select>
	
	<select id="NpUserReportA.selectYesilResAmtList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* expend/np/user/NpUserBudgetSQL.xml - NpUserReportA.selectYesilResAmtList */
		/* [G20 예실대비 GW결의서 상세 팝업] 결의서 전송/미전송 합계 리스트 조회 */		
		SELECT	
			doc.res_doc_seq		AS 'resDocSeq'
			, doc.doc_seq		AS 'docSeq'
			, doc.doc_no		AS 'docNo'
			, doc.doc_status	AS 'docStatus'
			, CONCAT(SUBSTRING(i.c_diwriteday,1,4),'-',SUBSTRING(i.c_diwriteday,5,2),'-',SUBSTRING(i.c_diwriteday,7,2))      AS 'docDate'
			, CONVERT(doc.expend_date, CHAR(10)) 	AS 'expendDate'
			, doc.erp_gisu		AS 'erpGisu'
			, doc.comp_name		AS 'compName'
			, doc.dept_name		AS 'deptName'
			, doc.emp_name		AS 'empName'
			, doc.erp_div_name	AS 'erpDivName'
			, budget.budgetStdAmt	AS 'budgetStdAmt'
			, budget.budgetTaxAmt	AS 'budgetTaxAmt'
			 
			, budget.budgetAmt	AS 'budgetAmt'
			
			, doc.conffer_doc_seq	AS 'confferDocSeq'
			, doc.erp_send_yn	AS 'erpSendYN'
			, doc.send_emp_name	AS 'sendEmpName'
			, IFNULL(ea.c_riaftertitle, eap.doc_title)	AS docTitle
			, IFNULL(eap.form_id,'') AS formSeq
		FROM	$DB_NEOS$t_exnp_resdoc doc
		INNER JOIN	(
			SELECT	DISTINCT
				h.res_doc_seq
			FROM	$DB_NEOS$t_exnp_reshead h
			INNER JOIN $DB_NEOS$t_Exnp_resbudget b
			ON	h.res_seq = b.res_seq
			AND	(erp_budget_seq = #erpBudgetSeq# OR erp_bgt1_seq = #erpBudgetSeq# OR erp_bgt2_seq = #erpBudgetSeq# OR erp_bgt3_seq = #erpBudgetSeq# 
				OR erp_bgt4_seq = #erpBudgetSeq# OR erp_level01_seq = #erpBudgetSeq# OR erp_level02_seq = #erpBudgetSeq# OR erp_level03_seq = #erpBudgetSeq#
				OR erp_level04_seq = #erpBudgetSeq# OR erp_level05_seq = #erpBudgetSeq# OR erp_level06_seq = #erpBudgetSeq#)
			WHERE	#erpMgtSeq# LIKE CONCAT('%|', mgt_seq, '|%')
 			 AND	(CASE '$erpBottomSeq$' WHEN '' THEN CONCAT('|',IFNULL(bottom_seq, ''), '|') ELSE '$erpBottomSeq$' END) LIKE CONCAT('%|', IFNULL(bottom_seq, ''), '|%')
 			 AND	h.erp_gisu = #erpGisu#
		)	head
		ON	doc.res_doc_seq = head.res_doc_seq		
		LEFT JOIN	(
			SELECT	c_dikeycode 
				, c_riaftertitle
			FROM	$DB_NEOS$a_recordinfo
			GROUP BY c_dikeycode
		)	ea
		ON	doc.doc_seq = ea.c_dikeycode
		LEFT JOIN      (
                        SELECT  c_dikeycode,  MIN(c_diwriteday) AS c_diwriteday
                        FROM    $DB_NEOS$a_draftinfo
                        WHERE   IFNULL(c_distatus, '008') != 'd'
                        GROUP BY c_dikeycode
                )       i
                 ON     ea.c_dikeycode = i.c_dikeycode
		LEFT JOIN	(
			SELECT	doc_id
				, form_id
				, doc_title
			FROM	$DB_NEOS$teag_appdoc
		)	eap
		ON	doc.doc_seq = eap.doc_id	
		INNER JOIN	(
			SELECT	
				res_doc_seq
				, SUM(budget_std_amt)	AS 'budgetStdAmt'
				, SUM(budget_tax_amt)	AS 'budgetTaxAmt'
				, SUM( (CASE IFNULL(ctl_fg_code, '1') 
							WHEN '0'	THEN 	( CASE IFNULL(budget_std_amt, 0) WHEN '0' THEN budget_amt ELSE budget_std_amt END )
							ELSE		IFNULL(budget_amt, 0)	/* emptyStr or '1' */
						END)
				)	AS budgetAmt
			FROM	$DB_NEOS$t_exnp_resbudget
			WHERE	(erp_budget_seq = #erpBudgetSeq# OR erp_bgt1_seq = #erpBudgetSeq# OR erp_bgt2_seq = #erpBudgetSeq# OR erp_bgt3_seq = #erpBudgetSeq# 
					OR erp_bgt4_seq = #erpBudgetSeq# OR erp_level01_seq = #erpBudgetSeq# OR erp_level02_seq = #erpBudgetSeq# OR erp_level03_seq = #erpBudgetSeq#
					OR erp_level04_seq = #erpBudgetSeq# OR erp_level05_seq = #erpBudgetSeq# OR erp_level06_seq = #erpBudgetSeq#)
			GROUP BY res_doc_seq
		)	budget
		ON	doc.res_doc_seq = budget.res_doc_seq
		 AND	doc_seq IS NOT NULL
		WHERE	IFNULL(doc_status, '008') IN ( '001', '002', '003', '004', '006', '008', '009', '20', '30', '90' )
		 AND	(
				doc.doc_no 			LIKE CONCAT('%', '$serchStr$', '%')
				OR doc.dept_name 		LIKE CONCAT('%', '$serchStr$', '%')
				OR doc.emp_name 		LIKE CONCAT('%', '$serchStr$', '%')
				OR doc.erp_div_name 	LIKE CONCAT('%', '$serchStr$', '%')
				OR IFNULL(ea.c_riaftertitle, eap.doc_title) 	LIKE CONCAT('%', '$serchStr$', '%')
			)
		 AND	doc.erp_div_seq = #erpDivSeq#	
		<isNotEmpty property="docStatus">
		AND	doc.doc_status IN ($docStatus$)
		</isNotEmpty>		 
		AND doc.erp_comp_seq = #erpCompSeq#
	</select>
	
	<select id="NpUserReportA.selectERPiUYesilResBudgetInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* expend/np/user/NpUserBudgetSQL.xml - NpUserReportA.selectERPiUYesilResBudgetInfo */
		/* ERPiU 예실대비 현황 결의 상세 총계 데이터 */
		SELECT	(
			SELECT	
				SUM(res_budget_amt)	AS resAmt
			FROM	(
				SELECT	
					resB.erp_bgacct_seq
					, IFNULL(( CASE resB.ctl_fg_code WHEN '0' THEN ( CASE IFNULL(resB.budget_std_amt, 0) WHEN '0' THEN resB.budget_amt ELSE resB.budget_std_amt END ) ELSE resB.budget_amt END ), 0) AS res_budget_amt
				FROM	$DB_NEOS$t_exnp_resbudget resB
				INNER JOIN	(
					SELECT 	d.* , h.res_seq
					FROM	$DB_NEOS$t_exnp_resdoc d
					INNER JOIN $DB_NEOS$t_exnp_reshead h
					 ON	d.res_doc_seq = h.res_doc_seq
					 AND	h.res_date BETWEEN #fromDate# AND #toDate#
					WHERE	doc_seq IS NOT NULL
					 AND	IFNULL(doc_status, '008') IN ( '001', '002', '003', '004', '008', '009','20', '30', '90' )
					 AND	comp_seq = #compSeq#
					 AND	erp_send_yn = 'N'
				 )	resD
				 ON	resB.res_doc_seq = resD.res_doc_seq
				 AND	resB.res_seq = resD.res_seq
				WHERE	resB.erp_budget_seq = #erpBudgetSeq#
				 AND	resB.erp_bizplan_seq = #erpBizplanSeq#
				 AND	resB.erp_bgacct_seq = #erpBgacctSeq#
			)	tbl
		)	AS	'nonSendResAmt'
		,	(
			SELECT	
				SUM(res_budget_amt)	AS resAmt
			FROM	(
				SELECT	
					resB.erp_bgacct_seq
					, IFNULL(( CASE resB.ctl_fg_code WHEN '0' THEN ( CASE IFNULL(resB.budget_std_amt, 0) WHEN '0' THEN resB.budget_amt ELSE resB.budget_std_amt END ) ELSE resB.budget_amt END ), 0) AS res_budget_amt
				FROM	$DB_NEOS$t_exnp_resbudget resB
				INNER JOIN	(
					SELECT 	d.* , h.res_seq
					FROM	$DB_NEOS$t_exnp_resdoc d
					INNER JOIN $DB_NEOS$t_exnp_reshead h
					 ON	d.res_doc_seq = h.res_doc_seq
					 AND	h.res_date BETWEEN #fromDate# AND #toDate#
					WHERE	doc_seq IS NOT NULL
					 AND	IFNULL(doc_status, '008') = '008'
					 AND	comp_seq = #compSeq#
					 AND	erp_send_yn = 'Y'
				 )	resD
				 ON	resB.res_doc_seq = resD.res_doc_seq
				 AND	resB.res_seq = resD.res_seq
				WHERE	resB.erp_budget_seq = #erpBudgetSeq#
				 AND	resB.erp_bizplan_seq = #erpBizplanSeq#
				 AND	resB.erp_bgacct_seq = #erpBgacctSeq#
			)	tbl
		)	AS 'sendResAmt'		
	</select>
	
	<select id="NpUserReportA.selectYesilResBudgetInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* expend/np/user/NpUserBudgetSQL.xml - NpUserReportA.selectYesilResBudgetInfo */
		/* [G20 예실대비 - GW결의 상세 팝업] 예산 결의단계 금액 조회 */			
		SELECT	(
			SELECT	
				IFNULL(SUM(budget.budgetAmt), 0)
			FROM	$DB_NEOS$t_exnp_resdoc doc
			INNER JOIN	(
				SELECT	DISTINCT h.res_doc_seq
				FROM	$DB_NEOS$t_exnp_reshead h
				INNER JOIN $DB_NEOS$t_Exnp_resbudget b
				ON	h.res_seq = b.res_seq
				AND	(erp_budget_seq = #erpBudgetSeq# OR erp_bgt1_seq = #erpBudgetSeq# OR erp_bgt2_seq = #erpBudgetSeq# OR erp_bgt3_seq = #erpBudgetSeq# OR erp_bgt4_seq = #erpBudgetSeq#)
				WHERE	#erpMgtSeq# LIKE CONCAT('%|', mgt_seq, '|%')
				 AND	(CASE '$erpBottomSeq$' WHEN '' THEN CONCAT('|',IFNULL(bottom_seq, ''), '|') ELSE '$erpBottomSeq$' END) LIKE CONCAT('%|', IFNULL(bottom_seq, ''), '|%')
				 AND	h.erp_gisu = #erpGisu#
			)	head
			ON	doc.res_doc_seq = head.res_doc_seq						
			INNER JOIN	(
				SELECT	
					res_doc_seq
					, SUM(budget_std_amt)	AS 'budgetStdAmt'
					, SUM(budget_tax_amt)	AS 'budgetTaxAmt'
					, SUM( (CASE IFNULL(ctl_fg_code, '1') 
								WHEN '0'	THEN 	( CASE IFNULL(budget_std_amt, 0) WHEN '0' THEN budget_amt ELSE budget_std_amt END )
								ELSE		IFNULL(budget_amt, 0)	/* emptyStr or '1' */
							END)
					)	AS budgetAmt					
				FROM	$DB_NEOS$t_exnp_resbudget
				WHERE	(erp_budget_seq = #erpBudgetSeq# OR erp_bgt1_seq = #erpBudgetSeq# OR erp_bgt2_seq = #erpBudgetSeq# OR erp_bgt3_seq = #erpBudgetSeq# OR erp_bgt4_seq = #erpBudgetSeq#)
				GROUP BY res_doc_seq
			)	budget 
			ON	doc.res_doc_seq = budget.res_doc_seq
			 AND	doc_seq IS NOT NULL
			WHERE	IFNULL(doc_status, '008') IN ( '001', '002', '003', '004', '006', '008', '009', '20', '30', '90' )
			 
			 AND	doc.erp_send_yn = 'N'
			 AND	doc.erp_div_seq = #erpDivSeq#
			 AND	doc.comp_seq = #compSeq#
		)	AS 'nonSendResAmt'
		, (
			SELECT	
				IFNULL(SUM(budget.budgetAmt), 0)
			FROM	$DB_NEOS$t_exnp_resdoc doc
			INNER JOIN	(
				SELECT	DISTINCT h.res_doc_seq
				FROM	$DB_NEOS$t_exnp_reshead h
				INNER JOIN $DB_NEOS$t_Exnp_resbudget b
				ON	h.res_seq = b.res_seq
				AND	(b.erp_budget_seq = #erpBudgetSeq# OR b.erp_bgt1_seq = #erpBudgetSeq# OR b.erp_bgt2_seq = #erpBudgetSeq# OR b.erp_bgt3_seq = #erpBudgetSeq# OR b.erp_bgt4_seq = #erpBudgetSeq#)
				WHERE	#erpMgtSeq# LIKE CONCAT('%|', mgt_seq, '|%')
 				 AND	(CASE '$erpBottomSeq$' WHEN '' THEN CONCAT('|',IFNULL(bottom_seq, ''), '|') ELSE '$erpBottomSeq$' END) LIKE CONCAT('%|', IFNULL(bottom_seq, ''), '|%')
 				 AND	h.erp_gisu = #erpGisu#
			)	head
			ON	doc.res_doc_seq = head.res_doc_seq					
			INNER JOIN	(
				SELECT	
					res_doc_seq
					, SUM(budget_std_amt)	AS 'budgetStdAmt'
					, SUM(budget_tax_amt)	AS 'budgetTaxAmt'
					, SUM( (CASE IFNULL(ctl_fg_code, '1') 
								WHEN '0'	THEN 	( CASE IFNULL(budget_std_amt, 0) WHEN '0' THEN budget_amt ELSE budget_std_amt END )
								ELSE		IFNULL(budget_amt, 0)	/* emptyStr or '1' */
							END)
					)	AS budgetAmt
				FROM	$DB_NEOS$t_exnp_resbudget
				WHERE	erp_budget_seq = #erpBudgetSeq#
				GROUP BY res_doc_seq
			)	budget
			ON	doc.res_doc_seq = budget.res_doc_seq
			 AND	doc_seq IS NOT NULL
			WHERE	IFNULL(doc_status, '008') IN ( '001', '002', '003', '004', '006', '008', '009', '20', '30', '90' )
			 
			 AND	doc.erp_send_yn = 'Y'
			 AND	doc.erp_comp_seq = #erpCompSeq#
		)	AS 'sendResAmt'
		
	</select>
	
	<select id="NpUserReportA.selectYesilERPResAmtList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* expend/np/user/NpUserBudgetSQL.xml - NpUserReportA.selectYesilERPResAmtList */
		/* G20 예산 전송 결의서 결의 정보 조회 */
		SELECT	
			d.res_doc_seq		AS resDocSeq
			, d.doc_seq			AS docSeq
			, IFNULL(d.doc_no,eap.doc_no)			AS docNo
			, IFNULL(ea.c_riaftertitle, eap.doc_title)	AS docTitle
			, (
				CASE	IFNULL(erp_gisu_date, 'NULLDATA')
				WHEN	'NULLDATA'	THEN erp_no_cdocu
				ELSE	CONCAT(erp_gisu_date, '-', erp_gisu_sq)
				END
			)	AS	erpKey
			, ifnull(eap.form_id,'') as formSeq
		FROM	$DB_NEOS$t_exnp_resdoc	d
		INNER JOIN	(
			SELECT	res_doc_seq, erp_gisu_date, erp_gisu_sq, erp_no_cdocu
			FROM	$DB_NEOS$t_exnp_reshead 
			WHERE	IFNULL((
				CASE	IFNULL(erp_gisu_date, 'NULLDATA')
				WHEN	'NULLDATA'	THEN erp_no_cdocu
				ELSE	CONCAT(erp_gisu_date, '-', erp_gisu_sq)
				END
			), '') 	IN $erpKeyFilter$
			 AND	erp_comp_seq = #erpCompSeq#	 
		)	h
		ON	d.res_doc_seq = h.res_doc_seq
		LEFT JOIN	(
			SELECT	c_dikeycode 
				, c_riaftertitle
			FROM	$DB_NEOS$a_recordinfo
			GROUP BY c_dikeycode
		)	ea
		ON	d.doc_seq = ea.c_dikeycode
		LEFT JOIN	(
			SELECT	doc_id
				, form_id
				, doc_title
				, doc_no
			FROM	$DB_NEOS$teag_appdoc
		)	eap
		ON	d.doc_seq = eap.doc_id		
		WHERE   d.erp_send_yn = 'Y'
		 AND	d.erp_div_seq = #erpDivSeq#
	</select>
	
	
	<select id="NpUserReportA.GetETaxTransHistoryList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap"><![CDATA[
		/* expend/np/user/NpUserBudgetSQL.xml - NpUserReportA.GetETaxTransHistoryList */
		/* 매입전자세금계산서 이관내역 조회 */
		SELECT	*
		FROM	(
					SELECT  DATE_FORMAT(create_date, '%Y-%m-%d') AS transDate
					        , CASE
								WHEN receive_seq = IFNULL(#empSeq#, '') 
									THEN (CASE WHEN transfer_seq  = IFNULL(#empSeq#, '') THEN IFNULL(receive_name, '') ELSE IFNULL(transfer_name, '') END)
									ELSE IFNULL(receive_name, '')
							END AS receiveName
					        , DATE_FORMAT(iss_dt, '%Y-%m-%d') AS issDate
					        , CASE
					                WHEN transfer_seq = #empSeq# THEN '0'
					                WHEN receive_seq = #empSeq# THEN '1'
					        END AS receiveType
					        , partner_name AS partnerName
					        , partner_no AS partnerNo
					        , iss_no AS issNo
					        , amt AS amt
					        , IFNULL(( SELECT send_yn FROM $DB_NEOS$t_ex_etax_aq_tmp WHERE iss_no = A.iss_no AND iss_dt = A.iss_dt AND partner_no = A.partner_no AND comp_seq = A.comp_seq LIMIT 1 ), 'N') AS sendYn
					        , IFNULL(( SELECT use_yn FROM $DB_NEOS$t_ex_etax_aq_tmp WHERE iss_no = A.iss_no AND iss_dt = A.iss_dt AND partner_no = A.partner_no AND comp_seq = A.comp_seq LIMIT 1 ), 'Y') AS useYn
					        , seq AS eTaxTransSeq
					FROM    $DB_NEOS$t_ex_etax_transfer A
					WHERE   comp_seq = #compSeq#
					AND     (
					                ( transfer_seq = #empSeq# )
					                OR ( receive_seq = #empSeq# )
					        )
					AND     (
					                /* 검색조건 - 이관일자 */
					                ( IFNULL(#dateSearchType#, '') = '0' AND ( DATE_FORMAT(create_date, '%Y%m%d') BETWEEN #searchFromDate# AND #searchToDate# ) )
					                /* 검색조건 - 작성일자 */
					                OR ( IFNULL(#dateSearchType#, '') = '1' AND ( DATE_FORMAT(iss_dt, '%Y%m%d') BETWEEN #searchFromDate# AND #searchToDate# ) )
					        )
					AND     (
					                /* 검색조건 - 전체 ( 대상자, 공급자, 등록번호, 승인번호 ) */
					                ( IFNULL(#txtSearchType#, '') = '0' AND (
					                                                                ( receive_name LIKE CONCAT('%', IFNULL(#searchStr#, ''), '%') )
					                                                                OR ( partner_name LIKE CONCAT('%', IFNULL(#searchStr#, ''), '%') )
					                                                                OR ( partner_no LIKE CONCAT('%', IFNULL(#searchStr#, ''), '%') )
					                                                                OR ( iss_no LIKE CONCAT('%', IFNULL(#searchStr#, ''), '%') )
					                                                        )
									)
					                /* 검색조건 - 전체 ( 대상자 ) */
					                OR ( IFNULL(#txtSearchType#, '') = '1' AND ( ( IFNULL(A.transfer_name, '') LIKE CONCAT('%', IFNULL(#searchStr#, ''), '%') ) OR ( IFNULL(A.receive_name, '') LIKE CONCAT('%', IFNULL(#searchStr#, ''), '%') ) ))
					                /* 검색조건 - 전체 ( 공급자 ) */
					                OR ( IFNULL(#txtSearchType#, '') = '2' AND ( IFNULL(partner_name, '') LIKE CONCAT('%', IFNULL('', ''), '%') ) )
					                /* 검색조건 - 전체 ( 등록번호 ) */
					                OR ( IFNULL(#txtSearchType#, '') = '3' AND ( IFNULL(partner_no, '') LIKE CONCAT('%', IFNULL('', ''), '%') ))
					                /* 검색조건 - 전체 ( 승인번호 ) */
					                OR ( IFNULL(#txtSearchType#, '') = '4' AND ( IFNULL(iss_no, '') LIKE CONCAT('%', IFNULL('', ''), '%') ))
					        )
				) A
		WHERE	(
					( IFNULL(#searchSendYN#, '') = '' AND IFNULL(A.sendYn, '') = IFNULL(A.sendYn, '') )
					OR ( IFNULL(#searchSendYN#, '') != '' AND IFNULL(A.sendYn, '') = IFNULL(#searchSendYN#, '') )
				)
		AND		(
					( IFNULL(#searchUseYN#, '') = '' AND IFNULL(A.sendYn, '') = IFNULL(A.sendYn, '') )
					OR ( IFNULL(#searchUseYN#, '') != '' AND IFNULL(A.useYn, '') = IFNULL(#searchUseYN#, '') )
				)
	]]></select>
	
	
	<update id="NpAdminReportA.GetETaxTransHistoryListAdminGroupConcatSet" parameterClass="java.util.HashMap">
		/* expend/np/user/NpUserBudgetSQL.xml - NpUserReportA.GetETaxTransHistoryListAdminGroupConcatSet */
		/* 세금계산서 승인내역 히스토리 사이즈 조정 */
	<![CDATA[ SET @@group_concat_max_len = 1000000; ]]>
	</update> 

	<select id="NpUserReportA.GetETaxTransHistoryListAdmin" parameterClass="java.util.HashMap" resultClass="java.util.HashMap"><![CDATA[
		/* expend/np/user/NpUserBudgetSQL.xml - NpUserReportA.GetETaxTransHistoryListAdmin */
		/* 매입전자세금계산서 이관내역 조회 - 관리자 모드 */
		SELECT	*
		FROM	(
					SELECT  DATE_FORMAT(create_date, '%Y-%m-%d') AS transDate
					        , receive_name AS receiveName
					        , DATE_FORMAT(iss_dt, '%Y-%m-%d') AS issDate
					        , '0'	AS receiveType
					        , transfer_name	AS transferName
					        , partner_name AS partnerName
					        , partner_no AS partnerNo
					        , iss_no AS issNo
					        , amt AS amt
					        , IFNULL(( SELECT send_yn FROM $DB_NEOS$t_ex_etax_aq_tmp WHERE iss_no = A.iss_no AND iss_dt = A.iss_dt AND partner_no = A.partner_no AND comp_seq = A.comp_seq LIMIT 1 ), 'N') AS sendYn
					        , IFNULL(( SELECT use_yn FROM $DB_NEOS$t_ex_etax_aq_tmp WHERE iss_no = A.iss_no AND iss_dt = A.iss_dt AND partner_no = A.partner_no AND comp_seq = A.comp_seq LIMIT 1 ), 'Y') AS useYn
					        , seq AS eTaxTransSeq
					FROM    $DB_NEOS$t_ex_etax_transfer A
					WHERE   comp_seq = #compSeq#
					AND     (
					                /* 검색조건 - 이관일자 */
					                ( IFNULL(#dateSearchType#, '') = '0' AND ( DATE_FORMAT(create_date, '%Y%m%d') BETWEEN #searchFromDate# AND #searchToDate# ) )
					                /* 검색조건 - 작성일자 */
					                OR ( IFNULL(#dateSearchType#, '') = '1' AND ( DATE_FORMAT(iss_dt, '%Y%m%d') BETWEEN #searchFromDate# AND #searchToDate# ) )
					        )
					AND     (
					                /* 검색조건 - 전체 ( 대상자, 공급자, 등록번호, 승인번호 ) */
					                ( IFNULL(#txtSearchType#, '') = '0' AND (
					                                                                ( receive_name LIKE CONCAT('%', IFNULL(#searchStr#, ''), '%') )
					                                                                OR ( partner_name LIKE CONCAT('%', IFNULL(#searchStr#, ''), '%') )
					                                                                OR ( partner_no LIKE CONCAT('%', IFNULL(#searchStr#, ''), '%') )
					                                                                OR ( iss_no LIKE CONCAT('%', IFNULL(#searchStr#, ''), '%') )
					                                                        )
									)
					                /* 검색조건 - 전체 ( 대상자 ) */
					                OR ( IFNULL(#txtSearchType#, '') = '1' AND ( ( IFNULL(A.transfer_name, '') LIKE CONCAT('%', IFNULL(#searchStr#, ''), '%') ) OR ( IFNULL(A.receive_name, '') LIKE CONCAT('%', IFNULL(#searchStr#, ''), '%') ) ))
					                /* 검색조건 - 전체 ( 공급자 ) */
					                OR ( IFNULL(#txtSearchType#, '') = '2' AND ( IFNULL(partner_name, '') LIKE CONCAT('%', IFNULL('', ''), '%') ) )
					                /* 검색조건 - 전체 ( 등록번호 ) */
					                OR ( IFNULL(#txtSearchType#, '') = '3' AND ( IFNULL(partner_no, '') LIKE CONCAT('%', IFNULL('', ''), '%') ))
					                /* 검색조건 - 전체 ( 승인번호 ) */
					                OR ( IFNULL(#txtSearchType#, '') = '4' AND ( IFNULL(iss_no, '') LIKE CONCAT('%', IFNULL('', ''), '%') ))
					        )
				) A
		WHERE	(
					( IFNULL(#searchSendYN#, '') = '' AND IFNULL(A.sendYn, '') = IFNULL(A.sendYn, '') )
					OR ( IFNULL(#searchSendYN#, '') != '' AND IFNULL(A.sendYn, '') = IFNULL(#searchSendYN#, '') )
				)
		AND		(
					( IFNULL(#searchUseYN#, '') = '' AND IFNULL(A.sendYn, '') = IFNULL(A.sendYn, '') )
					OR ( IFNULL(#searchUseYN#, '') != '' AND IFNULL(A.useYn, '') = IFNULL(#searchUseYN#, '') )
				)
	]]></select>
	
	<select id="NpAdminReportA.selectG20CardSendList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* mariadb/bizboxAlpha/expend/np/admin/NpAdminReportSql - NpAdminReportA.selectG20CardSendList */
		/* [비영리] 지출결의 전송 - > 법인카드 승인내역 추가 연동을 위한 카드 사용내역 조회 */
		SELECT	
			trade.res_doc_seq	AS resDocSeq
			, trade.res_seq		AS resSeq
			, trade.budget_seq	AS budgetSeq
			, trade.trade_seq	AS tradeSeq
			, doc.erp_div_seq	AS erpDivSeq
			, doc.erp_dept_seq	AS erpDeptSeq
			, doc.erp_emp_seq	AS erpEmpSeq
			, trade.erp_gisu_date	AS erpGisuDate
			, trade.erp_gisu_sq	AS erpGisuSq
			, card.iss_dt		AS issDate
			, card.iss_sq		AS issSq
		FROM	$DB_NEOS$t_exnp_restrade trade
		INNER JOIN	$DB_NEOS$t_ex_card_aq_tmp card
		 ON	trade.interface_seq = card.sync_id
		 AND	IFNULL(card.iss_dt, '') != ''
		 AND	IFNULL(card.iss_sq, '') != ''
		INNER JOIN	$DB_NEOS$t_exnp_resdoc	doc
		 ON	doc.res_doc_seq = trade.res_doc_seq
		WHERE	interface_type = 'card' 
		<isNotEmpty property="resDocSeqs">
		 AND	trade.res_doc_seq IN $resDocSeqs$;
		</isNotEmpty>
		<isNotEmpty property="resDocSeq"> 
		 AND	trade.res_doc_seq = #resDocSeq#
		</isNotEmpty>
	</select>
	
	<!-- <select id="NpUserReportA.selectYesilERPiUConsBalanceAmt" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
    /* expend/np/user/NpUserBudgetSQL.xml - NpUserReportA.selectYesilERPiUConsBalanceAmt */
                /* ERPiU 예실대비 현황 품의 잔액 조회[메인 그리드] */
                SELECT
                        erp_bgacct_seq                          AS erpBgacctSeq
                        , SUM(budget_amt)                       AS consAmt
                        , SUM(res_budget_amt)           AS resAmt
                        , SUM(budget_amt) - SUM(res_budget_amt) AS confferBalanceAmt
                FROM    (
                        SELECT
                                consB.erp_bgacct_seq
                                , consB.erp_bgacct_name
                                , consB.budget_amt
                                , IFNULL(res_budget_amt,'0') AS res_budget_amt
                        FROM    $DB_NEOS$t_exnp_consbudget consB
                        INNER JOIN      (
                                SELECT  d.*
                                FROM    $DB_NEOS$t_exnp_consdoc d
                                INNER JOIN $DB_NEOS$t_exnp_conshead h
                                 ON     d.cons_doc_seq = h.cons_doc_seq
                                 AND    h.cons_date BETWEEN #gisuFromDate# AND #gisuToDate#
                                WHERE   doc_seq IS NOT NULL
                                 AND    IFNULL(doc_status, '008') IN ( '001', '002', '003', '004', '008', '009','20', '30', '90' )
                                 AND    comp_seq = #compSeq#
                                 AND    d.conffer_return_yn != 'Y'
                         )      consD
                         ON     consB.cons_doc_seq = consD.cons_doc_seq
                         LEFT JOIN      (
                                 SELECT
                                        b.conffer_doc_seq
                                        , SUM(IFNULL(( CASE ctl_fg_code WHEN '0' THEN ( CASE IFNULL(budget_std_amt, 0) WHEN '0' THEN budget_amt ELSE budget_std_amt END ) ELSE budget_amt END ), 0)) AS res_budget_amt
                                FROM    $DB_NEOS$t_exnp_resbudget b
                                INNER JOIN      (
                                        SELECT  *
                                        FROM    $DB_NEOS$t_exnp_resdoc
                                        WHERE   doc_seq IS NOT NULL
                                         AND    IFNULL(doc_status, '008') IN ( '001', '002', '003', '004', '008', '009','20', '30', '90' )
                                         AND    comp_seq = #compSeq#
                                         AND    conffer_doc_seq IS NOT NULL
                                 )      d
                                 ON     b.res_doc_seq = d.res_doc_seq
                                 GROUP BY b.conffer_doc_seq
                         )      resB
                         ON     consB.cons_doc_seq = resB.conffer_doc_seq
			            WHERE	consB.erp_budget_seq = #erpBudgetSeq#
			            AND	consB.erp_bizplan_seq = #erpBizplanSeq#
                )       tbl
                GROUP BY erp_bgacct_seq
	</select> -->
	
	<select id="NpUserReportA.selectYesilERPiUConsBalanceAmt" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
    /* expend/np/user/NpUserBudgetSQL.xml - NpUserReportA.selectYesilERPiUConsBalanceAmt */
                /* ERPiU 예실대비 현황 품의 잔액 조회[메인 그리드] */
               SELECT	
			 		tbl.erp_bgacct_seq        AS erpBgacctSeq
                    , sum(tbl.budget_amt)        AS consAmt
                    , sum(tbl.res_budget_amt)    AS resAmt
                    , sum(( CASE tbl.conffer_return_yn WHEN 'Y' THEN '0' ELSE tbl.balance_amt END )) AS confferBalanceAmt
		FROM	(
			SELECT	
				consD.cons_doc_seq
				, consD.doc_seq
				, consD.doc_status
				, consD.doc_no
				, consD.comp_name
				, consD.dept_name
				, consD.emp_name
				, consB.erp_bgacct_seq
				, consB.erp_bgacct_name
				, consB.budget_amt
				, IFNULL(resB.budget_amt, 0) AS res_budget_amt
				, CASE conffer_budget_return_yn WHEN 'Y' THEN '0' ELSE consB.budget_amt - IFNULL(resB.budget_amt, 0) END AS balance_amt
				, consD.conffer_return_yn
			FROM	$DB_NEOS$t_exnp_consbudget consB
			INNER JOIN	(
				SELECT 	d.* , h.cons_seq
				FROM	$DB_NEOS$t_exnp_consdoc d
				INNER JOIN $DB_NEOS$t_exnp_conshead h
				 ON	d.cons_doc_seq = h.cons_doc_seq
				 AND	h.cons_date BETWEEN #gisuFromDate# AND #gisuToDate#
				WHERE	doc_seq IS NOT NULL
				 AND	IFNULL(doc_status, '008') IN ( '001', '002', '003', '004', '008', '009','20', '30', '90' )
				 AND	comp_seq = #compSeq#
			 )	consD
			 ON	consB.cons_doc_seq = consD.cons_doc_seq
			 AND	consB.cons_seq = consD.cons_seq
			 LEFT JOIN	(
				 SELECT	
					b.conffer_doc_seq
					, b.conffer_budget_seq
					, SUM(IFNULL(( CASE ctl_fg_code WHEN '0' THEN ( CASE IFNULL(budget_std_amt, 0) WHEN '0' THEN budget_amt ELSE budget_std_amt END ) ELSE budget_amt END ), 0)) AS budget_amt
				FROM	$DB_NEOS$t_exnp_resbudget b
				INNER JOIN	(
					SELECT 	* 
					FROM	$DB_NEOS$t_exnp_resdoc 
					WHERE	doc_seq IS NOT NULL
					 AND	IFNULL(doc_status, '008') IN ( '001', '002', '003', '004', '008', '009','20', '30', '90' )
					 AND	comp_seq = #compSeq#
					 AND	conffer_doc_seq IS NOT NULL
				 )	d
				 ON	b.res_doc_seq = d.res_doc_seq
				 GROUP BY b.conffer_budget_seq
			 )	resB
			 ON	consB.cons_doc_seq = resB.conffer_doc_seq
			 AND	consB.budget_seq = resB.conffer_budget_seq
			 WHERE	consB.erp_budget_seq = #erpBudgetSeq#
			  AND	consB.erp_bizplan_seq = #erpBizplanSeq#
		)	tbl
		LEFT JOIN	$DB_NEOS$a_recordinfo ea
		 ON	tbl.doc_seq = ea.c_dikeycode
		LEFT JOIN	$DB_NEOS$a_draftinfo dr
		 ON	tbl.doc_seq = dr.c_dikeycode
		LEFT JOIN	$DB_NEOS$teag_appdoc eap
		 ON	tbl.doc_seq = eap.doc_id
		WHERE	(
			tbl.doc_no 			LIKE CONCAT('%', '$serchStr$', '%')
			OR tbl.dept_name 		LIKE CONCAT('%', '$serchStr$', '%')
			OR tbl.emp_name 		LIKE CONCAT('%', '$serchStr$', '%')
			OR IFNULL(ea.c_riaftertitle, eap.doc_title) LIKE CONCAT('%', '$serchStr$', '%')
		)
		group by erp_bgacct_seq
		
	</select>
	
	<select id="NpUserReportA.selectYesilERPiUResAmt" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* expend/np/user/NpUserBudgetSQL.xml - NpUserReportA.selectYesilERPiUResAmt */
		/* ERPiU 예실대비 현황 미전송 결의 금액 조회 */
		SELECT	
			erp_bgacct_seq	AS erpBgacctSeq
			, SUM(res_budget_amt)	AS resAmt
		FROM	(
			SELECT	
				resB.erp_bgacct_seq
				, IFNULL(( CASE resB.ctl_fg_code WHEN '0' THEN ( CASE IFNULL(resB.budget_std_amt, 0) WHEN '0' THEN resB.budget_amt ELSE resB.budget_std_amt END ) ELSE resB.budget_amt END ), 0) AS res_budget_amt
			FROM	$DB_NEOS$t_exnp_resbudget resB
			INNER JOIN	(
				SELECT
					h.res_seq 	
					, d.* 
				FROM	$DB_NEOS$t_exnp_resdoc d
				INNER JOIN $DB_NEOS$t_exnp_reshead h
				 ON	d.res_doc_seq = h.res_doc_seq
				 AND	h.res_date BETWEEN #gisuFromDate# AND #gisuToDate#
				WHERE	doc_seq IS NOT NULL
				 AND	IFNULL(doc_status, '008') IN ( '001', '002', '003', '004', '008', '009','20', '30', '90' )
				 AND	comp_seq = #compSeq#
				 AND	erp_send_yn = 'N'
			 )	resD
			 ON		resB.res_doc_seq = resD.res_doc_seq
			  AND	resB.res_seq	 = resD.res_seq
			WHERE	resB.erp_budget_seq = #erpBudgetSeq#
			 AND	resB.erp_bizplan_seq = #erpBizplanSeq#
		)	tbl
		GROUP BY erp_bgacct_seq
		
	</select>
</sqlMap>
