<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<!-- BizboxA mariaDB 회계(비영리) 카드 -->
<sqlMap namespace="NpAdminCard">

	<select id="NpAdminCard.GetNotUseList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[/* mariadb : /egovframework/sqlmap/mariadb/BizboxAlpha/expend/np/admin/NpAdminCardSQL.xml - NpAdminCard.GetNotUseList */]]>
		<![CDATA[/* 카드 내역 미사용 처리 목록 조회 */]]>

		<![CDATA[
			/* ## SELECT ## */
			SELECT  IFNULL(sync_id, 0) AS syncId
		]]>
		
		<![CDATA[
			/* ## FROM ## */
			FROM    $DB_NEOS$t_ex_card_transfer
		]]>
		
		<![CDATA[
			/* ## WHERE ## */
			WHERE   auth_date BETWEEN #cardAuthDateFrom# AND #cardAuthDateTo#
			AND     comp_seq = #compSeq#	
			AND     use_yn = 'N'
			AND     sync_id IS NOT NULL
		]]>
		
		<![CDATA[
			/* ## GROUP ## */
			GROUP   BY sync_id
		]]>
	</select>

	<select id="NpAdminCard.GetCardList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[/* mariadb : /egovframework/sqlmap/mariadb/BizboxAlpha/expend/np/admin/NpAdminCardSQL.xml - NpAdminCard.GetCardList */]]>
		<![CDATA[/* 카드 내역 현황 조회 ( 관리자 ) */]]>
		
		<![CDATA[
			/* ## SELECT - 01 ## */
			SELECT	*
		]]>
		
		<![CDATA[
			/* ## FROM - 01 ## */
			FROM	(
		]]>
		
					<![CDATA[
						/* ## SELECT - 02 ## */
						SELECT  sync_id AS syncId
						        , CASE
						                WHEN IFNULL(A.georae_stat, '') IN ( 'Y', '0' ) THEN '취소'
						                WHEN IFNULL(A.georae_stat, '') IN ( 'N', '1' ) THEN '승인'
						                ELSE '-'
						        END AS georaeStatName /* 구분 명칭 */
						        , B.card_code
						        , A.georae_coll
						        , A.send_yn
						        , A.georae_stat AS georaeStat /* 구분 코드 */
						        , A.auth_date AS authDate /* 승인일자 */
						        , A.auth_time AS authTime /* 승인시간 */
						        , A.auth_num AS authNum /* 승인번호 */
						        , A.merc_name AS partnerName /* 거래처 명칭 */
						        , A.merc_saup_no AS partnerNo /* 거래처 등록번호 */
						        , IFNULL(B.card_name, '[미등록카드]') AS cardName /* 카드 명칭 */
						        , A.card_num AS cardNum /* 카드 번호 */
						        , A.request_amount AS reqAmt /* 금액 */
						        , A.amt_md_amount AS stdAmt /* 공급가액 */
						        , A.vat_md_amount AS vatAmt /* 부가세 */
						        , A.ser_amount AS serAmt /* 서비스 금액 */
						        , res.doc_no	AS docNo
						        , IFNULL(ea.c_dititle, eap.doc_title) AS docTitle
						        , IFNULL(ea.c_tikeycode, eap.form_id) AS formId
						        , res.doc_status	AS docStatus
						        , res.emp_name		AS docEmpName
						        , res.doc_seq		AS docSeq						        
						        , CASE
						                WHEN IFNULL(MAX(A.send_yn), 'N') = 'N' THEN  '미결의'
						                WHEN IFNULL(MAX(A.send_yn), 'N') = 'Y' THEN CONCAT('결의 (', IFNULL(( SELECT emp_name FROM $DB_NEOS$t_co_emp_multi WHERE lang_code = 'kr' AND emp_seq = A.edited_by ), ''), ')')
						                ELSE '상태값 판단 불가'
						        END AS approvalStatName /* 결의상태 명칭 */
						        , A.send_yn AS approvalStat /* 결의상태 코드 */
						        , IFNULL(B.public_yn, 'N') AS publicYn /* 카드 공개범위 포함 여부 */
			        ]]>

		<isEmpty property="notUseSyncIds"><![CDATA[
					        	/* ## SELECT - 02 - isEmpty - notUseSyncIds ## */
					        	, 'Y' AS notUseYn /* 미사용 여부 */
					        ]]></isEmpty>
		<isNotEmpty property="notUseSyncIds"><![CDATA[
					        	/* ## SELECT - 02 - isNotEmpty - notUseSyncIds ## */			        
						        , CASE
						                WHEN sync_id IN ( $notUseSyncIds$ ) THEN 'N'
						                ELSE 'Y'
						        END notUseYn /* 미사용 여부 */			        
					        ]]></isNotEmpty>
					        
					<![CDATA[
						/* ## FROM - 02 ## */
						FROM    $DB_NEOS$t_ex_card_aq_tmp A
		                        INNER JOIN (
		                                SELECT  A.card_code
		                                        , A.card_num
		                                        , A.card_num_con
		                                        , A.card_name
		                                        , 'Y' AS public_yn
		                                FROM    (
		                                                SELECT  comp_seq
		                                                        , card_code
		                                                        , card_num
		                                                        , REPLACE(card_num, '-', '') AS card_num_con
		                                                        , card_name
		                                                FROM    $DB_NEOS$t_ex_card
		                                                WHERE   comp_seq = #compSeq#
		                                        ) A
                                        GROUP   BY A.card_code, A.card_num, A.card_num_con, A.card_name
		                        ) B ON A.card_num = B.card_num_con
						LEFT JOIN	$DB_NEOS$t_exnp_resdoc	res
						ON	A.if_m_id = res_doc_seq
						LEFT JOIN	(
							SELECT	c_dikeycode 
								, c_dititle
								, c_tikeycode
							FROM	$DB_NEOS$a_docinfo
							GROUP BY c_dikeycode
						)	ea
						ON	res.doc_seq = ea.c_dikeycode
						LEFT JOIN	(
							SELECT	doc_id
								, doc_title
								, form_id
							FROM	$DB_NEOS$teag_appdoc
						)	eap
						ON	res.doc_seq = eap.doc_id		                        
					]]>
					
					<![CDATA[
						/* ## WHERE - 02 ## */
						        /* 검색조건 : 승인일자 ( from ~ to ) */
						WHERE   A.auth_date BETWEEN IFNULL('$cardAuthDateFrom$', '') AND IFNULL('$cardAuthDateTo$', '')
						        /* 검색조건 : 사용처 */
						AND     A.merc_name LIKE CONCAT('%', IFNULL('$searchPartnerName$', ''), '%')
						        /* 검색조건 : 구분 ( 전체 : "" / 승인 : "Y" / 취소 : "N" ) */
						AND     (
						                ( IFNULL('$searchGeoraeStat$', '') = '' AND IFNULL(A.georae_stat, '') = IFNULL(A.georae_stat, '') )
						                OR ( IFNULL('$searchGeoraeStat$', '') = 'Y' AND IFNULL(A.georae_stat, '') IN ( 'Y', '1' ) )
						                OR ( IFNULL('$searchGeoraeStat$', '') = 'N' AND IFNULL(A.georae_stat, '') IN ( 'N', '0' ) )
						        )
						        /* 검색조건 : 승인번호 */
						AND     A.auth_num LIKE CONCAT('%', IFNULL('$searchAuthNum$', ''), '%')
						        /* 검색조건 : 사업자번호 */
						AND     IFNULL(A.merc_saup_no, '') LIKE CONCAT('%', REPLACE(IFNULL('$searchPartnerNo$', ''), '-', ''), '%')
						        /* 검색조건 : 결의자 */
						AND     IFNULL(res.emp_name, '') LIKE '%$searchApprovalEmpName$%'
						GROUP BY georae_coll
					]]>
		
		<![CDATA[
			/* ## FROM - 01 ## */
					) CARDLIST
		]]>
		
		<![CDATA[
			/* ## WHERE - 01 ## */
	        WHERE   (
	                        ( IFNULL('$searchCardInfo$', '') = '' AND CARDLIST.cardNum = CARDLIST.cardNum )
	                        OR ( IFNULL('$searchCardInfo$', '') != '' and IFNULL('$searchCardInfo$', '') like concat('%|', CARDLIST.card_code, '|%') )
	                )
	                /* 검색조건 : 결의상태 ( 전체 : "" / 결의 : "Y" / 미결의 : "N" ) */
			AND     (
						( IFNULL('$searchSendYn$', '') = '' AND IFNULL(send_yn, 'N') = IFNULL(send_yn, 'N') )
						OR ( IFNULL('$searchSendYn$', '') = 'Y' AND IFNULL(send_yn, 'N') = 'Y' )
						OR ( IFNULL('$searchSendYn$', '') = 'N' AND IFNULL(send_yn, 'N') = 'N' AND IFNULL(notUseYn, 'Y') = 'Y')
						OR ( IFNULL('$searchSendYn$', '') = 'UN' AND IFNULL(notUseYn, 'Y') = 'N' )
					)
			ORDER   BY authDate DESC, authTime DESC, cardNum
		]]>
	</select>

	<select id="NpAdminCard.GetTransItem" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[/* mariadb : /egovframework/sqlmap/mariadb/BizboxAlpha/expend/np/admin/NpAdminCardSQL.xml - NpAdminCard.GetTransItem */]]>
		<![CDATA[/* 카드 이관 항목 조회 */]]>
		
		<![CDATA[
			/* ## SELECT ## */
			SELECT  seq AS seq
			        , comp_seq AS compSeq
			        , sync_id AS syncId
			        , card_num AS cardNum
			        , auth_num AS authNum
			        , auth_date AS authDate
			        , auth_time AS authTime
			        , partner_no AS partnerNo
			        , partner_name AS partnerName
			        , amt AS reqAmt
			        , transfer_seq AS transSeq
			        , transfer_name AS transName
			        , receive_seq AS receiveSeq
			        , receive_name AS receiveName
			        , use_yn AS useYn
			        , supper_key AS supperKey
		]]>
		
		<![CDATA[
			/* ## FROM ## */
			FROM    $DB_NEOS$t_ex_card_transfer
		]]>
		
		<![CDATA[
			/* ## WHERE ## */
			WHERE   comp_seq = #compSeq#
			AND     sync_id = #syncId#
		]]>
		
		<![CDATA[
			/* ## OPTION ## */
			LIMIT	1
		]]>
	</select>

	<insert id="NpAdminCard.SetTransInsertItem" parameterClass="java.util.HashMap">
		<![CDATA[/* mariadb : /egovframework/sqlmap/mariadb/BizboxAlpha/expend/np/admin/NpAdminCardSQL.xml - NpAdminCard.SetTransInsertItem */]]>
		<![CDATA[/* 카드 이관 항목 생성 */]]>
		
		<![CDATA[
			/* ## INSERT ## */
			INSERT INTO $DB_NEOS$t_ex_card_transfer ( comp_seq, sync_id, card_num, auth_num, auth_date, auth_time, partner_no, partner_name, amt, transfer_seq, transfer_name, receive_seq, receive_name, use_yn, supper_key, create_date )
		]]>
		
		<![CDATA[
			/* ## VALUES ## */
			VALUES ( #compSeq#, #syncId#, #cardNum#, #authNum#, #authDate#, #authTime#, #partnerNo#, #partnerName#, #reqAmt#, #empSeq#, #empName#, #receiveEmpSeq#, #receiveEmpName#, 'Y', #receiveEmpSuperKey#, NOW() )
		]]>

		<selectKey keyProperty="transSeq" resultClass="int">
			<![CDATA[
				/* ## SELECT ## */
				SELECT LAST_INSERT_ID();
			]]>
		</selectKey>
	</insert>

	<update id="NpAdminCard.SetTransUpdateItem" parameterClass="java.util.HashMap">
		<![CDATA[/* mariadb : /egovframework/sqlmap/mariadb/BizboxAlpha/expend/np/admin/NpAdminCardSQL.xml - NpAdminCard.SetTransUpdateItem */]]>
		<![CDATA[/* 카드 이관 항목 수정 */]]>
		
		<![CDATA[
			/* ## UPDATE ## */
			UPDATE  $DB_NEOS$t_ex_card_transfer
		]]>
		
		<![CDATA[
			/* ## SET ## */
			SET     transfer_seq = #empSeq#
			        , transfer_name = #empName#
			        , receive_seq = #receiveEmpSeq#
			        , receive_name = #receiveEmpName#
			        , supper_key = #receiveEmpSuperKey#
			        , create_date = NOW()
		]]>
		
		<![CDATA[
			/* ## WHERE ## */
			WHERE   comp_seq = #compSeq#
			AND     sync_id = #syncId#
		]]>
	</update>

	<update id="NpAdminCard.SetUseYNUpdateItem" parameterClass="java.util.HashMap">
		<![CDATA[/* mariadb : /egovframework/sqlmap/mariadb/BizboxAlpha/expend/np/admin/NpAdminCardSQL.xml - NpAdminCard.SetUseYNUpdateItem */]]>
		<![CDATA[/* 카드 사용여부 수정 */]]>

		<![CDATA[
			/* ## UPDATE ## */
			UPDATE  $DB_NEOS$t_ex_card_transfer
		]]>
		
		<![CDATA[
			/* ## SET ## */
			SET     use_yn = #useYN#
					, use_yn_emp_seq = #empSeq#
			        , create_date = NOW()
		]]>
		
		<![CDATA[
			/* ## WHERE ## */
			WHERE   comp_seq = #compSeq#
			AND     sync_id = #syncId#
		]]>
	</update>

	<insert id="NpAdminCard.SetUseYNInsertItem" parameterClass="java.util.HashMap">
		<![CDATA[/* mariadb : /egovframework/sqlmap/mariadb/BizboxAlpha/expend/np/admin/NpAdminCardSQL.xml - NpAdminCard.SetUseYNInsertItem */]]>
		<![CDATA[/* 카드 이관 항목 생성 */]]>
		
		<![CDATA[
			/* ## INSERT ## */
			INSERT INTO $DB_NEOS$t_ex_card_transfer ( comp_seq, sync_id, card_num, auth_num, auth_date, auth_time, partner_no, partner_name, amt, use_yn, use_yn_emp_seq, create_date, transfer_seq, receive_seq )
		]]>
		
		<![CDATA[
			/* ## VALUES ## */
			VALUES ( #compSeq#, #syncId#, #cardNum#, #authNum#, #authDate#, #authTime#, #partnerNo#, #partnerName#, #reqAmt#, #useYN#, #empSeq#, NOW(), '', ''  )
		]]>

		<selectKey keyProperty="transSeq" resultClass="int">
			<![CDATA[
				/* ## SELECT ## */
				SELECT LAST_INSERT_ID();
			]]>
		</selectKey>
	</insert>
	
	<select id="NpAdminCard.GetCardList2FullList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* mariadb : /egovframework/sqlmap/mariadb/BizboxAlpha/expend/np/admin/NpAdminCardSQL.xml - NpAdminCard.GetCardList2FullList */
		/* 법인카드 승인내역 전체 현황 조회 */
		SELECT
			card.sync_id				AS syncId
			, CASE card.georae_stat 
				WHEN '1' THEN 'N' 
				WHEN '0' THEN 'Y'
				ELSE card.georae_stat 
			 END AS georaeStat /* 구분 ( 승인 / 취소 ) */
			, ( CASE
				WHEN IFNULL(georae_stat, '') = 'Y' OR IFNULL(georae_stat, '') = 'B' OR IFNULL(georae_stat, '') = '0' 
				THEN '취소'
				ELSE '승인'
			END )	AS georaeStatName
			, card.georae_coll	AS georaeColl
			, card.auth_date	AS authDate /* 승인일시 */
			, card.auth_time	AS authTime
			, card.auth_num		AS authNum /* 승인번호 */
			, card.merc_name	AS partnerName /* 사용처 */
			, card.merc_saup_no	AS partnerNo /* 사업자번호 */
			, c.card_name		AS cardName /* 카드명 */
			, card.card_num		AS cardNum /* 카드번호 */
			, card.request_amount	AS reqAmt /* 금액 */
			, card.amt_md_amount	AS stdAmt /* 공급가액 */
			, card.vat_md_amount	AS vatAmt /* 부가세 */
			, card.ser_amount	AS serAmount /* 서비스 금액 */
			, '' 			AS cardPublicYn /* 공개범위 여부 */
			, card.sync_id 		AS syncId /* 카드 내역 고유 아이디 */
			, c.card_code		AS cardCode /* 카드 코드 */
			, IFNULL(c.paytr_seq, '')			AS payTrSeq
			, IFNULL(c.paytr_name, '')			AS payTrName
			, IFNULL(send.form_seq, '')			AS formSeq
			
			, IFNULL(send.doc_seq, '')		AS docSeq
			, IFNULL(send.doc_emp_name, '') 	AS docEmpName
			, IFNULL(send.doc_emp_name, '') 	AS sendEmpName
			, IFNULL(send.doc_no, '') 		AS docNo
			, IFNULL(send.doc_title, '')		AS docTitle
			, IFNULL(send.doc_status, '')		AS docStatus
			, IFNULL(send.use_code, '')		AS sendYN
			, IFNULL(send.use_code, '')		AS sendYn
			, IFNULL(send.use_code, '')		AS send_yn
			, IFNULL(send.use_code, '')		AS approYN
			, IFNULL(send.use_code, '')		AS approYn
			, IFNULL(send.use_code, '')		AS appro_yn
			, IFNULL(notUse.not_use_emp_name, '')	AS notUseEmpName
			, IFNULL(notUse.use_code, 'Y')		AS useYN
			, IFNULL(notUse.use_code, 'Y')		AS useYn
			, IFNULL(notUse.use_code, 'Y')		AS use_yn
			, IFNULL(receive.transfer_name, '')	AS transferName
			, IFNULL(receive.use_code, '')		AS receiveYN
			, IFNULL(receive.use_code, '')		AS receiveYn
			, IFNULL(receive.use_code, '')		AS receive_yn
			
		FROM    $DB_NEOS$t_ex_card_aq_tmp card 
		INNER	JOIN $DB_NEOS$t_ex_card c
		ON	card.card_num = replace(c.card_num,'-','')
		AND	comp_seq = #compSeq#
		LEFT	JOIN (
			SELECT	DISTINCT
				'Y'	AS use_code
				, sync_id
				, IFNULL(d.doc_seq, '')	AS doc_seq
				, IFNULL((SELECT emp_name FROM $DB_NEOS$t_co_emp_multi WHERE lang_code = 'kr' AND emp_seq = d.emp_seq), '') AS doc_emp_name
				, d.doc_no
				, IFNULL(ar.c_riaftertitle, ta.doc_title) AS doc_title
				, doc_status
				, IFNULL(ta.form_id, '') form_seq
			FROM 	$DB_NEOS$t_ex_card_aq_tmp	c
			INNER JOIN	$DB_NEOS$t_exnp_restrade t
			ON	c.sync_id = t.interface_seq
			INNER JOIN	$DB_NEOS$t_exnp_resdoc	d
			ON	d.res_doc_seq = t.res_doc_seq
			LEFT JOIN $DB_NEOS$a_recordinfo ar
			ON	d.doc_seq = ar.c_dikeycode
			LEFT JOIN $DB_NEOS$teag_appdoc ta
			ON	d.doc_seq = ta.doc_id	
			WHERE	d.doc_seq IS NOT NULL
			 AND	IFNULL(t.interface_type, '') = 'card'
			 AND	IFNULL(d.doc_status, '008') IN ( '001', '002', '003', '004', '008', '009','20', '30', '90' )
			 AND	IFNULL(del_yn, 'N')	= 'N'
		)	send
		ON	card.sync_id = send.sync_id		
		LEFT JOIN	(
			SELECT	
				'Y'	AS use_code
				, sync_id	AS sync_id
				, transfer_name	AS transfer_name
			FROM	$DB_NEOS$t_ex_card_transfer  t
			WHERE	IFNULL(use_yn, 'Y')  = 'Y'
			 AND 	IFNULL(receive_seq, '') != ''
		)	receive
		ON	card.sync_id = receive.sync_id		
		LEFT JOIN	(
			SELECT	
				'N'		AS use_code
				, sync_id	AS sync_id
				, IFNULL((SELECT emp_name FROM $DB_NEOS$t_co_emp_multi WHERE lang_code = 'kr' AND emp_seq = aq.use_yn_emp_seq), '')	AS not_use_emp_name
			FROM	$DB_NEOS$t_ex_card_transfer	aq
			 WHERE	IFNULL(use_yn, 'N')  = 'N'
		)	notUse
		ON	card.sync_id = notUse.sync_id			
		WHERE   card.auth_date BETWEEN #cardAuthDateFrom# AND #cardAuthDateTo#
		AND	IFNULL(card.maigrationYN,'N') != 'Y'
		<isNotEmpty property="searchCardInfo">
		AND	c.card_code IN ( $searchCardInfo$ )
		</isNotEmpty>
		GROUP BY card.card_num, card.auth_date, card.auth_num, card.auth_time, card.georae_stat, card.georae_coll ,pk1 ,pk2 ,pk3 ,pk4 ,pk5 ,pk6 ,pk7 ,ebank_key
		ORDER BY auth_date DESC, auth_time DESC 
	</select>
	
	<update id="NpAdminCard.GetCardList2HistoryGroupConcatSet" parameterClass="java.util.HashMap">
		/* mariadb : /egovframework/sqlmap/mariadb/BizboxAlpha/expend/np/admin/NpAdminCardSQL.xml - NpAdminCard.GetCardList2History */
		/* 법인카드 승인내역 히스토리 사이즈 조정 */
	<![CDATA[ SET @@group_concat_max_len = 1000000; ]]>
	</update> 
	
	
	<select id="NpAdminCard.GetCardList2History" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* mariadb : /egovframework/sqlmap/mariadb/BizboxAlpha/expend/np/admin/NpAdminCardSQL.xml - NpAdminCard.GetCardList2History */
		/* 법인카드 승인내역 히스토리 조회 */
		
		SELECT	*
		FROM	(
			SELECT	
					"send"	AS useCode
					, "0"	AS orderNum
					, IFNULL( GROUP_CONCAT( 
						CONCAT(
							'■'
							, sync_id
							, "Σ"
							, IFNULL(d.doc_seq, "")
							, "Σ"
							, IFNULL((SELECT emp_name FROM $DB_NEOS$t_co_emp_multi WHERE lang_code = "kr" AND emp_seq = d.emp_seq), "") 
							, "Σ"
							, doc_no
							, "Σ"
							, doc_title
							, "Σ"
							, doc_status
							,"■") 
						)
					, "" )	AS superKeys
			FROM 	$DB_NEOS$t_ex_card_aq_tmp	c
			INNER JOIN	(
				SELECT	DISTINCT
					t.interface_seq
					, d.emp_seq
					, d.doc_seq
					, IFNULL(d.doc_no, "")	AS doc_no
					, IFNULL(ar.c_riaftertitle, ta.doc_title) AS doc_title
					, d.doc_status
				FROM	$DB_NEOS$t_exnp_resdoc	d
				INNER JOIN $DB_NEOS$t_exnp_restrade t
				ON	d.res_doc_seq = t.res_doc_seq
				LEFT JOIN $DB_NEOS$a_recordinfo ar
				ON	d.doc_seq = ar.c_dikeycode
				LEFT JOIN $DB_NEOS$teag_appdoc ta
				ON	d.doc_seq = ta.form_id				
				WHERE	d.doc_seq IS NOT NULL
				 AND	IFNULL(t.interface_type, "") = "card"
				 AND	IFNULL(d.doc_status, "008") IN ( "001", "002", "003", "004", "008", "009","20", "30", "90" )
			)	d
			ON	c.sync_id = d.interface_seq
			WHERE	c.auth_date 	BETWEEN #cardAuthDateFrom# AND #cardAuthDateTo#	-- issDateFrom issDateTo
			 AND	IFNULL(del_yn, "N")	= "N"
			
			UNION
			
			SELECT	
				"notUse"	AS useCode
				, "1"		AS orderNum
				, IFNULL( GROUP_CONCAT( CONCAT(sync_id, "Σ", IFNULL((SELECT emp_name FROM $DB_NEOS$t_co_emp_multi WHERE lang_code = "kr" AND emp_seq = aq.use_yn_emp_seq), ""), "■") ), "" )	AS superKeys
			FROM	$DB_NEOS$t_ex_card_transfer	aq
			WHERE	auth_date 	BETWEEN #cardAuthDateFrom# AND #cardAuthDateTo#
			 AND	IFNULL(use_yn, "N")  = "N"
			
			UNION
			
			SELECT	
				"receive"	AS useCode
				, "2"		AS orderNum
				, IFNULL( GROUP_CONCAT( CONCAT(sync_id, "Σ", IFNULL(receive_name, ""), "■") ), "" )	AS superKeys
			FROM	$DB_NEOS$t_ex_card_transfer  t
			WHERE	auth_date 	BETWEEN #cardAuthDateFrom# AND #cardAuthDateTo#
			 AND	IFNULL(use_yn, "Y")  = "Y"
			 AND	IFNULL(receive_seq, "") != ""			 
		)	cardCode
		ORDER BY orderNum;	
	</select>
		
	<select id="NpAdminCard.GetCardTransHistoryListSelect" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* mariadb : /egovframework/sqlmap/mariadb/BizboxAlpha/expend/np/admin/NpAdminCardSQL.xml - NpAdminCard.GetCardTransHistoryListSelect */
		/* 카드사용내역 이관 목록 조회 */
		SELECT  DATE_FORMAT(a.create_date, '%Y-%m-%d') AS transDate
			, DATE_FORMAT(a.auth_date, '%Y-%m-%d') AS authDate	
			, '0'	AS receiveType	
			, a.receive_name AS receiveName
			, a.transfer_name	AS transferName
			, a.partner_name AS partnerName
			, a.partner_no AS partnerNo
			, a.sync_id AS syncId
			, a.amt AS reqAmt
			, a.seq AS cardTransSeq
			, a.card_num AS cardNum
			, IFNULL(c.card_name, '미등록 카드') as cardName
			, IFNULL(send.use_code, 'N') AS sendYn
		FROM    $DB_NEOS$t_ex_card_transfer a
		LEFT JOIN	$DB_NEOS$t_ex_card c
		 ON	a.card_num = REPLACE(c.card_num, '-', '')
		 AND	a.comp_seq = c.comp_seq
		LEFT	JOIN (
			SELECT	DISTINCT
				'Y'	AS use_code
				, c.sync_id
			FROM 	$DB_NEOS$t_ex_card_aq_tmp	c
			INNER JOIN	$DB_NEOS$t_exnp_restrade t
			ON	c.sync_id = t.interface_seq
			INNER JOIN	$DB_NEOS$t_exnp_resdoc	d
			ON	d.res_doc_seq = t.res_doc_seq
			LEFT JOIN $DB_NEOS$a_recordinfo ar
			ON	d.doc_seq = ar.c_dikeycode
			LEFT JOIN $DB_NEOS$teag_appdoc ta
			ON	d.doc_seq = ta.form_id	
			WHERE	d.doc_seq IS NOT NULL
			 AND	IFNULL(t.interface_type, '') = 'card'
			 AND	IFNULL(d.doc_status, '008') IN ( '001', '002', '003', '004', '008', '009','20', '30', '90' )
			 AND	IFNULL(del_yn, 'N')	= 'N'
		)	send
		ON	a.sync_id = send.sync_id
		WHERE   a.comp_seq = #compSeq#
		 AND	IFNULL(a.transfer_seq, '') != ''
		 AND	IFNULL(a.receive_seq, '') != '' 
		 AND	( DATE_FORMAT( (CASE WHEN #dateSearchType# = '0' THEN a.create_date ELSE a.auth_date END), '%Y%m%d') BETWEEN #searchFromDate# AND #searchToDate# )
		 
	</select>
	
	<select id="NpAdminCard.GetCardCmsBatchTime" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* mariadb : /egovframework/sqlmap/mariadb/BizboxAlpha/expend/np/admin/NpAdminCardSQL.xml - NpAdminCard.GetCardCmsBatchTime */
		/* 카드사용내역 최종 배치 시간 조회 */
		SELECT	CONVERT(modify_date,CHAR) AS modify_date
				, MAX(custom_yn) AS custom_yn
				, MAX(run_yn) AS run_yn
		FROM	$DB_NEOS$t_ex_cms_sync
		LIMIT 1
	</select>
	
</sqlMap>