<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 최상배 배포금지 -->
<!-- ERPiCUBE mssql -->
<mapper namespace="AdminiCUBEReport">
	<select id="ExInSqSelect" parameterType="java.util.Map" resultType="java.util.Map"><![CDATA[
		/* sqlmap/mssql/iCUBE/expend/ex/admin/ExReport_SQL.xml */
		/* 전표 아이디 생성하여 가지고 오기(IN_SQ) / ExInSqSelect  */
		SELECT	ISNULL(MAX(IN_SQ),0) + 1 AS 'IN_SQ'
		FROM	dbo.SAUTODOCUD
		WHERE	IN_DT = '${IN_DT}'
	]]></select>
	
	<select id="ExCheckCanDelete" parameterType="java.util.Map" resultType="java.util.Map"><![CDATA[
		/* sqlmap/mssql/iCUBE/expend/ex/admin/ExReport_SQL.xml */
		/* 전표 발행 여부 파악(ISU_DT, ISU_SQ)  / ExCheckCanDelete  */
		 SELECT	COUNT( * )	AS	'COUNT'
		 FROM	dbo.SAUTODOCUD 
		 WHERE	IN_DT = '${inDt}' 
			AND	IN_SQ = ${inSq}
			AND	ISU_DT = '00000000'
			AND	ISU_SQ = 0
	]]></select>	
	
	<select id="ExSAUTODOCUDColumnSelect" resultType="java.util.Map">
		/* sqlmap/mssql/iCUBE/expend/ex/admin/ExReport_SQL.xml */
		/* 자동 전표 전송전 ERP Column 확인. / ExSAUTODOCUDColumnSelect  */
		SELECT COUNT(*) AS exists_doc_info_columns
		FROM (
		   SELECT COL_LENGTH('dzicube.dbo.SAUTODOCUD', 'DOC_ID') AS doc_id
		     , COL_LENGTH('dzicube.dbo.SAUTODOCUD', 'DOC_NO') AS doc_no
		  ) A
		WHERE A.doc_id IS NOT NULL
		AND  A.doc_no IS NOT NULL
	</select>
	
	<insert id="ExSAUTODOCUDInsertWithDocInfo" parameterType="java.util.Map">	
		/* sqlmap/mssql/iCUBE/expend/ex/admin/ExReport_SQL.xml */
		/* 자동 전표 전송 / ExSAUTODOCUDInsert  */
		INSERT INTO dbo.SAUTODOCUD	(IN_DT,IN_SQ,LN_SQ,CO_CD,IN_DIV_CD,LOGIC_CD,ACCT_CD,DRCR_FG,ACCT_AM,RMK_NB,RMK_DC,ATTR_CD,TRCD_TY,TRNM_TY,DEPTCD_TY,PJTCD_TY,CTNB_TY,FRDT_TY,TODT_TY,QT_TY,AM_TY,RT_TY,DEAL_TY,USER1_TY,USER2_TY,TR_CD,TR_NM,CT_DEPT,DEPT_NM,PJT_CD,PJT_NM,CT_NB,FR_DT,TO_DT,CT_QT,CT_AM,CT_RT,CT_DEAL,DEAL_NM,CT_USER1,USER1_NM,CT_USER2,USER2_NM,EXCH_TY,EXCH_AM,PAYMENT,ISU_NM,ENDORS_NM,BILL_FG1,BILL_FG2,DUMMY1,DUMMY2,DUMMY3,INSERT_DT,EX_FG,TR_NMK,DEPT_NMK,PJT_NMK,DEAL_NMK,USER1_NMK,USER2_NMK,RMK_DCK,ISU_DOC,ISU_DOCK,PRS_FG,JEONJA_YN,PAYMENT_PT,DEAL_FG, ISS_NO, DOC_ID, DOC_NO)
		VALUES	(#{IN_DT}, ${IN_SQ}, ${LN_SQ}, #{CO_CD}, #{IN_DIV_CD}, #{LOGIC_CD}, #{ACCT_CD}, #{DRCR_FG}, ${ACCT_AM}, #{RMK_NB}, #{RMK_DC}, #{ATTR_CD}, #{TRCD_TY}, #{TRNM_TY}, #{DEPTCD_TY}, #{PJTCD_TY}, #{CTNB_TY}, #{FRDT_TY}, #{TODT_TY}, #{QT_TY}, #{AM_TY}, #{RT_TY}, #{DEAL_TY}, #{USER1_TY}, #{USER2_TY}, #{TR_CD}, #{TR_NM}, #{CT_DEPT}, #{DEPT_NM}, #{PJT_CD}, #{PJT_NM}, #{CT_NB}, #{FR_DT}, #{TO_DT}, ${CT_QT}, ${CT_AM}, ${CT_RT}, #{CT_DEAL}, #{DEAL_NM}, #{CT_USER1}, #{USER1_NM}, #{CT_USER2}, #{USER2_NM}, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, #{EX_FG}, NULL, NULL, NULL, NULL, NULL, NULL, NULL, #{ISU_DOC}, NULL, NULL, #{JEONJA_YN}, #{PAYMENT_PT}, #{DEAL_FG}, #{ISS_NO}, #{DOC_ID}, #{DOC_NO})  
	</insert>	

	<insert id="ExSAUTODOCUDInsert" parameterType="java.util.Map">	
		/* sqlmap/mssql/iCUBE/expend/ex/admin/ExReport_SQL.xml */
		/* 자동 전표 전송 / ExSAUTODOCUDInsert  */
		INSERT INTO dbo.SAUTODOCUD	(IN_DT,IN_SQ,LN_SQ,CO_CD,IN_DIV_CD,LOGIC_CD,ACCT_CD,DRCR_FG,ACCT_AM,RMK_NB,RMK_DC,ATTR_CD,TRCD_TY,TRNM_TY,DEPTCD_TY,PJTCD_TY,CTNB_TY,FRDT_TY,TODT_TY,QT_TY,AM_TY,RT_TY,DEAL_TY,USER1_TY,USER2_TY,TR_CD,TR_NM,CT_DEPT,DEPT_NM,PJT_CD,PJT_NM,CT_NB,FR_DT,TO_DT,CT_QT,CT_AM,CT_RT,CT_DEAL,DEAL_NM,CT_USER1,USER1_NM,CT_USER2,USER2_NM,EXCH_TY,EXCH_AM,PAYMENT,ISU_NM,ENDORS_NM,BILL_FG1,BILL_FG2,DUMMY1,DUMMY2,DUMMY3,INSERT_DT,EX_FG,TR_NMK,DEPT_NMK,PJT_NMK,DEAL_NMK,USER1_NMK,USER2_NMK,RMK_DCK,ISU_DOC,ISU_DOCK,PRS_FG,JEONJA_YN,PAYMENT_PT,DEAL_FG, ISS_NO)
		VALUES	(#{IN_DT}, ${IN_SQ}, ${LN_SQ}, #{CO_CD}, #{IN_DIV_CD}, #{LOGIC_CD}, #{ACCT_CD}, #{DRCR_FG}, ${ACCT_AM}, #{RMK_NB}, #{RMK_DC}, #{ATTR_CD}, #{TRCD_TY}, #{TRNM_TY}, #{DEPTCD_TY}, #{PJTCD_TY}, #{CTNB_TY}, #{FRDT_TY}, #{TODT_TY}, #{QT_TY}, #{AM_TY}, #{RT_TY}, #{DEAL_TY}, #{USER1_TY}, #{USER2_TY}, #{TR_CD}, #{TR_NM}, #{CT_DEPT}, #{DEPT_NM}, #{PJT_CD}, #{PJT_NM}, #{CT_NB}, #{FR_DT}, #{TO_DT}, ${CT_QT}, ${CT_AM}, ${CT_RT}, #{CT_DEAL}, #{DEAL_NM}, #{CT_USER1}, #{USER1_NM}, #{CT_USER2}, #{USER2_NM}, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, #{EX_FG}, NULL, NULL, NULL, NULL, NULL, NULL, NULL, #{ISU_DOC}, NULL, NULL, #{JEONJA_YN}, #{PAYMENT_PT}, #{DEAL_FG}, #{ISS_NO})
	</insert>		
	
	<select id="ExSAUTODOCUDDelete" parameterType="java.util.Map" resultType="java.util.Map">
		/* sqlmap/mssql/iCUBE/expend/ex/admin/ExReport_SQL.xml */
		/* 자동 전표 전송 취소 / ExSAUTODOCUDDelete  */	
		DECLARE @inDt NVARCHAR(40)
		DECLARE @inSq INT
		DECLARE @resultValue INT

		SELECT	
		@inDt = '${inDt}'
		, @inSq = ${inSq}
		, @resultValue = 0
		
		SET @resultValue = (
			SELECT COUNT(*)  
			FROM dbo.SAUTODOCUD
    		WHERE 	IN_DT = @inDt
    			AND IN_SQ = @inSq
		)

		BEGIN TRY
			DELETE FROM dbo.SAUTODOCUD
    		WHERE 	IN_DT = @inDt
    			AND IN_SQ = @inSq
			
			SET		@resultValue = (
				SELECT  @resultValue  - COUNT(*)  
			FROM dbo.SAUTODOCUD
    		WHERE 	IN_DT = @inDt
    			AND IN_SQ = @inSq
			)
		END TRY
		BEGIN CATCH
			SELECT	@resultValue = 0
		END CATCH

		SELECT	@resultValue AS returnValue
	</select>
	
	<select id="ExAdminExpendSendERPDataDelete" parameterType="java.util.Map" resultType="java.util.Map">
		/* 자동전표 삭제 처리 */
		DECLARE @inDt NVARCHAR(8) = '${inDt}'				
		DECLARE @inSq NUMERIC(5,0) = '${inSq}'				
		DECLARE @processYN NVARCHAR(2)				
						
		BEGIN TRAN				
		BEGIN TRY				
			IF EXISTS ( SELECT * FROM DBO.SAUTODOCUD WHERE IN_DT = @inDt AND IN_SQ = @inSq AND ISU_DT = '00000000' AND ISU_SQ = 0 )			
			BEGIN			
				/* 자동전표 삭제가능 , 자동전표 삭제 처리 */		
				DELETE		
				FROM	DBO.SAUTODOCUD	
				WHERE	IN_DT = @inDt	
				AND		IN_SQ = @inSq
				AND		ISU_DT = '00000000'
				AND		ISU_SQ = 0
						
				SELECT	@processYN = 'Y'	
			END			
			ELSE IF EXISTS ( SELECT * FROM DBO.SAUTODOCUD WHERE IN_DT = @inDt AND IN_SQ = @inSq AND ISU_DT != '00000000' AND ISU_SQ != 0 )			
			BEGIN			
				/* 자동전표 삭제불가 */		
				SELECT	@processYN = 'N'	
			END			
			ELSE			
			BEGIN			
				/* 자동전표 미존재 - 계속 진행 */		
				SELECT	@processYN = 'Y'	
			END			
		END TRY				
		BEGIN CATCH				
			ROLLBACK TRAN			
			SELECT	@processYN = 'N'		
		END CATCH				
						
		IF(@@TRANCOUNT > 0)				
		BEGIN				
			COMMIT TRAN			
		END				
						
		SELECT	@processYN AS processYN	
	</select>
	
	
	<update id="ExAdminAcardInfoUpdate" parameterType="HashMap">
		UPDATE	ACARD_SUNGIN
		SET		GW_STATE = #{gwState}
				, DOC_NO = #{docNo}
				, DOC_ID = #{docSeq}
				, SYNC_ID = #{syncId}
				, GW_ID = #{gwState}
		WHERE	ISS_DT = #{issDt}
		 AND	ISS_SQ = #{issSq}
		 AND    SUNGIN_NB = #{authNum}
		 AND    CARD_NB = #{cardNum}
		 AND    CO_CD = #{erpCompSeq}
	</update>
	
	<update id="ExAdminETaxInfoUpdate" parameterType="HashMap">
	    UPDATE	ETAXUP
		SET		GET_FG = '${getFg}'
				, APPRO_STATE = '${approState}'
				, DOCU_NO = #{docNo, jdbcType=NVARCHAR}
		WHERE	ISS_NO = '${issNo}'
		AND		CO_CD = '${erpCompSeq}'
		AND		DIV_CD = '${erpBizSeq}'
    </update>
	
	
	<!-- 매입전자세금계산서 - 내역 목록 조회 -->
	<select id="ExAdminETaxListInfoSelectMap" parameterType="HashMap" resultType="HashMap">
		DECLARE @GW_ETAX_TMP_TABLE TABLE (
				DIV_CD nvarchar(4) NOT NULL,
				TAX_TY nvarchar(1) NOT NULL,
				ETAX_TY nvarchar(1) NULL,
				ISS_DT nvarchar(8) NOT NULL,
				ISU_DT nvarchar(8) NOT NULL,
				ISS_YMD nvarchar(8) NULL,
				TR_CD nvarchar(10) NULL,
				TR_NM nvarchar(50) NULL,
				TRREG_NB nvarchar(100) NOT NULL,
				SUP_AM numeric(17,4) NULL,
				VAT_AM numeric(17,4) NULL,
				SUM_AM numeric(17,4) NULL,
				ADOCU_YN nvarchar(5) NOT NULL,
				ADOCU_FG nvarchar(8) NOT NULL,
				DUMMY2 nvarchar(100) NULL,
				ISS_NO nvarchar(30) NOT NULL,
				ITEM_DC nvarchar(40) NULL,
				TRSUB_NB nvarchar(5) NULL,
				DUMMY1 nvarchar(100) NULL,
				EMAIL_DC nvarchar(40) NULL,
				TRCHARGE_EMAIL nvarchar(40) NULL,
				GW_INSERT_DT datetime NULL,
				APPRO_STATE nvarchar(1) NULL,
				DOCU_NO nvarchar(50) NULL,
				ISS_YN nvarchar(5) NULL,
				DOCU_INFO nvarchar(100) NULL
		)
		
		INSERT @GW_ETAX_TMP_TABLE
		exec [dbo].[USP_BIZBOXA_ACM0050_DOCU_CHK] @CO_CD=N'${erpCompSeq}', @DIV_CDS='${bizplanCode}', @FR_DT='${searchFromDt}', @TO_DT='${searchToDt}', @TAX_TY='${taxTy}', @DOCU_ST='${docuSt}'
		
		SELECT  ROW_NUMBER() over (ORDER BY ISS_DT <if test="orderBy == 'desc'">DESC</if>) AS rowNum
				, A.DIV_CD AS divCd
				, B.DIV_NM AS divNm
				, TAX_TY AS taxTy
				, ISNULL(ETAX_TY,'') AS etaxTy
				, ISS_DT AS issDt
				, ISU_DT AS isuDt
				, ISNULL(ISS_YMD,'') AS issYmd
				, ISNULL(TR_CD,'') AS trCd
				, ISNULL(TR_NM,'') AS trNm
				, TRREG_NB AS trregNb
				, ISNULL(SUP_AM,'0.00') AS supAm
				, ISNULL(VAT_AM,'0.00') AS vatAm
				, ISNULL(SUM_AM,'0.00') AS sumAm
				, ADOCU_YN AS adocuYN
				, ADOCU_FG AS adocuFg
				, ISNULL(DUMMY2,'') AS dummy2
				, ISS_NO AS issNo
				, ISNULL(ITEM_DC,'') AS itemDc
				, ISNULL(TRSUB_NB,'') AS trsubNb
				, ISNULL(DUMMY1,'') AS dummy1
				, ISNULL(EMAIL_DC,'') AS emailDc
				, ISNULL(TRCHARGE_EMAIL,'') AS trchargeEmail
				, ISNULL(GW_INSERT_DT,'') AS gwInsertDt
				, ISNULL(APPRO_STATE ,'')AS approState
				, ISNULL(DOCU_NO,'') AS docuNo
				, ISNULL(ISS_YN,'') AS issYN
				, ISNULL(DOCU_INFO,'') AS docuInfo
				, CASE WHEN ISS_NO IN ('${notInISSNO}') THEN 'Y' ELSE 'N' END AS sendYN
		FROM 	@GW_ETAX_TMP_TABLE A
				INNER JOIN (
					SELECT	DIV_CD
							, DIV_NM
					FROM	[DBO].[ZA_DIV_DAIKIN]
					WHERE	CO_CD = N'${erpCompSeq}'
				) B ON A.DIV_CD = B.DIV_CD
		/* 기본 검색조건 - 작성중인 지출결의 계산서는 제외 */
		WHERE	ISS_NO NOT IN ('${notInsertIssNo}')
		/* 기본 검색조건 - 공급받는자 이메일주소 */
		AND	ISNULL(TRCHARGE_EMAIL, '') LIKE '%${trchargeEmail}%'
		AND	(
			/* 검색조건 - 공급자 등록번호 */
			TRREG_NB LIKE '%${trregNb}%'
			/* 검색조건 - 공급자명 */
			AND		TR_NM LIKE '%${trNm}%'
			/* 검색조건 - 승인번호 */
			AND		ISS_NO LIKE '%${issNo}%'
			/* 검색조건 - 공급받는자 이메일 */
			AND		ISNULL(TRCHARGE_EMAIL, '') LIKE '%' + ISNULL(#{emailDc}, '') + '%'
		)
	</select>
	
	<update id="ExAdminiCUBEDocListDelete" parameterType="HashMap">
		BEGIN TRAN
			BEGIN TRY
				UPDATE	ENAGE_GROUP set		APPRO_STATE = '-3' , NO_DOC = '' WHERE APPRO_KEY = '${approKey}'
				SELECT * FROM ENAGE_GROUP  WHERE APPRO_KEY = '${approKey}'
			END TRY
			BEGIN CATCH
				ROLLBACK TRAN
			END CATCH
		COMMIT TRAN;
		
<!-- 		UPDATE	ENAGE_GROUP -->
<!-- 		SET		APPRO_STATE = '-3' -->
<!-- 				, NO_DOC = '' -->
<!-- 		WHERE	APPRO_KEY = '${approKey}' -->
	</update>
</mapper>