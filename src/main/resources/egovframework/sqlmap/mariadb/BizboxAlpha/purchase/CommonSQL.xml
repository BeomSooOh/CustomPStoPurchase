<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="CommonSQL">

	<select	id="CommonSQL.getGroupInfo" parameterClass="HashMap" resultClass="HashMap">
		select * from $DB_NEOS$t_co_group
	</select>
	
	<select	id="CommonSQL.getCompInfo" parameterClass="HashMap" resultClass="HashMap">
		select * from $DB_NEOS$t_co_comp where comp_seq = '$compSeq$'
	</select>	
	
	<select	id="CommonSQL.getGroupPathInfo" parameterClass="HashMap" resultClass="HashMap">
		select * from $DB_NEOS$t_co_group_path where os_type = '$osType$' and path_seq = '$pathSeq$'
	</select>	
	
	<select	id="CommonSQL.SelectPurchaseDetailCodeList" parameterClass="HashMap" resultClass="HashMap">
		
		select
		`GROUP`, CODE, NAME, USE_YN, ORDER_NUM, NOTE, LINK
		from cust_sto.t_purchase_code_detail 
		where 1=1
		<isNotEmpty property="useYn">
		and USE_YN = '$useYn$'
		</isNotEmpty>		
		<isNotEmpty property="group">
		and `group`='$group$'
		</isNotEmpty>
		order by `GROUP`, ORDER_NUM
	</select>
	
	<select	id="CommonSQL.SelectPurchaseDetailCodeInfo" parameterClass="HashMap" resultClass="HashMap">
		
		select
		`GROUP`, CODE, NAME, USE_YN, ORDER_NUM, NOTE, LINK, FORM_HTML
		from cust_sto.t_purchase_code_detail 
		where 1=1
		<isNotEmpty property="useYn">
		and USE_YN = '$useYn$'
		</isNotEmpty>		
		<isNotEmpty property="group">
		and `group`='$group$'
		</isNotEmpty>
		<isNotEmpty property="group">
		and `code`='$code$'
		</isNotEmpty>	
		limit 1;	
	</select>
	
	<select	id="CommonSQL.SelectApprFormData" parameterClass="HashMap" resultClass="HashMap">
		
		SELECT 
		a.seq,
		a.title as title,  
		a.manage_no as manageNo, 
		a.contract_no as contractNo,
		a.contract_type as contractType,
		dm.dept_name as writeDeptName,
		em.emp_name as writeEmpName,
		a.write_dt as writeDt,
		cust_sto.fn_get_purchase_code_text('notiType',a.noti_type) as notiType, 
		cust_sto.fn_get_purchase_code_text('budgetType',a.budget_type) as budgetType, 
		cust_sto.fn_get_purchase_code_text('targetType',a.target_type) as targetType, 
		a.contract_start_dt as contractStartDt, 
		a.contract_end_dt as contractEndDt, 
		FORMAT(a.amt, 0) as amt,
		a.amt_kor as amtKor,
		FORMAT(a.std_amt, 0) as std_amt,
		FORMAT(a.tax_amt, 0) as tax_amt,
		cust_sto.fn_get_purchase_code_text('baseLaw',a.base_law) as baseLaw, 
		cust_sto.fn_get_purchase_code_text('payType',a.pay_type_info) as payType, 
		a.work_info as workInfo, 
		a.emergency_yn, 
		a.restrict_sector_yn, 
		cust_sto.fn_get_purchase_code_text('competeType',a.compete_type) as competeType, 
		cust_sto.fn_get_purchase_code_text('restrictSector',a.restrict_sector_info) as restrictSector, 
		cust_sto.fn_get_purchase_code_text('restrictArea',a.restrict_area_info) as restrictArea, 
		a.nominee_info, 
		cust_sto.fn_get_purchase_code_text('decisionType',a.decision_type_info) as decisionType, 
		a.contract_form1, 
		a.contract_form2, 
		a.contract_form3, 
		a.rebid_yn, 
		a.eorder_use_yn, 
		a.created_dt, 
		a.created_by, 
		a.modify_dt, 
		a.modify_by,
		
		<isNotEmpty property="change_seq">
		
		</isNotEmpty>			
		
		ifnull(a.doc_sts,'') as doc_sts, 
		ifnull(a.approkey_plan,'') as approkey_plan, 
		ifnull(a.approkey_meet,'') as approkey_meet, 
		ifnull(a.approkey_result,'') as approkey_result,
		ifnull(a.approkey_conclusion,'') as approkey_conclusion,
		ifnull(a.approkey_change,'') as approkey_change,
		
		ifnull(a.meet_dt,'') as meet_dt, 
		ifnull(a.meet_place,'') as meet_place,
		ifnull(a.meet_method_pt,'') as meet_method_pt,
		ifnull(a.meet_method_qa,'') as meet_method_qa,
		FORMAT(a.meet_amt_spent, 0) as meet_amt_spent,
		
		ifnull(a.result_judges_info,'') as result_judges_info, 
		ifnull(a.result_score_info,'') as result_score_info, 		
		ifnull(a.result_target_info,'') as result_target_info, 
		FORMAT(a.result_amt, 0) as result_amt					
		
		FROM cust_sto.t_purchase_contract a
		
		<isNotEmpty property="change_seq">
		left join cust_sto.t_purchase_conclusion_change pcc on a.seq = pcc.seq and pcc.change_seq = $change_seq$
		</isNotEmpty>		
		left join $DB_NEOS$t_co_dept_multi dm on a.write_dept_seq = dm.dept_seq and dm.lang_code = 'kr'
		left join $DB_NEOS$t_co_emp_multi em on a.write_emp_seq = em.emp_seq and em.lang_code = 'kr'
		where seq = $seq$
		
	</select>	
	
	<select	id="CommonSQL.SelectContractSeqFromManageNo" parameterClass="HashMap" resultClass="int">
		
		SELECT 
		seq
		FROM cust_sto.t_purchase_contract
		where manage_no = '$manage_no$'
		
	</select>	
	
	<update	id="CommonSQL.SaveFormInfo" parameterClass="HashMap" >
	
		UPDATE cust_sto.t_purchase_code_detail
		SET FORM_HTML=#FORM_HTML#
		WHERE `GROUP`='$GROUP$' AND CODE='$CODE$';
	
	</update>	
	
	<update	id="CommonSQL.UpdateAppr" parameterClass="HashMap" >
		UPDATE cust_sto.t_purchase_contract
		SET
		doc_sts='$docSts$',
		<isNotEmpty property="approkeyPlan">
		approkey_plan='$approkeyPlan$'
		</isNotEmpty>	
		<isNotEmpty property="approkeyMeet">
		approkey_meet='$approkeyMeet$'
		</isNotEmpty>
		<isNotEmpty property="approkeyResult">
		approkey_result='$approkeyResult$'
		</isNotEmpty>
		<isNotEmpty property="approkeyConclusion">
		approkey_conclusion='$approkeyConclusion$'
		</isNotEmpty>
		<isNotEmpty property="approkeyChange">
		approkey_change='$approkeyChange$'
		</isNotEmpty>
		
		WHERE seq='$seq$';
	</update>
	
	<delete	id="CommonSQL.DeleteAttachInfo" parameterClass="HashMap" >
		
		delete from cust_sto.t_purchase_attach_info where seq = '$seq$' and outProcessCode = '$outProcessCode$';

	</delete>	
	
	<insert	id="CommonSQL.InsertAttachInfo" parameterClass="HashMap" >

		INSERT INTO cust_sto.t_purchase_attach_info
		(file_id, file_name, file_ext, seq, outProcessCode, form_code, use_yn, created_dt, created_by)
		VALUES('$fileId$', '$fileName$', '$fileExt$', '$seq$', '$outProcessCode$', '$code$', 'Y', now(), '$created_by$');		

	</insert>		
	
	
	<select	id="CommonSQL.SelectAttachList" parameterClass="HashMap" resultClass="HashMap">
		
		select * 
		from cust_sto.t_purchase_attach_info where seq = '$seq$' and outProcessCode = '$outProcessCode$'

	</select>
			
	<select	id="CommonSQL.SelectFormAttachList" parameterClass="HashMap" resultClass="HashMap">
	
		select
		b.LINK,
		b.CODE,
		b.NAME,
		ifnull(c.file_id,'') as file_id,
		ifnull(c.file_name,'') as file_name,
		ifnull(c.file_ext,'') as file_ext,
		'N' as new_yn
		from cust_sto.t_purchase_code_group a
		join cust_sto.t_purchase_code_detail b on a.`group` = b.`group` and a.USE_YN ='Y' and b.USE_YN  = 'Y'
		left join cust_sto.t_purchase_attach_info c on b.`GROUP`  = concat('attachForm_', c.outProcessCode) and b.CODE = c.form_code and c.seq = '$seq$'	
		where a.`group` = concat('attachForm_', '$outProcessCode$')
	
	</select>
	
	
	<select	id="CommonSQL.SelectCodeValueText" parameterClass="HashMap" resultClass="HashMap">
	
		select  cust_sto.fn_get_purchase_code_text('$group$','$value$') AS value_name
		from dual;
		
	</select>
	
	
	<delete	id="CommonSQL.DeleteBudgetInfo" parameterClass="HashMap" >
		
		delete from cust_sto.t_purchase_budget_info where seq = '$seq$' and outProcessCode = '$outProcessCode$';

	</delete>	
	
	<insert	id="CommonSQL.InsertBudgetInfo" parameterClass="HashMap" >
		
		INSERT INTO cust_sto.t_purchase_budget_info
		(seq, outProcessCode, div_seq, div_name, pjt_seq, pjt_name, bottom_seq, bottom_name, bgt_seq, bgt_name, bgt1_name, bgt2_name, bgt3_name, bgt4_name, created_dt, created_by)
		VALUES('$seq$', '$outProcessCode$', '$div_seq$', '$div_name$', '$pjt_seq$', '$pjt_name$', '$bottom_seq$', '$bottom_name$', '$bgt_seq$', '$bgt_name$', '$bgt1_name$', '$bgt2_name$', '$bgt3_name$', '$bgt4_name$', now(), '$created_by$');

	</insert>	
		
</sqlMap>