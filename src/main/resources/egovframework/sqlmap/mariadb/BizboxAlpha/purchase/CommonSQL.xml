<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="CommonSQL">

	<select	id="CommonSQL.getGroupInfo" parameterClass="HashMap" resultClass="HashMap">
		select * from $DB_NEOS$t_co_group
	</select>
	
	<select	id="CommonSQL.getCompInfo" parameterClass="HashMap" resultClass="HashMap">
		select * from $DB_NEOS$t_co_comp where comp_seq = '$compSeq$'
	</select>	
	
	<select	id="CommonSQL.getGroupPathInfo" parameterClass="HashMap" resultClass="HashMap">
		select * from $DB_NEOS$t_co_group_path where os_type = '$osType$' and path_seq = '$pathSeq$'
	</select>	
	
	<select	id="CommonSQL.SelectPurchaseDetailCodeList" parameterClass="HashMap" resultClass="HashMap">
		
		select
		`GROUP`, CODE, NAME, USE_YN, ORDER_NUM, NOTE, LINK
		from cust_sto.t_purchase_code_detail 
		where 1=1
		<isNotEmpty property="useYn">
		and USE_YN = '$useYn$'
		</isNotEmpty>		
		<isNotEmpty property="group">
		and `group`='$group$'
		</isNotEmpty>
		order by `GROUP`, ORDER_NUM
	</select>
	
	<select	id="CommonSQL.SelectPurchaseDetailCodeInfo" parameterClass="HashMap" resultClass="HashMap">
		
		select
		`GROUP`, CODE, NAME, USE_YN, ORDER_NUM, NOTE, LINK, FORM_HTML
		from cust_sto.t_purchase_code_detail 
		where 1=1
		<isNotEmpty property="useYn">
		and USE_YN = '$useYn$'
		</isNotEmpty>		
		<isNotEmpty property="group">
		and `group`='$group$'
		</isNotEmpty>
		<isNotEmpty property="group">
		and `code`='$code$'
		</isNotEmpty>	
		limit 1;	
	</select>
	
	<select	id="CommonSQL.SelectApprFormData" parameterClass="HashMap" resultClass="HashMap">
		
		SELECT 
		a.seq,
		ifnull(a.c_title, a.title) as title,  
		ifnull(a.manage_no,'') as manage_no, 
		ifnull(a.contract_no,'') as contract_no,
		a.contract_type as contract_type,
		dm.dept_name as write_dept_name,
		em.emp_name as write_emp_name,
		ifnull(a.c_write_dt, a.write_dt) as write_dt,
		cust_sto.fn_get_purchase_code_text('notiType',a.noti_type) as noti_type, 
		cust_sto.fn_get_purchase_code_text('budgetType',ifnull(a.c_budget_type, a.budget_type)) as budget_type, 
		cust_sto.fn_get_purchase_code_text('targetType',ifnull(a.c_target_type, a.target_type)) as target_type, 
		ifnull(a.contract_start_dt, '') as contract_start_dt, 
		ifnull(a.c_contract_end_dt, a.contract_end_dt) as contract_end_dt, 
		FORMAT(a.amt, 0) as amt,
		a.amt_kor as amt_kor,
		FORMAT(a.std_amt, 0) as std_amt,
		FORMAT(a.tax_amt, 0) as tax_amt,
		cust_sto.fn_get_purchase_code_text('baseLaw',ifnull(a.c_base_law, a.base_law)) as base_law, 
		cust_sto.fn_get_purchase_code_text('payType',a.pay_type_info) as pay_type, 
		ifnull(a.c_work_info, a.work_info) as work_info, 
		a.emergency_yn, 
		a.restrict_sector_yn, 
		cust_sto.fn_get_purchase_code_text('competeType',a.compete_type) as compete_type, 
		cust_sto.fn_get_purchase_code_text('restrictSector',a.restrict_sector_info) as restrict_sector, 
		cust_sto.fn_get_purchase_code_text('restrictArea',a.restrict_area_info) as restrict_area, 
		a.nominee_info, 
		cust_sto.fn_get_purchase_code_text('decisionType',a.decision_type_info) as decision_type, 
		a.contract_form1, 
		a.contract_form2, 
		a.contract_form3, 
		a.rebid_yn, 
		a.eorder_use_yn, 
		a.created_dt, 
		a.created_by, 
		a.modify_dt, 
		a.modify_by,
		
		<isNotEmpty property="change_seq">
		
		</isNotEmpty>			
		
		ifnull(a.doc_sts,'') as doc_sts, 
		ifnull(a.approkey_plan,'') as approkey_plan, 
		ifnull(a.approkey_meet,'') as approkey_meet, 
		ifnull(a.approkey_result,'') as approkey_result,
		ifnull(a.approkey_conclusion,'') as approkey_conclusion,
		ifnull(a.approkey_change,'') as approkey_change,
		
		ifnull(a.meet_dt,'') as meet_dt, 
		ifnull(a.meet_place,'') as meet_place,
		ifnull(a.meet_method_pt,'') as meet_method_pt,
		ifnull(a.meet_method_qa,'') as meet_method_qa,
		FORMAT(a.meet_amt_spent, 0) as meet_amt_spent,
		
		ifnull(a.result_judges_info,'') as result_judges_info, 
		ifnull(a.result_score_info,'') as result_score_info, 		
		ifnull(a.result_target_info,'') as result_target_info, 
		FORMAT(a.result_amt, 0) as result_amt					
		
		FROM cust_sto.t_purchase_contract a
		
		<isNotEmpty property="change_seq">
		left join cust_sto.t_purchase_conclusion_change pcc on a.seq = pcc.seq and pcc.change_seq = $change_seq$
		</isNotEmpty>		
		left join $DB_NEOS$t_co_dept_multi dm on ifnull(a.c_write_dept_seq, a.write_dept_seq) = dm.dept_seq and dm.lang_code = 'kr'
		left join $DB_NEOS$t_co_emp_multi em on ifnull(a.c_write_emp_seq, a.write_emp_seq) = em.emp_seq and em.lang_code = 'kr'
		where a.seq = $seq$
		
	</select>	
	
	<select	id="CommonSQL.SelectContractSeqFromManageNo" parameterClass="HashMap" resultClass="int">
		
		SELECT 
		seq
		FROM cust_sto.t_purchase_contract
		where manage_no = '$manage_no$'
		
	</select>	
	
	<update	id="CommonSQL.SaveFormInfo" parameterClass="HashMap" >
	
		UPDATE cust_sto.t_purchase_code_detail
		SET FORM_HTML=#FORM_HTML#
		WHERE `GROUP`='$GROUP$' AND CODE='$CODE$';
	
	</update>	
	
	<update	id="CommonSQL.UpdateAppr" parameterClass="HashMap" >
	
		<isNull property="approkeyChange">
			UPDATE cust_sto.t_purchase_contract
			SET
			doc_sts='$docSts$',
			<isNotEmpty property="approkeyPlan">
			approkey_plan='$approkeyPlan$'
			</isNotEmpty>	
			<isNotEmpty property="approkeyMeet">
			approkey_meet='$approkeyMeet$'
			</isNotEmpty>
			<isNotEmpty property="approkeyResult">
			approkey_result='$approkeyResult$'
			</isNotEmpty>
			<isNotEmpty property="approkeyConclusion">
			approkey_conclusion='$approkeyConclusion$'
			</isNotEmpty>
			<isNotEmpty property="approkeyChange">
			approkey_change='$approkeyChange$'
			</isNotEmpty>
			
			WHERE seq='$seq$';		  
		</isNull>
	
		<isNotNull property="approkeyChange">
			update 
			cust_sto.t_purchase_contract a
			join cust_sto.t_purchase_conclusion_change b on a.seq  = b.seq
			set
			a.approkey_change = '$approkeyChange$'
			<isEqual property="docSts" compareValue="90">
			,a.c_work_info = (case when ifnull(b.work_info_after,'') != '' then b.work_info_after else a.c_work_info end)
			,a.c_contract_end_dt = (case when ifnull(b.contract_end_dt_after,'') != '' then b.contract_end_dt_after else a.c_contract_end_dt end)
			,a.contract_amt_info = (case when ifnull(b.contract_amt_info_after,'') != '' then b.contract_amt_info_after else a.contract_amt_info end)
			,a.contract_amt = (case when ifnull(b.contract_amt_info_after,'') != '' then b.contract_amt_after else a.contract_amt end)			
			</isEqual>			
			
			where a.seq = '$seq$' and b.change_seq = '$change_seq$';
		</isNotNull>	
		
	</update>
	
	
	<update	id="CommonSQL.UpdateApprChange" parameterClass="HashMap" >
		
		update cust_sto.t_purchase_conclusion_change 
		set 
		doc_sts = '$docSts$'
		where change_seq = '$change_seq$';
		
	</update>
	
	
	<delete	id="CommonSQL.DeleteAttachInfo" parameterClass="HashMap" >
		
		delete from cust_sto.t_purchase_attach_info where seq = '$seq$' and outProcessCode = '$outProcessCode$';

	</delete>	
	
	<insert	id="CommonSQL.InsertAttachInfo" parameterClass="HashMap" >

		INSERT INTO cust_sto.t_purchase_attach_info
		(file_id, file_name, file_ext, seq, outProcessCode, form_code, use_yn, created_dt, created_by)
		VALUES('$fileId$', '$fileName$', '$fileExt$', '$seq$', '$outProcessCode$', '$code$', 'Y', now(), '$created_by$');		

	</insert>		
	
	
	<select	id="CommonSQL.SelectAttachList" parameterClass="HashMap" resultClass="HashMap">
		
		select * 
		from cust_sto.t_purchase_attach_info where seq = '$seq$' and outProcessCode = '$outProcessCode$'

	</select>
	
	
	<select	id="CommonSQL.SelectFormAttachList" parameterClass="HashMap" resultClass="HashMap">
	
		select
		b.LINK,
		b.CODE,
		b.NAME,
		ifnull(c.file_id,'') as file_id,
		ifnull(c.file_name,'') as file_name,
		ifnull(c.file_ext,'') as file_ext,
		'N' as new_yn
		from cust_sto.t_purchase_code_group a
		join cust_sto.t_purchase_code_detail b on a.`group` = b.`group` and a.USE_YN ='Y' and b.USE_YN  = 'Y'
		left join cust_sto.t_purchase_attach_info c on b.`GROUP`  = concat('attachForm_', c.outProcessCode) and b.CODE = c.form_code and c.seq = '$seq$'	
		where a.`group` = concat('attachForm_', '$outProcessCode$')
	
	</select>
	
	
	<select	id="CommonSQL.SelectCodeValueText" parameterClass="HashMap" resultClass="HashMap">
	
		select  cust_sto.fn_get_purchase_code_text('$group$','$value$') AS value_name
		from dual;
		
	</select>
	
	
	<delete	id="CommonSQL.DeleteBudgetInfo" parameterClass="HashMap" >
		
		delete from cust_sto.t_purchase_budget_info where seq = '$seq$' and outProcessCode = '$outProcessCode$';

	</delete>	
	
	<insert	id="CommonSQL.InsertBudgetInfo" parameterClass="HashMap" >
		
		INSERT INTO cust_sto.t_purchase_budget_info
		(seq, outProcessCode, erp_budget_seq, erp_budget_name, erp_budget_div_seq, erp_budget_div_name, erp_bgt1_seq, erp_bgt2_seq, erp_bgt3_seq, erp_bgt4_seq, erp_bgt1_name, erp_bgt2_name, erp_bgt3_name, erp_bgt4_name, pjt_seq, pjt_name, bottom_seq, bottom_name, created_dt, created_by)
		VALUES('$seq$', '$outProcessCode$', '$erp_budget_seq$', '$erp_budget_name$', '$erp_budget_div_seq$', '$erp_budget_div_name$', '$erp_bgt1_seq$', '$erp_bgt2_seq$', '$erp_bgt3_seq$', '$erp_bgt4_seq$', '$erp_bgt1_name$', '$erp_bgt2_name$', '$erp_bgt3_name$', '$erp_bgt4_name$', '$pjt_seq$', '$pjt_name$', '$bottom_seq$', '$bottom_name$', now(), '$created_by$');

	</insert>
	
	<select	id="CommonSQL.SelectBudgetList" parameterClass="HashMap" resultClass="HashMap">
		
		select * 
		from cust_sto.t_purchase_budget_info where seq = '$seq$' and outProcessCode = '$outProcessCode$'

	</select>	
	
	<delete	id="CommonSQL.DeleteTradeInfo" parameterClass="HashMap" >
		
		delete from cust_sto.t_purchase_trade_info where seq = '$seq$' and outProcessCode = '$outProcessCode$';

	</delete>	
	
	<insert	id="CommonSQL.InsertTradeInfo" parameterClass="HashMap" >
	
		INSERT INTO cust_sto.t_purchase_trade_info
		(seq, outProcessCode, tr_seq, tr_name, at_tr_name, ceo_name, tr_reg_number, addr, depositor, ba_nb, btr_name, btr_seq, tr_fg, tr_fg_name, pm_email, pm_hp, pm_name, created_dt, created_by)
		VALUES('$seq$', '$outProcessCode$', '$tr_seq$', '$tr_name$', '$at_tr_name$', '$ceo_name$', '$tr_reg_number$', '$addr$', '$depositor$', '$ba_nb$', '$btr_name$', '$btr_seq$', '$tr_fg$', '$tr_fg_name$', '$pm_email$', '$pm_hp$', '$pm_name$', now(), '$created_by$');
		
	</insert>
	
	<select	id="CommonSQL.SelectTradeInfo" parameterClass="HashMap" resultClass="HashMap">
		
		select * 
		from cust_sto.t_purchase_trade_info where seq = '$seq$' and outProcessCode = '$outProcessCode$' limit 1;

	</select>			
		
</sqlMap>