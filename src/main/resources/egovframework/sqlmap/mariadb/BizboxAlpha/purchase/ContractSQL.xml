<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="ContractSQL">
	
	<select	id="ContractSQL.SelectContractList_TOTALCOUNT" parameterClass="HashMap" resultClass="Integer">
		
		
		SELECT 
		count(*)		
		FROM cust_sto.t_purchase_contract a
		<isEqual property="authLevel" compareValue="dept">
		left join $DB_NEOS$t_co_dept wdept on a.write_dept_seq = wdept.dept_seq 
		left join $DB_NEOS$t_co_dept cwdept on a.c_write_dept_seq = cwdept.dept_seq
		</isEqual>
		left join $DB_NEOS$t_co_dept_multi cdm on ifnull(a.c_write_dept_seq,a.write_dept_seq) = cdm.dept_seq and cdm.lang_code = 'kr'
		left join $DB_NEOS$t_co_emp_multi cem on ifnull(a.c_write_emp_seq,a.write_emp_seq) = cem.emp_seq and cem.lang_code = 'kr'		
		where 
		1=1
		<isNotEmpty property="searchFromDate">
		and  ifnull(a.c_contract_end_dt, a.contract_end_dt) <![CDATA[ >= ]]> '$searchFromDate$'
		</isNotEmpty>
		<isNotEmpty property="searchToDate">
		and  ifnull(a.c_contract_end_dt, a.contract_end_dt) <![CDATA[ <= ]]> '$searchToDate$'
		</isNotEmpty>
		<isNotEmpty property="contractTitle">
		and  ifnull(a.c_title, a.title) like concat('%', '$contractTitle$', '%')
		</isNotEmpty>
		<isNotEmpty property="writeDeptName">
		and  cdm.dept_name like concat('%', '$writeDeptName$', '%')
		</isNotEmpty>
		<isNotEmpty property="writeEmpName">
		and  cem.emp_name like concat('%', '$writeEmpName$', '%')
		</isNotEmpty>
		
		<isEqual property="authLevel" compareValue="dept">
		and (concat('|',wdept.`path`,'|') like concat('%|','$deptSeq$','|%') or concat('|',cwdept.`path`,'|') like concat('%|','$deptSeq$','|%')) 
		</isEqual>		
		<isEqual property="authLevel" compareValue="user">
		and (
				(a.write_emp_seq = '$empSeq$' or a.c_write_emp_seq = '$empSeq$')
				or a.public_info like '%|$empSeq$|u%'
			)   
		</isEqual>
	
	</select>
		
	<select	id="ContractSQL.SelectContractList" parameterClass="HashMap" resultClass="HashMap">
		SELECT   
		@rownum := @rownum + 1 AS no,
		a.seq, 
		a.manage_no, 
		a.contract_no,
		a.contract_type,
		a.write_comp_seq, 
		a.write_dept_seq, 
		a.write_emp_seq, 
		a.write_dt, 
		a.c_write_comp_seq, 
		a.c_write_dept_seq, 
		a.c_write_emp_seq, 
		a.c_write_dt, 		
		cdm.dept_name,
		cem.emp_name,
		a.noti_type, 
		a.budget_type, 
		a.target_type, 
		cust_sto.fn_get_purchase_code_text('targetType', ifnull(a.c_target_type,a.target_type)) as target_type_name,
		ifnull(a.c_title, a.title) as title, 
		ifnull(a.contract_start_dt,'') as contract_start_dt, 
		ifnull(a.c_contract_end_dt, a.contract_end_dt) as contract_end_dt, 
		ifnull(FORMAT(ifnull(a.amt, 0), 0),'') as amt,
		ifnull(FORMAT(ifnull(a.contract_amt, 0), 0),'') as contract_amt,
		ifnull(FORMAT(ifnull(a.contract_amt, a.amt), 0),'') as dis_amt,
		a.amt_kor,
		ifnull(FORMAT(ifnull(a.std_amt, 0), 0),'') as std_amt,
		FORMAT(a.tax_amt, 0) as tax_amt,		
		a.base_law, 
		cust_sto.fn_get_purchase_code_text('baseLaw', a.base_law) as base_law_name,
		a.contract_law, 
		cust_sto.fn_get_purchase_code_text('contractLaw', a.contract_law) as contract_law_name,		
		a.pay_type_info, 
		a.work_info, 
		a.emergency_yn, 
		a.restrict_sector_yn, 
		a.compete_type,
		cust_sto.fn_get_purchase_code_text('competeType', a.compete_type) as compete_type_text, 
		a.restrict_sector_info, 
		a.restrict_area_info, 
		a.nominee_info, 
		a.decision_type_info, 
		cust_sto.fn_get_purchase_code_text('decisionType', a.decision_type_info) as decision_type_text, 
		a.contract_form1, 
		a.contract_form2, 
		a.contract_form3,
		a.c_contract_form1, 
		a.c_contract_form2, 		 
		a.rebid_yn, 
		a.eorder_use_yn,
		
		ifnull(trade.tr_name, '') as tr_name,		
		ifnull(trade.tr_reg_number, '') as tr_reg_number,		
		ifnull(trade.ceo_name, '') as ceo_name,	
		cust_sto.fn_get_purchase_code_text('hopeCompany', a.hope_company_info) as hope_company_info,
		cust_sto.fn_get_purchase_code_text('contractType', a.contract_type) as contract_type_text,
		ifnull(a.joint_contract_method, '') as joint_contract_method,
		cust_sto.fn_get_purchase_code_text('jointContractMethod', a.joint_contract_method) as joint_contract_method_text,
		
		ifnull(a.bidder_cnt,'') as bidder_cnt,
		ifnull(a.meet_dt,'') as meet_dt,
		
		ifnull(a.pre_notice_end_dt,'') as pre_notice_end_dt,
		ifnull(a.notice_start_dt,'') as notice_start_dt,
		ifnull(a.notice_end_dt,'') as notice_end_dt,
		ifnull(a.re_notice_start_dt,'') as re_notice_start_dt,
		ifnull(a.re_notice_end_dt,'') as re_notice_end_dt,
		
		ifnull(a.contract_change_dt,'') as contract_change_dt,
		ifnull(cc.work_info_after,'') as work_info_after,
		ifnull(cc.contract_end_dt_after,'') as contract_end_dt_after,
		ifnull(format(cc.contract_amt_after,0),'') as contract_amt_after,
		ifnull(cc.change_etc,'') as change_etc,
		ifnull(cc.doc_sts,'') as doc_sts_change,
		ifnull(cc.change_seq,'') as change_seq,
		
		case when ifnull(a.contract_amt,0) != 0 then 
		ifnull((
		select format(sum(aaa.res_amt),0) from cust_sto.t_purchase_payment_doc_info aaa
		join $DB_NEOS$t_exnp_resdoc bbb on aaa.res_doc_seq  = bbb.res_doc_seq and IFNULL(bbb.doc_seq, '') != '' and IFNULL(bbb.doc_status, '008') IN ( '001', '002', '003', '004', '006', '008', '009', '20', '30', '90' )
		where aaa.outProcessCode = 'CONCLUSION' and aaa.seq = a.seq and aaa.pay_type = 'A'
		),'0') else '' end as pay_amt_a,
		
		case when ifnull(a.contract_amt,0) != 0 then 
		ifnull((
		select format(sum(aaa.res_amt),0) from cust_sto.t_purchase_payment_doc_info aaa
		join $DB_NEOS$t_exnp_resdoc bbb on aaa.res_doc_seq  = bbb.res_doc_seq and IFNULL(bbb.doc_seq, '') != '' and IFNULL(bbb.doc_status, '008') IN ( '001', '002', '003', '004', '006', '008', '009', '20', '30', '90' )
		where aaa.outProcessCode = 'CONCLUSION' and aaa.seq = a.seq and aaa.pay_type = 'B'
		),'0') else '' end as pay_amt_b,
		
		case when ifnull(a.contract_amt,0) != 0 then 
		ifnull((
		select format(sum(aaa.res_amt),0) from cust_sto.t_purchase_payment_doc_info aaa
		join $DB_NEOS$t_exnp_resdoc bbb on aaa.res_doc_seq  = bbb.res_doc_seq and IFNULL(bbb.doc_seq, '') != '' and IFNULL(bbb.doc_status, '008') IN ( '001', '002', '003', '004', '006', '008', '009', '20', '30', '90' )
		where aaa.outProcessCode = 'CONCLUSION' and aaa.seq = a.seq and aaa.pay_type = 'C'
		),'0') else '' end as pay_amt_c,		
		
		case when ifnull(a.contract_amt,0) != 0 then 
		ifnull((
		select format(a.contract_amt - ifnull(sum(aaa.res_amt),0),0) from cust_sto.t_purchase_payment_doc_info aaa
		join $DB_NEOS$t_exnp_resdoc bbb on aaa.res_doc_seq  = bbb.res_doc_seq and IFNULL(bbb.doc_seq, '') != '' and IFNULL(bbb.doc_status, '008') IN ( '001', '002', '003', '004', '006', '008', '009', '20', '30', '90' )
		where aaa.outProcessCode = 'CONCLUSION' and aaa.seq = a.seq
		),'0') else '' end as remain_amt,					
		
		ifnull(a.contract_attach_info,'') as contract_attach_info,
		ifnull(a.submit_attach_info,'') as submit_attach_info,
		 
		a.created_dt, 
		a.created_by, 
		a.modify_dt, 
		a.modify_by,
		
		ifnull(a.doc_sts,'') as doc_sts, 
		ifnull(a.approkey_plan,'') as approkey_plan, 
		ifnull(a.approkey_meet,'') as approkey_meet, 
		ifnull(a.approkey_result,'') as approkey_result,
		ifnull(a.approkey_conclusion,'') as approkey_conclusion,
		ifnull(a.approkey_change,'') as approkey_change,
		
		a.public_info as public_info,
		a.contract_term as contract_term,
		ifnull(FORMAT(ifnull(a.result_amt, 0), 0),'') as result_amt,
		ifnull(pcc_temp.change_reason,'') as change_reason,
		
		ifnull(a.construction_dt,'') as construction_dt, 
		ifnull(a.completion_dt,'') as completion_dt,
		a.open_amt as open_amt,
		a.consbalance_amt as consbalance_amt,
		a.resApply_amt as resApply_amt,
		a.balance_amt as balance_amt,
		a.baselaw_reason
		
		FROM cust_sto.t_purchase_contract a
		<isEqual property="authLevel" compareValue="dept">
		left join $DB_NEOS$t_co_dept wdept on a.write_dept_seq = wdept.dept_seq 
		left join $DB_NEOS$t_co_dept cwdept on a.c_write_dept_seq = cwdept.dept_seq 	
		</isEqual>		
		inner join (SELECT @rownum:=0) tmp
		left join cust_sto.t_purchase_conclusion_change cc on a.approkey_change = concat('Conclu02_', cc.seq, '_', cc.change_seq)  
		left join cust_sto.t_purchase_conclusion_change pcc_temp on a.seq = pcc_temp.seq and ifnull(pcc_temp.doc_sts,'') = ''
		left join cust_sto.t_purchase_trade_info trade on a.seq = trade.seq and trade.tr_idx = '0' and trade.outProcessCode like '%Conclusion01%'
		left join $DB_NEOS$t_co_dept_multi cdm on ifnull(a.c_write_dept_seq,a.write_dept_seq) = cdm.dept_seq and cdm.lang_code = 'kr'
		left join $DB_NEOS$t_co_emp_multi cem on ifnull(a.c_write_emp_seq,a.write_emp_seq) = cem.emp_seq and cem.lang_code = 'kr'		
		
		where 
		
		1=1
		
		 
		 
		<isNotEmpty property="searchFromDate">
		and  ifnull(a.c_contract_end_dt, a.contract_end_dt) <![CDATA[ >= ]]> '$searchFromDate$'
		</isNotEmpty>
		<isNotEmpty property="searchToDate">
		and  ifnull(a.c_contract_end_dt, a.contract_end_dt) <![CDATA[ <= ]]> '$searchToDate$'
		</isNotEmpty>
		<isNotEmpty property="contractTitle">
		and  ifnull(a.c_title, a.title) like concat('%', '$contractTitle$', '%')
		</isNotEmpty>
		<isNotEmpty property="writeDeptName">
		and  cdm.dept_name like concat('%', '$writeDeptName$', '%')
		</isNotEmpty>
		<isNotEmpty property="writeEmpName">
		and  cem.emp_name like concat('%', '$writeEmpName$', '%')
		</isNotEmpty>	
		
		<isEqual property="authLevel" compareValue="dept">
		and (concat('|',wdept.`path`,'|') like concat('%|','$deptSeq$','|%') or concat('|',cwdept.`path`,'|') like concat('%|','$deptSeq$','|%'))
		</isEqual>		
		<isEqual property="authLevel" compareValue="user">
		and (
				(a.write_emp_seq = '$empSeq$' or a.c_write_emp_seq = '$empSeq$')
				or a.public_info like '%|$empSeq$|u%' 
			)   
		</isEqual>
		
		
		order by a.seq desc
		LIMIT $startNum$ ,  $endNum$
		
	</select>	
	
	<select	id="ContractSQL.SelectContractDetail" parameterClass="HashMap" resultClass="HashMap">
		
		SELECT 
		a.seq, 
		a.manage_no, 
		ifnull(a.contract_no, '') as contract_no,
		a.contract_type,
		a.write_comp_seq, 
		a.write_dept_seq, ifnull(dm.dept_name,'') as write_dept_name, 
		a.write_emp_seq, ifnull(em.emp_name,'') as write_emp_name, 
		a.write_dt,
		a.c_write_comp_seq, 
		a.c_write_dept_seq, ifnull(cdm.dept_name,'') as c_write_dept_name, 
		ifnull(a.c_write_emp_seq,a.write_emp_seq) as c_write_emp_seq, ifnull(cem.emp_name,'') as c_write_emp_name, 
		a.c_write_dt,		
		a.noti_type, 
		a.budget_type, a.c_budget_type, 
		a.target_type, a.c_target_type, 
		ifnull(a.title, '') as title,
		a.c_title, 
		a.contract_start_dt, 
		a.contract_end_dt, 
		a.c_contract_end_dt, 
		FORMAT(a.amt, 0) as amt,
		a.amt_kor,
		FORMAT(a.std_amt, 0) as std_amt,
		FORMAT(a.tax_amt, 0) as tax_amt,
		a.base_law, 
		a.contract_law, 
		a.pay_type_info,
		a.c_pay_type_info,
		a.work_info, a.c_work_info, 
		a.emergency_yn, 
		a.restrict_sector_yn, 
		a.compete_type, 
		a.restrict_sector_info, 
		a.restrict_area_info, 
		a.nominee_info, 
		a.decision_type_info, 
		a.contract_form1, 
		a.contract_form2, 
		a.c_contract_form1, 
		a.c_contract_form2, 		
		a.contract_form3, 
		a.rebid_yn, 
		a.eorder_use_yn, 
		a.created_dt, 
		a.created_by, 
		a.modify_dt, 
		a.modify_by,
		
		
		ifnull(a.doc_sts,'') as doc_sts,
		ifnull(pcc.doc_sts,'') as doc_sts_change, 
		ifnull(a.approkey_plan,'') as approkey_plan, 
		ifnull(a.approkey_meet,'') as approkey_meet, 
		ifnull(a.approkey_result,'') as approkey_result,
		ifnull(a.approkey_conclusion,'') as approkey_conclusion,
		ifnull(a.approkey_change,'') as approkey_change,
		ifnull(pcc.change_seq,'') as change_seq,
		ifnull(pcc_temp.change_seq,'') as change_seq_temp,
		
		ifnull(a.meet_dt,'') as meet_dt, 
		ifnull(a.meet_place,'') as meet_place,
		ifnull(a.meet_method_pt,'') as meet_method_pt,
		ifnull(a.meet_method_qa,'') as meet_method_qa,
		FORMAT(a.meet_amt_spent, 0) as meet_amt_spent,
		
		ifnull(a.result_judges_info,'') as result_judges_info, 
		ifnull(a.result_score_info,'') as result_score_info, 		
		ifnull(a.result_target_info,'') as result_target_info, 
		FORMAT(a.result_amt, 0) as result_amt,
		ifnull(a.joint_contract_method, '') as joint_contract_method,
		
		a.contract_term,
		a.hope_attach_info,
		a.hope_company_info,
		a.partner_addr,
		a.partner_bizno,
		a.partner_code,
		a.partner_name,
		a.partner_owner,
		a.private_reason,
		a.pm_email,
		a.pm_hp,
		a.pm_name,
		FORMAT(a.contract_amt, 0) as contract_amt,
		ifnull(a.contract_amt_info,'') as contract_amt_info,
		
		ifnull(a.notice_start_dt,'') as notice_start_dt,
		ifnull(a.notice_end_dt,'') as notice_end_dt,
		ifnull(a.public_info,'') as public_info,
		
		ifnull(a.construction_dt,'') as construction_dt, 
		ifnull(a.completion_dt,'') as completion_dt,
		a.open_amt as open_amt,
		a.consbalance_amt as consbalance_amt,
		a.resApply_amt as resApply_amt,
		a.balance_amt as balance_amt,
		a.result_amt_info_html,
		a.result_amt_info_html,
		ifnull(pgw1.appr_dikey,'') as appr_dikey_plan,
		ifnull(pgw1.appr_status,'') as appr_status_plan,
		ifnull(pgw2.appr_dikey,'') as appr_dikey_meet,
		ifnull(pgw2.appr_status,'') as appr_status_meet,
		ifnull(pgw3.appr_dikey,'') as appr_dikey_result,
		ifnull(pgw3.appr_status,'') as appr_status_result,
        ifnull(pgw4.appr_dikey,'') as appr_dikey_conclusion,
		ifnull(pgw4.appr_status,'') as appr_status_conclusion,
		ifnull(pgw5.appr_dikey,'') as appr_dikey_change,
		ifnull(pgw5.appr_status,'') as appr_status_change,
		a.baselaw_reason
		
		FROM cust_sto.t_purchase_contract a
		left join $DB_NEOS$erpgwlink pgw1 on  a.approkey_plan = pgw1.docx_numb and pgw1.docx_numb != '' and pgw1.docx_numb is not null
        left join $DB_NEOS$erpgwlink pgw2 on  a.approkey_meet = pgw2.docx_numb and pgw2.docx_numb != '' and pgw2.docx_numb is not null
        left join $DB_NEOS$erpgwlink pgw3 on  a.approkey_result = pgw3.docx_numb and pgw3.docx_numb != '' and pgw3.docx_numb is not null
        left join $DB_NEOS$erpgwlink pgw4 on  a.approkey_conclusion = pgw4.docx_numb and pgw4.docx_numb != '' and pgw4.docx_numb is not null
        left join $DB_NEOS$erpgwlink pgw5 on  a.approkey_change = pgw5.docx_numb and pgw5.docx_numb != '' and pgw5.docx_numb is not null
		left join cust_sto.t_purchase_conclusion_change pcc on a.approkey_change = concat('Conclu02_', pcc.seq, '_', pcc.change_seq)
		left join cust_sto.t_purchase_conclusion_change pcc_temp on a.seq = pcc_temp.seq and ifnull(pcc_temp.doc_sts,'') = ''
		left join $DB_NEOS$t_co_dept_multi dm on a.write_dept_seq = dm.dept_seq and dm.lang_code = 'kr'
		left join $DB_NEOS$t_co_emp_multi em on a.write_emp_seq = em.emp_seq and em.lang_code = 'kr'
		left join $DB_NEOS$t_co_dept_multi cdm on a.c_write_dept_seq = cdm.dept_seq and cdm.lang_code = 'kr'
		left join $DB_NEOS$t_co_emp_multi cem on a.c_write_emp_seq = cem.emp_seq and cem.lang_code = 'kr'
		
		where a.seq = $seq$
		limit 1;
	</select>	
	
	<select	id="ContractSQL.SelectConclusionChangeDetail" parameterClass="HashMap" resultClass="HashMap">
	
		SELECT 
		a.change_seq, 
		a.seq, 
		a.change_item_info, 
		a.work_info_before, 
		a.work_info_after, 
		a.contract_end_dt_before, 
		a.contract_end_dt_after, 
		a.contract_amt_info_before, 
		a.contract_amt_info_after, 
		a.contract_amt_after,
		a.contract_amt_kor_after,
		a.change_etc,
		a.change_reason,		
		a.created_dt, 
		a.created_by, 
		a.modify_dt, 
		a.modify_by
		
		FROM cust_sto.t_purchase_conclusion_change a
		WHERE a.change_seq=$change_seq$;

	</select>	
	
	
	<insert	id="ContractSQL.InsertContract" parameterClass="HashMap" >
		
		INSERT INTO cust_sto.t_purchase_contract
		(
		manage_no, 
		contract_no,
		contract_type,
		public_info,
		write_comp_seq, 
		write_dept_seq, 
		write_emp_seq, 
		write_dt,
		noti_type, 
		budget_type, 
		target_type, 
		title, 
		contract_start_dt, 
		contract_end_dt, 
		amt, 
		amt_kor,
		std_amt, 
		tax_amt, 
		base_law, 
		pay_type_info, 
		work_info, 
		emergency_yn, 
		restrict_sector_yn, 
		compete_type, 
		restrict_sector_info, 
		restrict_area_info, 
		nominee_info, 
		decision_type_info, 
		contract_form1, 
		contract_form2, 
		contract_form3, 
		rebid_yn, 
		eorder_use_yn, 
		created_dt, 
		created_by, 
		modify_dt, 
		modify_by,
		construction_dt,
		completion_dt,
		baselaw_reason
		
		)
		VALUES(
		'$manage_no$', 
		'$contract_no$',
		'$contract_type$',
		'$public_info$',
		'$write_comp_seq$', 
		'$write_dept_seq$', 
		'$write_emp_seq$', 
		'$write_dt$',
		'$noti_type$', 
		'$budget_type$', 
		'$target_type$', 
		'$title$', 
		'$contract_start_dt$', 
		'$contract_end_dt$', 
		'$amt$',
		'$amt_kor$', 
		'$std_amt$', 
		'$tax_amt$', 
		'$base_law$', 
		'$pay_type_info$', 
		'$work_info$', 
		'$emergency_yn$', 
		'$restrict_sector_yn$', 
		'$compete_type$', 
		'$restrict_sector_info$', 
		'$restrict_area_info$', 
		'$nominee_info$', 
		'$decision_type_info$', 
		'$contract_form1$', 
		'$contract_form2$', 
		'$contract_form3$', 
		'$rebid_yn$', 
		'$eorder_use_yn$', 
		now(), 
		'$created_by$', 
		null, 
		null,
		'$construction_dt$',
		'$completion_dt$',
		'$baselaw_reason$'
		);
		
		<selectKey keyProperty="seq" resultClass="int">
			SELECT LAST_INSERT_ID();
		</selectKey>			

	</insert>	
	
	
	<insert	id="ContractSQL.InsertConclusion" parameterClass="HashMap" >
		
		INSERT INTO cust_sto.t_purchase_contract
		(
		manage_no, 
		contract_no,
		contract_type,
		public_info,
		c_write_comp_seq, 
		c_write_dept_seq, 
		c_write_emp_seq, 
		c_write_dt,		 
		c_budget_type, 
		c_target_type, 
		c_title, 
		c_contract_end_dt, 
		contract_law, 
		c_work_info,

		contract_term,
		hope_attach_info,
		hope_company_info,
		partner_addr,
		partner_bizno,
		partner_code,
		partner_name,
		partner_owner,
		private_reason,
		pm_email,
		pm_hp,
		pm_name,
		contract_amt,
		contract_amt_info,	
		joint_contract_method,
		c_contract_form1, 
		c_contract_form2, 		
		 
		created_dt, 
		created_by, 
		modify_dt, 
		modify_by,
		
		open_amt,
		consbalance_amt,
		resApply_amt,
		balance_amt,
		result_amt_info_html,
		c_pay_type_info
		
		)
		VALUES(
		'', 
		'$contract_no$',
		'$contract_type$',
		'$public_info$',
		'$c_write_comp_seq$', 
		'$c_write_dept_seq$', 
		'$c_write_emp_seq$', 
		'$c_write_dt$',		 
		'$c_budget_type$', 
		'$c_target_type$', 
		'$c_title$', 
		'$c_contract_end_dt$', 
		'$contract_law$', 
		'$c_work_info$', 
		
		'$contract_term$',
		'$hope_attach_info$',
		'$hope_company_info$',
		'$partner_addr$',
		'$partner_bizno$',
		'$partner_code$',
		'$partner_name$',
		'$partner_owner$',
		'$private_reason$',
		'$pm_email$',
		'$pm_hp$',
		'$pm_name$',
		'$contract_amt$',
		'$contract_amt_info$',
		'$joint_contract_method$',	
		'$c_contract_form1$', 
		'$c_contract_form2$', 		
			
		now(), 
		'$created_by$', 
		null, 
		null,
		
		'$open_amt$',
		'$consbalance_amt$',
		'$resApply_amt$',
		'$balance_amt$',
		'$result_amt_info_html$',
		'$c_pay_type_info$'
		
				
		
		);
		
		<selectKey keyProperty="seq" resultClass="int">
			SELECT LAST_INSERT_ID();
		</selectKey>	

	</insert>
	
	
	<insert	id="ContractSQL.InsertConclusionChange" parameterClass="HashMap" >
	
		INSERT INTO cust_sto.t_purchase_conclusion_change
		(
		seq, 
		change_item_info, 
		work_info_before, 
		work_info_after, 
		contract_end_dt_before, 
		contract_end_dt_after, 
		contract_amt_info_before, 
		contract_amt_info_after, 
		contract_amt_after,
		contract_amt_kor_after, 
		change_etc, 
		change_reason, 
		created_dt, 
		created_by 
		)
		VALUES(
		'$seq$', 
		'$change_item_info$', 
		'$work_info_before$', 
		'$work_info_after$',  
		'$contract_end_dt_before$',  
		'$contract_end_dt_after$',  
		'$contract_amt_info_before$',  
		'$contract_amt_info_after$',  
		'$contract_amt_after$',  
		'$contract_amt_kor_after$',  
		'$change_etc$',  
		'$change_reason$',  		
		now(),  
		'$created_by$'  
		);
		
		<selectKey keyProperty="change_seq" resultClass="int">
			SELECT LAST_INSERT_ID();
		</selectKey>		

	</insert>	
			
	
	<update	id="ContractSQL.UpdateContract" parameterClass="HashMap" >
		UPDATE cust_sto.t_purchase_contract
		SET
		public_info='$public_info$',
		write_comp_seq='$write_comp_seq$', 
		write_dept_seq='$write_dept_seq$', 
		write_emp_seq='$write_emp_seq$', 
		write_dt='$write_dt$', 
		noti_type='$noti_type$', 
		budget_type='$budget_type$', 
		target_type='$target_type$', 
		title='$title$', 
		contract_start_dt='$contract_start_dt$', 
		contract_end_dt='$contract_end_dt$', 
		amt='$amt$', 
		amt_kor='$amt_kor$', 
		std_amt='$std_amt$', 
		tax_amt='$tax_amt$', 
		base_law='$base_law$', 
		pay_type_info='$pay_type_info$', 
		work_info='$work_info$', 
		emergency_yn='$emergency_yn$', 
		restrict_sector_yn='$restrict_sector_yn$', 
		compete_type='$compete_type$', 
		restrict_sector_info='$restrict_sector_info$', 
		restrict_area_info='$restrict_area_info$', 
		nominee_info='$nominee_info$', 
		decision_type_info='$decision_type_info$', 
		contract_form1='$contract_form1$', 
		contract_form2='$contract_form2$', 
		contract_form3='$contract_form3$', 
		rebid_yn='$rebid_yn$', 
		eorder_use_yn='$eorder_use_yn$', 
		modify_dt=now(), 
		modify_by='$created_by$',
		construction_dt='$construction_dt$',
		completion_dt='$completion_dt$',
		baselaw_reason='$baselaw_reason$'
		

		
		WHERE seq='$seq$'; 
	</update>
	
	
	<update	id="ContractSQL.UpdateContractAdmin" parameterClass="HashMap" >
		UPDATE cust_sto.t_purchase_contract
		SET
		modify_dt=now()
		,modify_by='$created_by$'
		<isNotEmpty property="contract_no">
		,contract_no='$contract_no$' 
		</isNotEmpty>
		<isNotEmpty property="contract_start_dt">
		,contract_start_dt='$contract_start_dt$' 
		</isNotEmpty>
		<isNotEmpty property="bidder_cnt">
		 ,bidder_cnt='$bidder_cnt$'
		</isNotEmpty>
		<isNotEmpty property="pre_notice_end_dt">
		 ,pre_notice_end_dt='$pre_notice_end_dt$'
		</isNotEmpty>	
		<isNotEmpty property="notice_start_dt">
		 ,notice_start_dt='$notice_start_dt$'
		</isNotEmpty>	
		<isNotEmpty property="notice_end_dt">
		 ,notice_end_dt='$notice_end_dt$'
		</isNotEmpty>	
		<isNotEmpty property="re_notice_start_dt">
		 ,re_notice_start_dt='$re_notice_start_dt$'
		</isNotEmpty>	
		<isNotEmpty property="re_notice_end_dt">
		 ,re_notice_end_dt='$re_notice_end_dt$'
		</isNotEmpty>
		<isNotEmpty property="contract_change_dt">
		 ,contract_change_dt='$contract_change_dt$'
		</isNotEmpty>				
		<isNotEmpty property="contract_attach_info">
		 ,contract_attach_info='$contract_attach_info$'
		</isNotEmpty>														
		<isNotEmpty property="submit_attach_info">
		 ,submit_attach_info='$submit_attach_info$'
		</isNotEmpty>	
		<isNotEmpty property="construction_dt">
		,construction_dt='$construction_dt$' 
		</isNotEmpty>
		<isNotEmpty property="completion_dt">
		,completion_dt='$completion_dt$' 
		</isNotEmpty>
		
		
		WHERE seq='$seq$'; 
	</update>
	
			
	
	<update	id="ContractSQL.UpdateConclusion" parameterClass="HashMap" >
		UPDATE cust_sto.t_purchase_contract
		SET
		public_info='$public_info$',
		c_write_comp_seq='$c_write_comp_seq$', 
		c_write_dept_seq='$c_write_dept_seq$', 
		c_write_emp_seq='$c_write_emp_seq$', 
		c_write_dt='$c_write_dt$',		 
		c_budget_type='$c_budget_type$', 
		c_target_type='$c_target_type$', 
		c_title='$c_title$', 
		c_contract_end_dt='$c_contract_end_dt$', 
		contract_law='$contract_law$', 
		c_work_info='$c_work_info$',
		joint_contract_method='$joint_contract_method$',
		c_contract_form1='$c_contract_form1$',
		c_contract_form2='$c_contract_form2$', 
		contract_term='$contract_term$',
		hope_attach_info='$hope_attach_info$',
		hope_company_info='$hope_company_info$',
		partner_addr='$partner_addr$',
		partner_bizno='$partner_bizno$',
		partner_code='$partner_code$',
		partner_name='$partner_name$',
		partner_owner='$partner_owner$',
		private_reason='$private_reason$',
		pm_email='$pm_email$',
		pm_hp='$pm_hp$',
		pm_name='$pm_name$',
		contract_amt='$contract_amt$',
		contract_amt_info='$contract_amt_info$',			
		contract_amt_kor='$contract_amt_kor$',
		modify_dt=now(), 
		modify_by='$created_by$',
				
		open_amt='$open_amt$',
		consbalance_amt='$consbalance_amt$',
		resApply_amt='$resApply_amt$',
		balance_amt='$balance_amt$',
		result_amt_info_html='$result_amt_info_html$',
		c_pay_type_info='$c_pay_type_info$'
		
		
		WHERE seq='$seq$'; 
	</update>	
	
	<update	id="ContractSQL.UpdateConclusionChange" parameterClass="HashMap" >
		UPDATE cust_sto.t_purchase_conclusion_change
		SET
		change_item_info = '$change_item_info$',
		work_info_before = '$work_info_before$', 
		work_info_after = '$work_info_after$',
		contract_end_dt_before = '$contract_end_dt_before$',  
		contract_end_dt_after = '$contract_end_dt_after$',
		contract_amt_info_before = '$contract_amt_info_before$',   
		contract_amt_info_after = '$contract_amt_info_after$',
		contract_amt_after = '$contract_amt_after$',
		contract_amt_kor_after = '$contract_amt_kor_after$',  
		change_etc = '$change_etc$',   
		change_reason = '$change_reason$',   
		modify_dt=now(), 
		modify_by='$created_by$'

		WHERE change_seq='$change_seq$'; 
	</update>		
	
	<update	id="ContractSQL.UpdateMeet" parameterClass="HashMap" >
		UPDATE cust_sto.t_purchase_contract
		SET
		meet_dt='$meet_dt$', 
		meet_place='$meet_place$', 
		meet_method_pt='$meet_method_pt$', 
		meet_method_qa='$meet_method_qa$', 
		meet_amt_spent='$meet_amt_spent$',
		result_c_amt_info_html='$result_c_amt_info_html$', 
		modify_dt=now(), 
		modify_by='$created_by$'
		
		WHERE seq='$seq$'; 
	</update>
	
	<update	id="ContractSQL.UpdateResult" parameterClass="HashMap" >
		UPDATE cust_sto.t_purchase_contract
		SET
		
		<isNotEmpty property="nominee_info">
		nominee_info='$nominee_info$', 
		</isNotEmpty>			
		
		result_judges_info='$result_judges_info$',
		result_judges_info_html=#result_judges_info_html#, 
		result_score_info='$result_score_info$', 
		result_score_info_html=#result_score_info_html#, 
		result_target_info='$result_target_info$', 
		result_amt='$result_amt$', 
		modify_dt=now(), 
		modify_by='$created_by$'

		WHERE seq='$seq$'; 
	</update>
	
	<select	id="ContractSQL.SelectConclusionPaymentList_TOTALCOUNT" parameterClass="HashMap" resultClass="Integer">
	
		SELECT   COUNT(*)
        FROM $DB_NEOS$A_DRAFTINFO df
        INNER JOIN $DB_NEOS$A_RECORDINFO ri ON df.C_DIKEYCODE  = ri.c_dikeycode 
        INNER JOIN $DB_NEOS$A_DOCINFO di ON df.c_dikeycode  = di.c_dikeycode
        INNER JOIN cust_sto.t_purchase_payment_doc_info pdi ON df.c_dikeycode  = pdi.res_doc_seq
        where
        pdi.seq = '$seq$' and pdi.outProcessCode = 'CONCLUSION'
        and df.c_diwriteday BETWEEN '$fromDate$' AND '$toDate$'		
		
	</select>	
	
	<select	id="ContractSQL.SelectConclusionPaymentList" parameterClass="HashMap" resultClass="HashMap">
		
        SELECT    CTE.C_DIKEYCODE AS C_DIKEYCODE
             ,    CTE.C_DIORGCODE AS C_DIORGCODE
             ,    DATE_FORMAT(CTE.C_DIWRITEDAY,'%Y-%m-%d')  AS C_DIWRITEDAY
             ,    CTE.C_DIWRITETIME AS C_DIWRITETIME
             ,    IF(IFNULL(CTE.c_distatus, '008') = '009', '008', IFNULL(CTE.c_distatus, '008')) AS C_DISTATUS
             ,    CONCAT($DB_NEOS$GET_CODE_DETAIL_INFO('0', 'COM109', IF(IFNULL(CTE.c_distatus, '008') = '009', '008', IFNULL(CTE.c_distatus, '008')) , 'kr') 
                          , CASE WHEN IFNULL(c_dilastuserkey, '') = '' THEN '' ELSE IFNULL(CONCAT('(', $DB_NEOS$FN_GetMultiname('kr', 'emp',c_dilastuserkey), ')'),'') END ) AS DOCSTSNAME
             ,    CTE.c_didoctype AS DOCTYPE_CODE
             ,    CTE.c_dititle AS C_DITITLE
             ,    CASE WHEN IF(IFNULL(CTE.c_distatus, '008') = '009', '008', IFNULL(CTE.c_distatus, '008')) = '008' THEN '000' ELSE C_DIDOCGRADE END AS C_DIDOCGRADE
             ,    CTE.C_DIUSERKEY AS C_DIUSERKEY
             ,    CTE.C_DIPROPERTY AS C_DIPROPERTY
             ,    CTE.C_TIKEYCODE AS C_TIKEYCODE
             ,    IFNULL(D_C_DIFLAG, '0') AS C_DIFLAG
             ,    CTE.C_DIDOCFLAG AS C_DIDOCFLAG
             ,    $DB_NEOS$GET_CODE_DETAIL_INFO('0', 'COM103', CTE.C_DIDOCFLAG , 'kr') AS C_DIDOCFLAGNAME
             ,    $DB_NEOS$GET_CODE_DETAIL_Info('0', 'COM102', IFNULL(CTE.D_C_DIFLAG, '0') , 'kr') AS C_DIFLAGNAME
             ,    IFNULL(CTE.c_disecretgrade,'000') AS C_DISECRETGRADE
             ,    ((SELECT COUNT(*)  FROM $DB_NEOS$A_KYULJAELINEINFO WHERE C_DIKEYCODE = CTE.C_DIKEYCODE AND C_KLUSERTYPE  = '128') + (SELECT COUNT(*)  FROM $DB_NEOS$A_doc_audit_info WHERE C_DIKEYCODE = CTE.C_DIKEYCODE)) AS AUDITCOUNT
             ,    IFNULL(( SELECT 'Y' FROM $DB_NEOS$A_KYULJAELINEINFO WHERE C_DIKEYCODE = CTE.C_DIKEYCODE AND C_KLUSERTYPE > '001' AND C_KLSTATUS IS NULL LIMIT 1 ), 'N') MIDDLE_APPROVALYN
             ,    C_RIDOCFULLNUM   AS C_RIDOCFULLNUM
             ,    C_RIDELETEOPT    AS C_RIDELETEOPT
             ,    CASE WHEN IFNULL(C_RIDOCNUM, '') = '' THEN '-' ELSE DATE_FORMAT(C_RIREGDATE,'%Y-%m-%d') END AS C_RIREGDATE
             ,    P_PAYTYPE AS P_PAYTYPE
             ,    P_PAYCNT AS P_PAYCNT
             ,    P_RESAMT AS P_RESAMT
             ,    P_REMAINAMT AS P_REMAINAMT                 
             
        FROM  ( 
        
              SELECT 
                       df.*
                   ,   ri.C_RIDOCNUM
                   ,   di.c_tikeycode
                   ,   di.C_DIFILETYPE
                   ,   di.c_dititle
                   ,   di.c_disecretgrade
                   ,   di.c_dipublic
                   ,   di.c_digrade
                   ,   di.c_didocflag
                   ,   di.c_diflag AS D_C_DIFLAG
                   ,   C_RIDOCFULLNUM
                   ,   C_RIDELETEOPT
                   ,   C_RIREGDATE
                   ,   case pdi.pay_type when 'A' then '선금' when 'B' then '중도금' when 'C' then '잔금' else '' end as P_PAYTYPE
                   ,   concat(pdi.pay_cnt, '차') as P_PAYCNT
                   ,   concat(format(pdi.res_amt,0), ' 원') as P_RESAMT
                   ,   concat(format(
						(select
						ifnull(pc.contract_amt - sum(a.res_amt), pc.contract_amt) 
						from cust_sto.t_purchase_payment_doc_info a
						join $DB_NEOS$t_exnp_resdoc b on a.res_doc_seq = b.res_doc_seq and IFNULL(b.doc_seq, '') != '' and IFNULL(b.doc_status, '008') IN ( '001', '002', '003', '004', '006', '008', '009', '20', '30', '90' )
						where a.outProcessCode = pdi.outProcessCode and a.seq = pdi.seq and cast(a.res_doc_seq as unsigned) <![CDATA[ <= ]]> cast(pdi.res_doc_seq as unsigned)
						),0), ' 원') as P_REMAINAMT             
                         
              FROM $DB_NEOS$A_DRAFTINFO df
              INNER JOIN $DB_NEOS$A_RECORDINFO ri ON df.C_DIKEYCODE  = ri.c_dikeycode 
              INNER JOIN $DB_NEOS$A_DOCINFO di ON df.c_dikeycode  = di.c_dikeycode
              INNER JOIN $DB_NEOS$t_exnp_resdoc er ON df.c_dikeycode  = er.doc_seq
              
              INNER JOIN cust_sto.t_purchase_payment_doc_info pdi ON er.res_doc_seq  = pdi.res_doc_seq and pdi.outProcessCode = 'CONCLUSION'
              INNER JOIN cust_sto.t_purchase_contract pc on pdi.seq = pc.seq
              
              where
              pdi.seq = '$seq$'
              and df.c_diwriteday BETWEEN '$fromDate$' AND '$toDate$'

         ) CTE
         ORDER BY c_diwriteday DESC, c_diwritetime DESC, c_dikeycode DESC  
		 LIMIT $startNum$ ,  $endNum$
		
	</select>	
	
	
	<select	id="ContractSQL.SelectConclusionPaymentAmt" parameterClass="HashMap" resultClass="HashMap">

		select 
		ifnull(pc.contract_amt,0) as contract_amt
		,ifnull((
		select sum(a.res_amt)  from cust_sto.t_purchase_payment_doc_info a
		join $DB_NEOS$t_exnp_resdoc b on a.res_doc_seq  = b.res_doc_seq and IFNULL(b.doc_seq, '') != '' and IFNULL(b.doc_status, '008') IN ( '001', '002', '003', '004', '006', '008', '009', '20', '30', '90' )
		where a.outProcessCode = 'CONCLUSION' and a.seq = pc.seq
		),0) as res_amt_total
		from cust_sto.t_purchase_contract pc
		where pc.seq = '$seq$'
	
	</select>
	
	
	<select	id="ContractSQL.SelectConclusionPaymentDocInfo" parameterClass="HashMap" resultClass="HashMap">

		select *  from cust_sto.t_purchase_payment_doc_info where res_doc_seq = '$resDocSeq$'
	
	</select>
	
	
	<select	id="ContractSQL.SelectConclusionPaymentNextDocInfo" parameterClass="HashMap" resultClass="HashMap">

		select
		pdi.seq, pdi.outProcessCode, pdi.res_doc_seq, pdi.pay_type, pdi.pay_cnt + 1 as pay_cnt, pdi.res_amt, pdi.remain_amt, pdi.created_dt, pdi.created_by
		from cust_sto.t_purchase_payment_doc_info pdi
		join neos.t_exnp_resdoc er1 on pdi.outProcessCode = er1.out_process_interface_id  and pdi.seq = er1.out_process_interface_m_id and er1.res_doc_seq = '$resDocSeq$'
		join neos.t_exnp_resdoc er2 on pdi.res_doc_seq = er2.res_doc_seq and IFNULL(er2.doc_seq, '') != '' and IFNULL(er2.doc_status, '008') IN ( '001', '002', '003', '004', '006', '008', '009', '20', '30', '90' )
		order by pdi.pay_type desc, pdi.pay_cnt desc
		limit 1;
	
	</select>			
	
	
	<select	id="ContractSQL.SelectConclutionPaymentDocInfoCheck" parameterClass="HashMap" resultClass="HashMap">

		select
		(
			select case when count(*) > 0 then 'Y' else 'N' end 
			from $DB_NEOS$t_exnp_resdoc a
			join cust_sto.t_purchase_payment_doc_info b on a.res_doc_seq = '$resDocSeq$' and a.out_process_interface_id = b.outProcessCode and a.out_process_interface_m_id = b.seq and a.res_doc_seq != b.res_doc_seq and b.pay_type = '$payType$' and b.pay_cnt = '$payCnt$'
			join $DB_NEOS$t_exnp_resdoc c on b.res_doc_seq = c.res_doc_seq and IFNULL(c.doc_seq, '') != '' and IFNULL(c.doc_status, '008') IN ( '001', '002', '003', '004', '006', '008', '009', '20', '30', '90' )		
		) as FAIL_DUPLICATE,
		(
			select
			case when pc.contract_amt - ifnull(sum(pdi.res_amt),0) - $tryAmt$ <![CDATA[ < ]]> 0 then 'Y' else 'N' end
			from cust_sto.t_purchase_contract pc
			join $DB_NEOS$t_exnp_resdoc a on pc.seq = a.out_process_interface_m_id and a.out_process_interface_id = 'CONCLUSION' and a.res_doc_seq = '$resDocSeq$'
			left join $DB_NEOS$t_exnp_resdoc b on a.out_process_interface_id = b.out_process_interface_id and a.out_process_interface_m_id =b.out_process_interface_m_id and IFNULL(b.doc_seq, '') != '' and IFNULL(b.doc_status, '008') IN ( '001', '002', '003', '004', '006', '008', '009', '20', '30', '90' )
			left join cust_sto.t_purchase_payment_doc_info pdi on pdi.res_doc_seq = b.res_doc_seq 		
		) as FAIL_RES_AMT_OVER
	
	</select>	
	
	
	<delete id="ContractSQL.deleteContractList" parameterClass="HashMap">
			delete from cust_sto.t_purchase_contract where seq = '$seq$' and (doc_sts is null  or doc_sts = '')
	</delete>
	
	
	 <select id="ContractSQL.SelectConclusionConsDocInfo" parameterClass="HashMap" resultClass="HashMap">
	
	  select
	  b.cons_doc_seq , b.cons_seq 
	  from $DB_NEOS$t_exnp_consdoc a
	  join $DB_NEOS$t_exnp_conshead b on a.cons_doc_seq =b.cons_doc_seq 
	  where a.out_process_interface_id = 'Conclu01' and a.out_process_interface_m_id = '$seq$' limit 1;  
	 
	 </select> 	
	 
	 <select id="ContractSQL.SelectConsDocInfo" parameterClass="HashMap" resultClass="HashMap">
	
	  select
	  cons_doc_seq,
	  doc_seq,
	  doc_status,
	  out_process_interface_id,
	  out_process_interface_m_id,
	  out_process_interface_d_id
	  from $DB_NEOS$t_exnp_consdoc 
	  where out_process_interface_m_id = '$seq$'  
	 
	 </select> 	
	 
	<delete id="ContractSQL.deleteConsHead" parameterClass="HashMap">
			delete from $DB_NEOS$t_exnp_conshead where cons_doc_seq = '$cons_doc_seq$'
	</delete>
	
	<delete id="ContractSQL.deleteConsBudget" parameterClass="HashMap">
			delete from $DB_NEOS$t_exnp_consbudget where cons_doc_seq = '$cons_doc_seq$'
	</delete>
		 
	<delete id="ContractSQL.deleteConsDoc" parameterClass="HashMap">
			delete from $DB_NEOS$t_exnp_consdoc where out_process_interface_m_id = '$seq$'
	</delete>
	
	<delete id="ContractSQL.deleteBudgetInfo" parameterClass="HashMap">
			delete from cust_sto.t_purchase_budget_info where seq = '$seq$'
	</delete>
	
		
</sqlMap>