<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="MenuManageDAO">	
	<typeAlias  alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>

	<select id="MenuManageDAO.selectTreeMenu" parameterClass="hashmap" resultClass="egovMap" >
	    /* MenuManageDAO.selectTreeMenu - mariaDB */
	    SELECT C.menu_no
	         , C.menu_gubun
	         , C.upper_menu_no
	         , $DB_NEOS$FN_GetMultiLang(#langCode#,D.menu_nm_multi) as name
	         , D.menu_dc
	         , C.url_path
	         , C.sso_use_yn
	         , A.LEVEL AS lvl
	         , (SELECT COUNT(menu_no) FROM $DB_NEOS$t_co_menu WHERE upper_menu_no = C.menu_no AND IFNULL(delete_yn , 'N') <![CDATA[ <> ]]> 'Y') AS child_count
	         , "" AS checked
	         , IF( IFNULL(C.url_path, '') = '' , 'folder' , 'file') AS spriteCssClass
	         , menu_ordr
	    FROM    (
				SELECT  $DB_NEOS$get_adm_menu_connect_by_id2(menu_no,'USER') AS menu_no, @level AS LEVEL
				FROM    (
					SELECT  @start_with := 0,
						@menu_no := @start_with,
						@level := 0
					) vars, $DB_NEOS$t_co_menu
				WHERE   @menu_no IS NOT NULL
		         ) A
	    INNER JOIN $DB_NEOS$t_co_menu C ON C.menu_no = A.menu_no
	    LEFT OUTER JOIN $DB_NEOS$v_t_co_menu_multi D ON C.menu_no = D.menu_no			
	    WHERE C.menu_gubun = #menuGubun#
	    AND   IFNULL(delete_yn , 'N') <![CDATA[ <> ]]> 'Y'
	    GROUP BY A.menu_no
	    ORDER BY lvl , menu_ordr	 						
	</select>
	
	<select id="MenuManageDAO.selectTreeAdmMenu" parameterClass="hashmap" resultClass="egovMap" >
	    /* MenuManageDAO.selectTreeAdmMenu - mariaDB */
	    SELECT C.menu_no
	         , C.menu_gubun
	         , C.upper_menu_no
	         , $DB_NEOS$FN_GetMultiLang(#langCode#,D.menu_nm_multi) as name
	         , D.menu_dc
	         , C.url_path
	         , C.sso_use_yn
	         , A.LEVEL AS lvl
	         ,(SELECT COUNT(menu_no) FROM $DB_NEOS$t_co_menu_adm WHERE upper_menu_no = C.menu_no AND  IFNULL(delete_yn , 'N') <![CDATA[ <> ]]> 'Y') AS child_count
	         , "" AS checked
	         , IF( IFNULL(C.url_path, '') = '' , 'folder' , 'file') AS spriteCssClass
	         , menu_ordr
	    FROM    (
				SELECT  $DB_NEOS$get_adm_menu_connect_by_id2(menu_no,'ADMIN') AS menu_no, @level AS LEVEL
				FROM    (
					SELECT  @start_with := 0,
						@menu_no := @start_with,
						@level := 0
					) vars, $DB_NEOS$t_co_menu_adm
				WHERE   @menu_no IS NOT NULL
		         ) A
	    INNER JOIN $DB_NEOS$t_co_menu_adm C ON C.menu_no = A.menu_no
	    LEFT OUTER JOIN $DB_NEOS$v_t_co_menu_adm_multi D ON C.menu_no = D.menu_no
	    WHERE C.menu_gubun= #menuGubun#
	    AND   C.menu_auth_type = 'ADMIN'
	    AND   IFNULL(delete_yn , 'N') <![CDATA[ <> ]]> 'Y'
	    GROUP BY A.menu_no
	    ORDER BY lvl , menu_ordr	 						
	</select>
	
	<select id="MenuManageDAO.getMenuChlidCnt" parameterClass="hashMap" resultClass="int">
	    /* MenuManageDAO.getChildCnt - mariadb */
	    SELECT COUNT(*)
	      <isEqual property="type" compareValue="USER">
	    FROM $DB_NEOS$t_co_menu
		  </isEqual>
		  <isEqual property="type" compareValue="ADMIN">
	    FROM $DB_NEOS$t_co_menu_adm
		  </isEqual>
	    WHERE UPPER_MENU_NO = #menuNo#
	    AND   IFNULL(delete_yn , 'N') <![CDATA[ <> ]]> 'Y'	
	</select>
	
	<select id="MenuManageDAO.getMenuNo" parameterClass="hashMap" resultClass="int">
	      /* MenuManageDAO.getMenuNo - mariadb */
<!-- 	      SELECT IFNULL((SELECT MAX(menu_no)+1 FROM $tbName$ WHERE menu_gubun = #menuGubun#)  -->
<!-- 	                 ,  CAST( REPLACE(#menuGubun#, 'MENU', '') AS UNSIGNED ) * 100000000 )AS menuNo -->
<!-- 		  FROM DUAL -->
	      SELECT MAX(menu_no)+1 AS menuNo
	      <isEqual property="type" compareValue="USER">
		  FROM $DB_NEOS$t_co_menu
		  </isEqual>
		  <isEqual property="type" compareValue="ADMIN">
		  FROM $DB_NEOS$t_co_menu_adm
		  </isEqual>
	</select>
	<insert id="MenuManageDAO.insertMenu" parameterClass="hashMap" >	
	    /* MenuManageDAO.insertMenu - mariadb */    
	<isEqual property="type" compareValue="USER">	
		INSERT INTO $DB_NEOS$t_co_menu
			(
				MENU_GUBUN, MENU_NO, UPPER_MENU_NO, MENU_ORDR, URL_GUBUN, URL_PATH, USE_YN, SSO_USE_YN, PUBLIC_YN, MENU_DEPTH, CREATE_SEQ, CREATE_DATE
			)
			VALUES
			( 			  
				#menuGubun#, #menuNo#, #upperMenuNo#, #menuOrdr#, #urlGubun#, #urlPath#, #useChk#, #ssoUseYn#, #publicYn#, $DB_NEOS$get_menu_depth(#upperMenuNo#,#menuGubun#), #loginVO.uniqId#, now()
			)	
	</isEqual>			
	
	<isEqual property="type" compareValue="ADMIN">	
	
	INSERT INTO $DB_NEOS$t_co_menu_adm
			(
				MENU_GUBUN,MENU_ADM_GUBUN, MENU_AUTH_TYPE, MENU_NO, UPPER_MENU_NO, MENU_ORDR, URL_GUBUN, URL_PATH, USE_YN, PUBLIC_YN ,MENU_DEPTH, CREATE_SEQ, CREATE_DATE
			)
			VALUES
			( 			  
				#menuGubun#,#menuGubun#,'ADMIN', #menuNo#, #upperMenuNo#, #menuOrdr#, #urlGubun#, #urlPath#, #useChk#, #publicYn# , $DB_NEOS$get_menu_depth(#upperMenuNo#,#menuGubun#), #loginVO.uniqId#, now()
			)	
	</isEqual>		
		
	</insert>
 
	<insert id="MenuManageDAO.insertMenuMulti" parameterClass="hashMap" >	
        /* MenuManageDAO.insertMenuMulti - mariadb */
	<isEqual property="type" compareValue="USER">
		INSERT INTO $DB_NEOS$t_co_menu_multi
				(
					MENU_NO, 
					LANG_CODE, 
					MENU_NM, 
					MENU_DC,
					CREATE_SEQ, 
					CREATE_DATE
				)
				VALUES
				( 			  
					#menuNo# , 				
					#langKind#, 
					#menuNm#, 
					#menuDc#,
					#loginVO.uniqId# ,
					 now()
				)	
	</isEqual>
		
	<isEqual property="type" compareValue="ADMIN">
	    
		INSERT INTO $DB_NEOS$t_co_menu_adm_multi
				(
					MENU_NO, 
					LANG_CODE, 
					MENU_NM, 
					MENU_DC,
					CREATE_SEQ, 
					CREATE_DATE
				)
				VALUES
				( 			  
					#menuNo# , 				
					#langKind#, 
					#menuNm#, 
					#menuDc#,
					#loginVO.uniqId# ,
				    now()
				 )
		</isEqual>
	</insert>	
	

<!-- 	<insert id="MenuManageDAO.insertMenuAuth" parameterClass="hashMap" > -->
	 		
<!-- 		<![CDATA[ -->

<!-- 			INSERT INTO $DB_NEOS$t_co_menu_auth -->
<!-- 			( -->
<!-- 				MENU_NO, AUTHOR_CODE -->
<!-- 			) -->
<!-- 			VALUES -->
<!-- 			( 			   -->
<!-- 				#menuNo#, #authorCode# -->
<!-- 			)						 -->
<!-- 		]]> -->
<!-- 	</insert>	 -->
    
	<update id="MenuManageDAO.updateMenuDelYn" parameterClass="hashMap">
	        /* MenuManageDAO.updateMenuDelYn - mariadb */
 			<isEqual property="type" compareValue="USER">
			UPDATE $DB_NEOS$t_co_menu 
			   SET 				    
				    DELETE_YN		    =	'Y'
				   ,MODIFY_SEQ			=   #loginVO.uniqId#
				   ,MODIFY_DATE			=   now()
			WHERE MENU_NO = #menuNo#	
			</isEqual>
		
			<isEqual property="type" compareValue="ADMIN">
			UPDATE $DB_NEOS$t_co_menu_adm 
			   SET 				    
				    DELETE_YN		    =	'Y'
				   ,MODIFY_SEQ			=   #loginVO.uniqId#
				   ,MODIFY_DATE			=   now()
			WHERE MENU_NO = #menuNo#	
			</isEqual>
 	</update>    
  
 	<delete id="MenuManageDAO.deleteMenu" parameterClass="hashMap">
 	        /* MenuManageDAO.deleteMenu - mariadb */ 
 			<isEqual property="type" compareValue="USER">
 			DELETE FROM $DB_NEOS$t_co_menu
 			 WHERE MENU_NO	= #menuNo#
 			</isEqual>
 			<isEqual property="type" compareValue="ADMIN">
 			DELETE FROM $DB_NEOS$t_co_menu_adm
 			 WHERE MENU_NO	= #menuNo#
 			</isEqual>
 			 
 	</delete>
 	
 	<delete id="MenuManageDAO.deleteMenuMulti" parameterClass="hashMap">
 	        /* MenuManageDAO.deleteMenuMulti - mariadb */ 
 			<isEqual property="type" compareValue="USER">
 			DELETE FROM $DB_NEOS$t_co_menu_multi
 			 WHERE MENU_NO	= #menuNo#
 			</isEqual>
 			<isEqual property="type" compareValue="ADMIN">
 			DELETE FROM $DB_NEOS$t_co_menu_adm_multi
 			 WHERE MENU_NO	= #menuNo#
 			</isEqual> 			 
 	</delete>
 	
 	<delete id="MenuManageDAO.deleteMenuAuth" parameterClass="hashMap">
 	        /* MenuManageDAO.deleteMenuAuth - mariadb */
 	        DELETE FROM $DB_NEOS$t_co_menu_auth
 			WHERE MENU_NO	= #menuNo#
 			 
 	</delete>

	<update id="MenuManageDAO.updateMenu" parameterClass="hashMap">
	        /* MenuManageDAO.updateMenu - mariadb */
 			<isEqual property="type" compareValue="USER">
			UPDATE $DB_NEOS$t_co_menu 
			   SET 				    
				    UPPER_MENU_NO		=	#upperMenuNo#
				   ,USE_YN				=	#useChk#
				   ,SSO_USE_YN			=	#ssoUseYn#
				   ,URL_GUBUN           =   #urlGubun#
				   ,URL_PATH			=   #urlPath#
				   ,MENU_ORDR           =   #menuOrdr#
				   ,PUBLIC_YN           =   #publicYn#
				   ,MODIFY_SEQ			=   #loginVO.uniqId#
				   ,MODIFY_DATE			=   now()
			WHERE MENU_NO = #menuNo#	
			</isEqual>
		
			<isEqual property="type" compareValue="ADMIN">
			UPDATE $DB_NEOS$t_co_menu_adm 
			   SET 				    
				    UPPER_MENU_NO		=	#upperMenuNo#
				   ,USE_YN				=	#useChk#
				   ,URL_GUBUN           =   #urlGubun#
				   ,URL_PATH			=   #urlPath#
				   ,MENU_ORDR           =   #menuOrdr#
				   ,PUBLIC_YN           =   #publicYn#
				   ,MODIFY_SEQ			=   #loginVO.uniqId#
				   ,MODIFY_DATE			=   now()
			WHERE MENU_NO = #menuNo#	
			</isEqual>
 	</update>

	<update id="MenuManageDAO.updateMenuDetail" parameterClass="hashMap">
	    /* MenuManageDAO.updateMenuDetail - mariadb */
		<isEqual property="type" compareValue="USER">
		INSERT INTO $DB_NEOS$t_co_menu_multi
	    </isEqual>	
		<isEqual property="type" compareValue="ADMIN">
		INSERT INTO $DB_NEOS$t_co_menu_adm_multi
	    </isEqual>	
		        SET  MENU_NO = #menuNo# 
				   , LANG_CODE = #langKind#  
				   , MENU_NM = #menuNm#
				   , MENU_DC = #menuDc#
				   , CREATE_SEQ = #loginVO.uniqId#
				   , CREATE_DATE = NOW()
			ON DUPLICATE KEY UPDATE
				     MENU_NM = #menuNm#
				   , MENU_DC = #menuDc#
				   , MODIFY_SEQ = #loginVO.uniqId#
				   , MODIFY_DATE = NOW() 
 	</update>
 	
 	<select id="MenuManageDAO.selectComboBOxList" parameterClass="hashMap" resultClass="egovMap">
	
		 SELECT   f.menu_no as upper_menu_no
  		        , $DB_NEOS$FN_GetMultiLang(#loginVO.langCode#,f.menu_nm_multi) as upper_menu_nm 
  		       <isEqual property="type" compareValue="USER">
  		       FROM $DB_NEOS$t_co_menu e, $DB_NEOS$v_t_co_menu_multi f 
  		       </isEqual>
  		       <isEqual property="type" compareValue="ADMIN">
  		       FROM $DB_NEOS$t_co_menu_adm e, $DB_NEOS$v_t_co_menu_adm_multi f 
  		       </isEqual>
  		       WHERE e.menu_no = f.menu_no
  		         AND e.menu_gubun = #menuGubun#
  		       <isEqual property="type" compareValue="ADMIN">
  		         AND e.menu_auth_type = 'ADMIN'
  		       </isEqual>
  		       <isEqual property="type" compareValue="USER">
  		         AND IFNULL(E.menu_type,'') <![CDATA[ <>  ]]>'eaBox'
  		       </isEqual>
  		         AND IFNULL(e.delete_yn , 'N') <![CDATA[ <> ]]> 'Y'
  		         order by menu_ordr
	</select>
	
	<select id="MenuManageDAO.selectMenuCompList" parameterClass="hashmap" resultClass="egovMap">
 	  /* MenuManageDAO.selectMenuCompList - mariaDB */
 	  
 	  SELECT b.comp_seq as comp_seq_list
  		   , $DB_NEOS$FN_GetMultiLang(#loginVO.langCode#,c.comp_name_multi) as comp_name_list
        FROM $DB_NEOS$t_co_menu a 
            ,$DB_NEOS$t_co_menu_comp b 
            ,$DB_NEOS$v_t_co_comp_multi c
       WHERE a.menu_no = b.menu_no
         and b.comp_seq = c.comp_seq	
         and a.menu_no = #menuNo#
         and c.group_seq = #loginVO.groupSeq#	  		        
 	
 	</select>
	
	<select id="MenuManageDAO.menuInfoView" parameterClass="hashmap" resultClass="egovMap" >
	   /* MenuManageDAO.menuInfoView - mariadb */ 
	   SELECT	   
	          a.menu_gubun
	   		, a.comp_seq
	        , a.menu_img_path
	        , a.menu_no
	        , a.upper_menu_no
	        , a.menu_ordr
	        , a.use_yn
	        , a.url_gubun
	        , a.url_path
	        , a.sso_use_yn
	        , a.menu_depth
	        , a.menu_img_class
	        , $DB_NEOS$get_menu_adm_info('1',a.menu_no,'kr','user') AS menu_nm_kr
	        , $DB_NEOS$get_menu_adm_info('1',a.menu_no,'en','user') AS menu_nm_en 
	        , $DB_NEOS$get_menu_adm_info('1',a.menu_no,'jp','user') AS menu_nm_jp
	        , $DB_NEOS$get_menu_adm_info('1',a.menu_no,'cn','user') AS menu_nm_cn
	        , b.menu_dc
	        , A.public_yn
  		     FROM $DB_NEOS$t_co_menu A, $DB_NEOS$v_t_co_menu_multi B
	    WHERE A.menu_no = B.menu_no  
	     AND a.menu_no =  #menuNo#
	     LIMIT 1
		

	</select>	
	
	<select id="MenuManageDAO.admMenuInfoView" parameterClass="hashmap" resultClass="egovMap" >
	    /* MenuManageDAO.admMenuInfoView - mariadb */
	    SELECT	   
	          a.menu_gubun
	        , a.menu_no
	        , a.upper_menu_no
	        , a.menu_ordr
	        , a.use_yn
	        , a.url_gubun
	        , a.url_path
	        , a.sso_use_yn
	        , a.menu_depth
	        , a.menu_img_class
	        , $DB_NEOS$FN_GetMultiLang('kr',B.menu_nm_multi) AS menu_nm_kr
	        , $DB_NEOS$FN_GetMultiLang('en',B.menu_nm_multi) AS menu_nm_en 
	        , $DB_NEOS$FN_GetMultiLang('jp',B.menu_nm_multi) AS menu_nm_jp
	        , $DB_NEOS$FN_GetMultiLang('cn',B.menu_nm_multi) AS menu_nm_cn
	        , b.menu_dc      
	        , A.menu_auth_type
	        , A.public_yn
  		     FROM $DB_NEOS$t_co_menu_adm A, $DB_NEOS$v_t_co_menu_adm_multi B
	    WHERE A.menu_no = B.menu_no  
	     AND a.menu_no =  #menuNo#
	     LIMIT 1
		

	</select>	
	
	
	<select id="MenuManageDAO.selectMenuTreeList" parameterClass="hashmap" resultClass="egovMap" >
	    /* MenuManageDAO.selectMenuTreeList - mariadb */
		SELECT  
			C.menu_no, 
			C.menu_gubun,
			C.upper_menu_no, 
			$DB_NEOS$FN_GetMultiLang(#langCode#,D.menu_nm_multi) as name, 
			D.menu_dc, 
			C.url_path, 
			C.sso_use_yn,
			A.LEVEL AS lvl,
			(SELECT COUNT(menu_no) FROM $DB_NEOS$t_co_menu WHERE upper_menu_no = C.menu_no AND USE_YN = 'Y' AND IFNULL(delete_yn , 'N') <![CDATA[ <> ]]> 'Y') AS child_count,
			CASE WHEN (SELECT COUNT(menu_no) FROM $DB_NEOS$t_ea_box WHERE upper_menu_no = C.menu_no) > 0 THEN 'true' ELSE 'false' END AS opened ,
			C.url_gubun,
			C.menu_img_class,
			C.menu_type,
			C.menu_ordr
		FROM    (
				SELECT  $DB_NEOS$get_menu_connect_by_id(menu_no) AS menu_no, @level AS LEVEL
				FROM    (
					SELECT  @start_with := $startWith$,
						@menu_no := @start_with,
						@level := 0
					) vars, $DB_NEOS$t_co_menu
				WHERE   @menu_no IS NOT NULL AND use_yn = 'Y'
		         ) A
		        <isNotEqual property="userSe" compareValue="MASTER">
		        <isNotEmpty property="authCodeList">
		        INNER JOIN $DB_NEOS$t_co_menu_auth B
		        ON    A.menu_no = B.menu_no
		        AND   B.author_code <iterate prepend="IN" property="authCodeList" open="(" close=")" conjunction=","> #authCodeList[]# </iterate>
		        </isNotEmpty>
		        </isNotEqual>
		        INNER JOIN $DB_NEOS$t_co_menu C ON C.menu_no = A.menu_no
		        LEFT OUTER JOIN $DB_NEOS$v_t_co_menu_multi D ON C.menu_no = D.menu_no
<!-- 		        t_co_code_detail E, -->
				LEFT OUTER JOIN $DB_NEOS$t_co_menu_comp E ON C.menu_no = E.menu_no AND E.comp_seq = #compSeq#
		WHERE C.USE_YN = 'Y'
		AND   IF(public_yn = 'Y' , #compSeq# , IFNULL(E.comp_seq, '0')) = #compSeq#
<!-- 			AND C.menu_gubun = E.detail_code -->
		<isNotEmpty property="level">
		AND   A.LEVEL = $level$
		</isNotEmpty>
		AND IFNULL(C.delete_yn , 'N') <![CDATA[ <> ]]> 'Y'
		GROUP BY A.menu_no
		ORDER BY lvl , menu_ordr
	</select> 
	
	<select id="MenuManageDAO.selectMenuJsTreeList"  parameterClass="hashmap" resultClass="egovMap" >
		 /* MenuManageDAO.selectMenuJsTreeList MenuJsTree 가져오기 - mariadb */
		
		 SELECT TB.menu_no
		      , TB.menu_gubun
		      , TB.upper_menu_no
		      , TB.NAME
		      , TB.menu_dc
		      , TB.url_path
		      , TB.sso_use_yn
		      , TB.child_count
		      , TB.ea_child_count
		      , TB.url_gubun
		      , TB.menu_img_class
		      , TB.menu_type
		      , TB.menu_ordr
		 FROM(	
		      SELECT A.menu_no 
		           , A.menu_gubun
		           , A.upper_menu_no 
		           , $DB_NEOS$FN_GetMultiLang(#langCode#,B.menu_nm_multi) AS NAME 
		           , B.menu_dc 
		           , A.url_path
		           , A.sso_use_yn
		           , (SELECT COUNT(menu_no) FROM $DB_NEOS$t_co_menu WHERE upper_menu_no = A.menu_no AND USE_YN = 'Y' AND IFNULL(delete_yn , 'N') <![CDATA[ <> ]]> 'Y') AS child_count
		           , (SELECT COUNT(menu_no) FROM $DB_NEOS$t_ea_box WHERE upper_menu_no = A.menu_no AND emp_seq = #empSeq# AND  comp_seq = #compSeq# AND use_yn = 'Y' AND menu_gubun = 'MENU010' ) AS ea_child_count 
		           , A.url_gubun
		           , A.menu_img_class
		           , A.menu_type
		           , A.menu_ordr
		      FROM $DB_NEOS$t_co_menu A LEFT OUTER JOIN $DB_NEOS$v_t_co_menu_multi B ON A.menu_no = B.menu_no
		      <isNotEqual property="userSe" compareValue="MASTER">
		      <isNotEmpty property="authCodeList">
		      INNER JOIN $DB_NEOS$t_co_menu_auth C
		      ON    A.menu_no = C.menu_no
		      AND   C.author_code <iterate prepend="IN" property="authCodeList" open="(" close=")" conjunction=","> #authCodeList[]# </iterate>
		      </isNotEmpty>
		      </isNotEqual>	
<!-- 			        ,t_co_code_detail D, -->
		      LEFT OUTER JOIN $DB_NEOS$t_co_menu_comp E ON C.menu_no = E.menu_no AND E.comp_seq = #compSeq#
		      WHERE IF(public_yn = 'Y' , #compSeq# , IFNULL(E.comp_seq, '0')) = #compSeq#
		      AND   A.use_yn = 'Y'
		      AND   IFNULL(A.delete_yn , 'N') <![CDATA[ <> ]]> 'Y'
		      AND A.upper_menu_no = #upperMenuNo#
		      GROUP BY C.menu_no
		      <isEqual property="eaPrivateBox" compareValue="Y">
		      UNION ALL
		      SELECT menu_no
		           , menu_gubun
		           , upper_menu_no 
		           , menu_nm AS NAME
		           , menu_dc
		           , url_path
		           , sso_use_yn
		           , (SELECT COUNT(menu_no) FROM $DB_NEOS$t_ea_box WHERE upper_menu_no = A.menu_no AND emp_seq = #empSeq# AND  comp_seq = #compSeq# AND use_yn = 'Y' AND menu_gubun = 'MENU010') AS child_count
		           , 0 AS ea_child_count 
		           , url_gubun
		           , menu_img_class
		           , A.menu_type
		           , menu_ordr
		      FROM $DB_NEOS$t_ea_box A
		      WHERE upper_menu_no = #upperMenuNo#
		      AND comp_seq = #compSeq#
		      AND emp_seq = #empSeq#
		      AND use_yn = 'Y'
		      AND menu_gubun = 'MENU010'
		</isEqual>
		) TB ORDER BY menu_ordr
	</select>
	
	<select id="MenuManageDAO.selectFirstMenuInfo" parameterClass="hashmap" resultClass="egovMap" >
	    /* MenuManageDAO.selectFirstMenuInfo - mariadb */
		SELECT  
			C.menu_no, 
			C.menu_gubun,
			C.upper_menu_no, 
			$DB_NEOS$FN_GetMultiLang(#langCode#,D.menu_nm_multi) as menu_nm, 
			D.menu_dc, 
			C.url_path, 
			C.sso_use_yn,
			A.LEVEL AS lvl,
			C.url_gubun,
			C.menu_img_class,
			C.menu_ordr
		FROM    (
				SELECT  $DB_NEOS$get_menu_connect_by_id(menu_no) AS menu_no, @level AS LEVEL
				FROM    (
					SELECT  @start_with := $startWith$,
						@menu_no := @start_with,
						@level := 0
					) vars, $DB_NEOS$t_co_menu
				WHERE   @menu_no IS NOT NULL
		         ) A
<!-- 		        <isNotEqual property="userSe" compareValue="MASTER"> -->
<!-- 		        <isNotEmpty property="authCodeList"> -->
<!-- 		        INNER JOIN $DB_NEOS$t_co_menu_auth B -->
<!-- 		        ON    A.menu_no = B.menu_no -->
<!-- 		        AND   B.author_code <iterate prepend="IN" property="authCodeList" open="(" close=")" conjunction=","> #authCodeList[]# </iterate> -->
<!-- 		        </isNotEmpty> -->
<!-- 		        </isNotEqual> -->
		        INNER JOIN $DB_NEOS$t_co_menu C ON C.menu_no = A.menu_no
		        LEFT OUTER JOIN $DB_NEOS$v_t_co_menu_multi D ON C.menu_no = D.menu_no
		        LEFT OUTER JOIN $DB_NEOS$t_co_menu_comp E ON C.menu_no = E.menu_no AND E.comp_seq = #compSeq#
		        INNER JOIN $DB_NEOS$t_co_menu_auth MA ON    A.menu_no = MA.menu_no		      
		        INNER JOIN $DB_NEOS$t_co_authcode AC 
		        ON    MA.author_code = AC.author_code
		        AND   AC.comp_seq IN (#compSeq# , '0') 
		        AND   AC.author_type IN('001', '002') 
		        AND   AC.author_use_yn = 'Y'
		        INNER JOIN (
		                    SELECT author_code FROM $DB_NEOS$t_co_auth_relate U
		                    WHERE  (author_type = '002' and u.dept_seq = #deptSeq#) 
		                        or (author_type <![CDATA[ <> ]]> '002' and u.emp_seq = #empSeq#)
		                    ) AR 
		         ON   AR.author_code AND AC.author_code              
		WHERE C.use_yn = 'Y'
<!-- 			AND C.menu_no = E.menu_no -->
<!-- 			AND E.comp_seq = #compSeq# -->
		AND   IF(public_yn = 'Y' , #compSeq# , IFNULL(E.comp_seq, '0')) = #compSeq#
		AND   IFNULL(C.delete_yn , 'N') <![CDATA[ <> ]]> 'Y'
		ORDER BY IFNULL(C.menu_ordr,99999)
		LIMIT 1
	</select> 
	
	<select id="MenuManageDAO.selectFirstAdminMenuInfo" parameterClass="hashmap" resultClass="egovMap" >
	    /* MenuManageDAO.selectFirstAdminMenuInfo - mariadb */
		SELECT  
			C.menu_no, 
			C.menu_gubun,
			C.upper_menu_no, 
			$DB_NEOS$FN_GetMultiLang(#langCode#,D.menu_nm_multi) as menu_nm, 
			D.menu_dc, 
			C.url_path, 
			C.sso_use_yn,
			A.LEVEL AS lvl,
			C.url_gubun,
			C.menu_img_class,
			C.menu_ordr
		FROM    (
				SELECT  $DB_NEOS$get_adm_menu_connect_by_id2(menu_no,'ADMIN') AS menu_no, @level AS LEVEL
				FROM    (
					SELECT  @start_with := $startWith$,
						@menu_no := @start_with,
						@level := 0
					) vars, $DB_NEOS$t_co_menu_adm
				WHERE   @menu_no IS NOT NULL 
		         ) A
		 INNER JOIN $DB_NEOS$t_co_menu_adm C ON A.menu_no = C.menu_no
		 LEFT OUTER JOIN $DB_NEOS$v_t_co_menu_adm_multi D ON C.menu_no = D.menu_no
		 <isNotEqual property="userSe" compareValue="MASTER">  
		 INNER JOIN $DB_NEOS$t_co_menu_auth MA
		 ON    A.menu_no = MA.menu_no		      
		 INNER JOIN $DB_NEOS$t_co_authcode AC
		 ON    MA.author_code = AC.author_code
		 AND   AC.comp_seq in (#compSeq# , '0')
		 AND   AC.author_type = '005' 
		 AND   AC.author_use_yn = 'Y'
		 INNER JOIN $DB_NEOS$t_co_auth_relate AR
		 ON    AC.author_code = AR.author_code
		 AND   AR.comp_seq = #compSeq# 
		 AND   AR.emp_seq = #empSeq#
		 LEFT  OUTER JOIN $DB_NEOS$t_co_menu_adm_comp E ON A.menu_no = E.menu_no AND  E.comp_seq = #compSeq#
		 </isNotEqual> 		    
		WHERE C.menu_auth_type = #menuAuthType#
		AND C.use_yn = 'Y'
		AND IFNULL(C.delete_yn , 'N') <![CDATA[ <> ]]> 'Y'
		<isNotEqual property="userSe" compareValue="MASTER">
		AND   IF(public_yn = 'Y' , #compSeq# , IFNULL(E.comp_seq, '0')) = #compSeq#
		</isNotEqual>
		ORDER BY IFNULL(C.menu_ordr,99999)
		LIMIT 1
	</select> 
	

	<select id="MenuManageDAO.selectAdminMenuJsTreeList"  parameterClass="hashmap" resultClass="egovMap" >
		 /* MenuManageDAO.selectAdminMenuJsTreeList 관리자 MenuJsTree 가져오기 - mariadb */
		 SELECT A.menu_no
		      , A.upper_menu_no
		      , $DB_NEOS$FN_GetMultiLang(#langCode#,B.menu_nm_multi) AS NAME
		      , B.menu_dc
		      , A.url_path
		      , A.sso_use_yn
		      , (SELECT COUNT(menu_no) FROM $DB_NEOS$t_co_menu_adm WHERE upper_menu_no = A.menu_no AND USE_YN = 'Y' AND IFNULL(delete_yn , 'N') <![CDATA[ <> ]]> 'Y') AS child_count 
		      , 0 AS ea_child_count 
<!-- 		      , (SELECT menu_no FROM $DB_NEOS$t_co_auth_adm_user_relate WHERE menu_no = A.menu_no AND emp_seq = #empSeq# AND comp_seq = #compSeq#) AS auth_menu_no -->
		      , A.url_gubun
		      , A.menu_img_class
		      , A.menu_ordr
		 FROM $DB_NEOS$t_co_menu_adm A 
		 LEFT OUTER JOIN $DB_NEOS$v_t_co_menu_adm_multi B ON A.menu_no = B.menu_no
<!-- 		        <isNotEqual property="userSe" compareValue="MASTER">     -->
<!-- 		        INNER JOIN $DB_NEOS$t_co_auth_adm_user_relate R -->
<!-- 		        ON    R.menu_no = A.menu_no AND emp_seq = #empSeq# AND comp_seq = #compSeq# -->

<!-- 		        </isNotEqual>    -->
		 <isNotEqual property="userSe" compareValue="MASTER">  
		 INNER JOIN $DB_NEOS$t_co_menu_auth MA
		 ON    A.menu_no = MA.menu_no		      
		 INNER JOIN $DB_NEOS$t_co_authcode AC
		 ON    MA.author_code = AC.author_code
		 AND   AC.comp_seq in (#compSeq# , '0')
		 AND   AC.author_type = '005' 
		 AND   AC.author_use_yn = 'Y'
		 INNER JOIN $DB_NEOS$t_co_auth_relate AR
		 ON    AC.author_code = AR.author_code
		 AND   AR.comp_seq = #compSeq# 
		 AND   AR.emp_seq = #empSeq#
		 LEFT  OUTER JOIN $DB_NEOS$t_co_menu_adm_comp E ON A.menu_no = E.menu_no AND  E.comp_seq = #compSeq#
		 </isNotEqual> 
		 WHERE A.menu_auth_type = #menuAuthType#
		 AND   A.use_yn = 'Y'  	
		 AND   A.upper_menu_no = #upperMenuNo#
		 <isNotEqual property="userSe" compareValue="MASTER">
		 AND   IF(public_yn = 'Y' , #compSeq# , IFNULL(E.comp_seq, '0')) = #compSeq#
		 </isNotEqual>
		 AND   IFNULL(A.delete_yn , 'N') <![CDATA[ <> ]]> 'Y'
		 GROUP BY A.menu_no
		 ORDER BY menu_ordr
	</select>
	
	<select id="MenuManageDAO.selectAdminMenuTreeListAuth" parameterClass="hashmap" resultClass="egovMap" >
		 /* MenuManageDAO.selectAdminMenuTreeListAuth - mariadb */
		 SELECT C.menu_no
		      , C.upper_menu_no
		      , $DB_NEOS$FN_GetMultiLang(#langCode#,D.menu_nm_multi) AS NAME
		      , D.menu_dc
		      , C.url_path
		      , C.sso_use_yn
		      , A.LEVEL AS lvl
		      , (SELECT COUNT(menu_no) FROM $DB_NEOS$t_co_menu_adm WHERE upper_menu_no = C.menu_no AND USE_YN = 'Y' AND IFNULL(delete_yn , 'N') <![CDATA[ <> ]]> 'Y') AS child_count
<!-- 		      , (SELECT menu_no FROM $DB_NEOS$t_co_auth_adm_user_relate WHERE menu_no = A.menu_no AND emp_seq = #empSeq# AND comp_seq = #compSeq#) AS auth_menu_no -->
		      , C.url_gubun
		      , C.menu_img_class
		      , C.menu_ordr
		 FROM    (
				SELECT  $DB_NEOS$get_adm_menu_connect_by_id2(menu_no,'ADMIN') AS menu_no, @level AS LEVEL
				FROM    (
					SELECT  @start_with := $startWith$,
						@menu_no := @start_with,
						@level := 0
						
					) vars, $DB_NEOS$t_co_menu_adm
				WHERE   @menu_no IS NOT NULL
		         ) A
		 INNER JOIN $DB_NEOS$t_co_menu_adm C ON C.menu_no = A.menu_no
		 LEFT OUTER JOIN $DB_NEOS$v_t_co_menu_adm_multi D ON C.menu_no = D.menu_no
		 <isNotEqual property="userSe" compareValue="MASTER">  
		 INNER JOIN $DB_NEOS$t_co_menu_auth MA
		 ON    C.menu_no = MA.menu_no		      
		 INNER JOIN $DB_NEOS$t_co_authcode AC
		 ON    MA.author_code = AC.author_code
		 AND   AC.comp_seq in (#compSeq# , '0')
		 AND   AC.author_type = '005' 
		 AND   AC.author_use_yn = 'Y'
		 INNER JOIN $DB_NEOS$t_co_auth_relate AR
		 ON    AC.author_code = AR.author_code
		 AND   AR.comp_seq = #compSeq# 
		 AND   AR.emp_seq = #empSeq#
		 LEFT OUTER JOIN $DB_NEOS$t_co_menu_adm_comp E ON C.menu_no = E.menu_no AND  E.comp_seq = #compSeq#
		 </isNotEqual>
		 WHERE C.use_yn = 'Y'
		 AND   C.menu_auth_type = #menuAuthType#
		 <isNotEmpty property="level">
		 AND   A.LEVEL = $level$
		 </isNotEmpty>
		 <isNotEqual property="userSe" compareValue="MASTER">
		 AND   IF(public_yn = 'Y' , #compSeq# , IFNULL(E.comp_seq, '0')) = #compSeq#
		 </isNotEqual>
		 AND   IFNULL(delete_yn , 'N') <![CDATA[ <> ]]> 'Y'
		 GROUP BY A.menu_no
		 ORDER BY lvl , menu_ordr
<!-- 		ORDER BY IFNULL(C.menu_ordr,99999) -->
	</select> 
	
	<select id="MenuManageDAO.selectMenuListOfUrl" parameterClass="hashmap" resultClass="egovMap">
		SELECT m.menu_no, m.upper_menu_no, $DB_NEOS$FN_GetMultiLang(#langCode#,mm.menu_nm_multi) as menu_nm, m.url_path, m.url_gubun, m.menu_img_class
		FROM
			(
				SELECT  @r AS _id,
					 (
					 SELECT  @r := upper_menu_no
					 FROM    $DB_NEOS$t_co_menu
					 WHERE   menu_no = _id
					 ) AS parent,
					 @l := @l + 1 AS lvl
				 FROM    (
					 SELECT  @r := (SELECT menu_no 
									FROM $DB_NEOS$t_co_menu 
									WHERE 
										(
											CASE WHEN url_gubun IS NOT NULL THEN CONCAT('/',url_gubun,url_path)
											ELSE url_path
											END
										) LIKE '%$urlPath$%'
									LIMIT 1),
						 @l := 0,
						 @cl := 0
					 ) vars,
					 $DB_NEOS$t_co_menu h
				WHERE    @r > 10
			) v, $DB_NEOS$t_co_menu m, $DB_NEOS$v_t_co_menu_multi mm
		WHERE
			v._id = m.menu_no
			AND m.menu_no = mm.menu_no
			AND m.use_yn ='Y'
			AND IFNULL(m.delete_yn , 'N') <![CDATA[ <> ]]> 'Y'
			ORDER BY v.lvl DESC
	</select>
	
	
	<select id="MenuManageDAO.selectMenuAdminListOfUrl" parameterClass="hashmap" resultClass="egovMap">
		SELECT m.menu_no, m.upper_menu_no, $DB_NEOS$FN_GetMultiLang(#langCode#,mm.menu_nm_multi) as menu_nm, 
		m.url_path, m.url_gubun, m.menu_img_class
		FROM
			(
				SELECT  @r AS _id,
					 (
					 SELECT  @r := upper_menu_no
					 FROM    $DB_NEOS$t_co_menu
					 WHERE   menu_no = _id
					 ) AS parent,
					 @l := @l + 1 AS lvl
				 FROM    (
					 SELECT  @r := (SELECT menu_no 
									FROM $DB_NEOS$t_co_menu_adm 
									WHERE 
										(
											CASE WHEN url_gubun IS NOT NULL THEN CONCAT('/',url_gubun,url_path)
											ELSE url_path
											END
										) LIKE '%$urlPath$%'
										LIMIT 1),
						 @l := 0,
						 @cl := 0
					 ) vars,
					 $DB_NEOS$t_co_menu h
				WHERE    @r > 10
			) v, $DB_NEOS$t_co_menu_adm m, $DB_NEOS$v_t_co_menu_adm_multi mm
		WHERE
			v._id = m.menu_no
			AND m.menu_no = mm.menu_no
			AND m.use_yn ='Y'
			AND IFNULL(m.delete_yn , 'N') <![CDATA[ <> ]]> 'Y'
		ORDER BY v.lvl DESC
	</select>
	
	<select id="MenuManageDAO.selectMyMenuList" parameterClass="hashmap" resultClass="egovMap">
		SELECT c.menu_no, $DB_NEOS$FN_GetMultiLang(#langCode#,b.menu_nm_multi) as menu_nm, a.url_gubun, a.url_path, a.menu_img_class, a.menu_img_path, 
			$DB_NEOS$get_menu_first_info('0', C.menu_no, #langCode#) AS gnb_menu_no,
			$DB_NEOS$get_menu_first_info('1', C.menu_no, #langCode#) AS gnb_menu_nm
		FROM $DB_NEOS$t_co_menu_mymenu c left outer join (select * from $DB_NEOS$t_co_menu where use_yn = 'Y' ) a on a.menu_no = c.menu_no
			left outer join $DB_NEOS$v_t_co_menu_multi b on b.menu_no = c.menu_no
		WHERE
		       c.emp_seq = #empSeq#
		       AND c.dept_seq = #deptSeq#
	</select>
	
	
	
	<insert id="MenuManageDAO.insertMyMenuList" parameterClass="java.util.List">
	   INSERT $DB_NEOS$t_co_menu_mymenu 
			(`menu_no`, 
			`emp_seq`, 
			`dept_seq`
			)
		VALUES
	   <dynamic>
	       <iterate conjunction=",">
    	      (#[].menuNo# , #[].empSeq#, #[].deptSeq#)
	       </iterate>
	   </dynamic>
	
	</insert>
	
	<delete id="MenuManageDAO.deleteMyMenuList" parameterClass="hashmap">
		delete from $DB_NEOS$t_co_menu_mymenu 
		where
		`emp_seq` = #empSeq# and `dept_seq` = #deptSeq#
	
	
	</delete>
	
	<select id="MenuManageDAO.eaBoxChildCnt" parameterClass="hashmap" resultClass="int">
		 SELECT COUNT(*) 
		  FROM $DB_NEOS$t_ea_box 
		 WHERE upper_menu_no = #eaId#
		   AND comp_seq = #compSeq#
		   AND emp_seq = #empSeq#  
	</select>
	<select id="MenuManageDAO.selectMenuListOfMenuNo" parameterClass="hashmap" resultClass="egovMap">
		SELECT m.menu_no, m.upper_menu_no, $DB_NEOS$FN_GetMultiLang(#langCode#,mm.menu_nm_multi) as menu_nm, m.url_path, m.url_gubun, m.menu_img_class
		FROM
			(
				SELECT  @r AS _id,
					 (
					 SELECT  @r := upper_menu_no
					 FROM    $DB_NEOS$t_co_menu
					 WHERE   menu_no = _id
					 ) AS parent,
					 @l := @l + 1 AS lvl
				 FROM    (
					 SELECT  @r := $menuNo$,
						 @l := 0,
						 @cl := 0
					 ) vars,
					 t_co_menu h
				WHERE    @r > 10
			) v, $DB_NEOS$t_co_menu m, $DB_NEOS$v_t_co_menu_multi mm
		WHERE
			v._id = m.menu_no
			AND m.menu_no = mm.menu_no
			AND m.use_yn ='Y'
			AND IFNULL(m.delete_yn , 'N') <![CDATA[ <> ]]> 'Y'
			ORDER BY v.lvl DESC
	</select>
	
		<select id="MenuManageDAO.selectEaEmpMenuTreeList" parameterClass="hashmap" resultClass="egovMap" >
		/* MenuManageDAO.selectEaEmpMenuTreeList - mariaDB */
		SELECT  
			C.menu_no, 
			C.menu_gubun,
			C.upper_menu_no, 
			C.menu_nm as name, 
			C.menu_dc, 
			C.url_path, 
			C.sso_use_yn,
			A.LEVEL AS lvl,
			(SELECT COUNT(menu_no) FROM $DB_NEOS$t_ea_box WHERE upper_menu_no = C.menu_no AND emp_seq = #empSeq# AND comp_seq = #compSeq# AND use_yn = 'Y' AND menu_gubun = 'MENU010') AS child_count,
			C.url_gubun,
			C.menu_img_class,
			C.menu_ordr
		FROM    (
				SELECT  $DB_NEOS$get_ea_box_connect_by_id(menu_no) AS menu_no, @level AS LEVEL
				FROM    (
					SELECT  @start_with := $eaStartWith$,
						@menu_no := @start_with,
						@level := 0
					) vars, $DB_NEOS$t_ea_box
				WHERE   @menu_no IS NOT NULL AND use_yn = 'Y'
		         ) A,
		        $DB_NEOS$t_ea_box C 
		WHERE 
			C.menu_no = A.menu_no
			AND C.emp_seq = #empSeq#
			AND C.comp_seq = #compSeq#
			AND C.use_yn = 'Y'
			AND C.menu_gubun = 'MENU010'
			AND use_yn = 'Y'
			<isNotEmpty property="level">
			AND A.LEVEL = $level$
			</isNotEmpty>
		GROUP BY A.menu_no
<!-- 		ORDER BY IFNULL(C.menu_ordr,99999) -->
		ORDER BY lvl , menu_ordr
		
		
	</select> 	
	
	<select id="MenuManageDAO.selectEAPrivateMenuTreeList" parameterClass="hashmap" resultClass="egovMap" >
		/*MenuManageDAO.selectEAPrivateMenuTreeList 개인결재함 가져오기 - mariaDB */
		
		SELECT  menu_no, 
				menu_gubun,
				upper_menu_no, 
				menu_nm AS NAME, 
				menu_dc, 
				url_path, 
				sso_use_yn,
				(SELECT COUNT(menu_no) FROM $DB_NEOS$t_ea_box WHERE upper_menu_no = A.menu_no AND emp_seq = #empSeq# AND comp_seq = #compSeq# AND use_yn = 'Y' AND menu_gubun = 'MENU010') AS child_count,
				url_gubun,
				menu_img_class,
				menu_ordr 
			  FROM $DB_NEOS$t_ea_box A
			 WHERE upper_menu_no = #upperMenuNo#
			   AND comp_seq = #compSeq#
			   AND emp_seq = #empSeq#
			   AND use_yn = 'Y'
			   AND menu_gubun = 'MENU010'
			 ORDER BY menu_ordr
		
		
	</select> 	
	
	
	<select id="MenuManageDAO.selectCompList" parameterClass="hashMap" resultClass="egovMap">
		
		SELECT comp_seq
		  FROM $DB_NEOS$t_co_comp	
		 WHERE group_seq = #loginVO.groupSeq#
		   AND use_yn = 'Y'
		   AND native_lang_code = #loginVO.langCode#
			
	</select>
	
	<insert id="MenuManageDAO.insertMenuComp" parameterClass="hashMap">
	    /* MenuManageDAO.insertMenuComp - mariadb */
<!-- 		INSERT INTO $tbName$ -->
		<isEqual property="type" compareValue="USER">
		INSERT INTO $DB_NEOS$t_co_menu_comp
	    </isEqual>	
		<isEqual property="type" compareValue="ADMIN">
		INSERT INTO $DB_NEOS$t_co_menu_adm_comp
		</isEqual>		
		( menu_no , comp_seq ) 
		VALUES
	   <dynamic>
	   	   <iterate property="arrCompList" conjunction="," >
		(#menuNo#, #arrCompList[]#)
	       </iterate>
	   </dynamic>
	</insert>
	    	      	
	    	      		    	      	
	<delete id="MenuManageDAO.deleteMenuComp" parameterClass="hashMap"> 
		<isEqual property="type" compareValue="USER">
		DELETE FROM $DB_NEOS$t_co_menu_comp
	    </isEqual>	
		<isEqual property="type" compareValue="ADMIN">
		DELETE FROM $DB_NEOS$t_co_menu_adm_comp
		</isEqual>
			where menu_no = #menuNo#
	
	</delete>
	
	<select id="MenuManageDAO.getMenuCnt" parameterClass="hashMap" resultClass="hashMap">
		
		call $DB_NEOS$p_menu_cnt(#compSeq#,#deptSeq#,#empSeq#)
		   
	</select>
	
</sqlMap>